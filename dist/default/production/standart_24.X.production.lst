

Microchip MPLAB XC8 Assembler V2.36 build 20220127204148 
                                                                                               Thu Jul 07 16:55:36 2022

Microchip MPLAB XC8 C Compiler v2.36 (Free license) build 20220127204148 Og1 
     1                           	processor	16F1824
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	stringtext1,global,class=STRCODE,delta=2,noexec
     5                           	psect	stringtext2,global,class=STRCODE,delta=2,noexec
     6                           	psect	stringtext3,global,class=STRCODE,delta=2,noexec
     7                           	psect	stringtext4,global,class=STRCODE,delta=2,noexec
     8                           	psect	stringtext5,global,class=STRCODE,delta=2,noexec
     9                           	psect	stringtext6,global,class=STRCODE,delta=2,noexec
    10                           	psect	stringtext7,global,class=STRCODE,delta=2,noexec
    11                           	psect	stringtext8,global,class=STRCODE,delta=2,noexec
    12                           	psect	stringtext9,global,class=STRCODE,delta=2,noexec
    13                           	psect	stringtext10,global,class=STRCODE,delta=2,noexec
    14                           	psect	stringtext11,global,class=STRCODE,delta=2,noexec
    15                           	psect	stringtext12,global,class=STRCODE,delta=2,noexec
    16                           	psect	stringtext13,global,class=STRCODE,delta=2,noexec
    17                           	psect	stringtext14,global,class=STRCODE,delta=2,noexec
    18                           	psect	stringtext15,global,class=STRCODE,delta=2,noexec
    19                           	psect	stringtext16,global,class=STRCODE,delta=2,noexec
    20                           	psect	stringtext17,global,class=STRCODE,delta=2,noexec
    21                           	psect	stringtext18,global,class=STRCODE,delta=2,noexec
    22                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
    23                           	psect	cinit,global,class=CODE,merge=1,delta=2
    24                           	psect	bitbssCOMMON,global,bit,class=COMMON,space=1,delta=1,noexec
    25                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
    26                           	psect	bitbssBANK0,global,bit,class=BANK0,space=1,delta=1,noexec
    27                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,noexec
    28                           	psect	clrtext,global,class=CODE,delta=2
    29                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    30                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    31                           	psect	maintext,global,class=CODE,merge=1,split=1,delta=2,codecov
    32                           	psect	text1,local,class=CODE,merge=1,delta=2,codecov
    33                           	psect	text2,local,class=CODE,merge=1,delta=2,codecov
    34                           	psect	text3,local,class=CODE,merge=1,delta=2,codecov
    35                           	psect	text4,local,class=CODE,merge=1,delta=2,codecov
    36                           	psect	text5,local,class=CODE,merge=1,delta=2,codecov
    37                           	psect	text6,local,class=CODE,merge=1,delta=2,codecov
    38                           	psect	text7,local,class=CODE,merge=1,delta=2,codecov
    39                           	psect	text8,local,class=CODE,merge=1,delta=2,codecov
    40                           	psect	text9,local,class=CODE,merge=1,delta=2,codecov
    41                           	psect	text10,local,class=CODE,merge=1,delta=2,codecov
    42                           	psect	text11,local,class=CODE,merge=1,delta=2,codecov
    43                           	psect	text12,local,class=CODE,merge=1,delta=2,codecov
    44                           	psect	text13,local,class=CODE,merge=1,delta=2,codecov
    45                           	psect	text14,local,class=CODE,merge=1,delta=2,codecov
    46                           	psect	text15,local,class=CODE,merge=1,delta=2,codecov
    47                           	psect	text16,local,class=CODE,merge=1,delta=2,codecov
    48                           	psect	text17,local,class=CODE,merge=1,delta=2,codecov
    49                           	psect	text18,local,class=CODE,merge=1,delta=2,codecov
    50                           	psect	text19,local,class=CODE,merge=1,delta=2,codecov
    51                           	psect	text20,local,class=CODE,merge=1,delta=2,codecov
    52                           	psect	text21,local,class=CODE,merge=1,delta=2,codecov
    53                           	psect	text22,local,class=CODE,merge=1,delta=2,codecov
    54                           	psect	text23,local,class=CODE,merge=1,delta=2,codecov
    55                           	psect	text24,local,class=CODE,merge=1,delta=2,codecov
    56                           	psect	text25,local,class=CODE,merge=1,delta=2,codecov
    57                           	psect	text26,local,class=CODE,merge=1,delta=2,codecov
    58                           	psect	text27,local,class=CODE,merge=1,delta=2,codecov
    59                           	psect	text28,local,class=CODE,merge=1,delta=2,codecov
    60                           	psect	text29,local,class=CODE,merge=1,delta=2,codecov
    61                           	psect	text30,local,class=CODE,merge=1,delta=2,codecov
    62                           	psect	text31,local,class=CODE,merge=1,delta=2,codecov
    63                           	psect	text32,local,class=CODE,merge=1,delta=2,codecov
    64                           	psect	intentry,global,class=CODE,delta=2
    65                           	psect	text34,local,class=CODE,merge=1,delta=2,codecov
    66                           	psect	text35,local,class=CODE,merge=1,delta=2,codecov
    67                           	psect	text36,local,class=CODE,merge=1,delta=2,codecov
    68                           	psect	text37,local,class=CODE,merge=1,delta=2,codecov
    69                           	psect	text38,local,class=CODE,merge=1,delta=2,codecov
    70                           	psect	text39,local,class=CODE,merge=1,delta=2,codecov
    71                           	psect	text40,local,class=CODE,merge=1,delta=2,codecov
    72                           	psect	text41,local,class=CODE,merge=1,delta=2,codecov
    73                           	psect	text42,local,class=CODE,merge=1,delta=2,codecov
    74                           	psect	text43,local,class=CODE,merge=1,delta=2,codecov
    75                           	psect	text44,local,class=CODE,merge=1,delta=2,codecov
    76                           	psect	text45,local,class=CODE,merge=1,delta=2,codecov
    77                           	psect	text46,local,class=CODE,merge=1,delta=2,codecov
    78                           	psect	text47,local,class=CODE,merge=1,delta=2,codecov
    79                           	psect	text48,local,class=CODE,merge=1,delta=2,codecov
    80                           	psect	text49,local,class=CODE,merge=1,delta=2,codecov
    81                           	psect	text50,local,class=CODE,merge=1,delta=2,codecov
    82                           	psect	codecov_info_hdr,global,note,abs,reloc=1,space=6,split=0,delta=1,noexec
    83                           	psect	codecov_info,global,note,abs,reloc=1,space=6,split=0,delta=1,noexec
    84                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    85                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    86                           	dabs	1,0x7E,2
    87  0000                     
    88                           ; Version 2.40
    89                           ; Generated 17/11/2021 GMT
    90                           ; 
    91                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    92                           ; All rights reserved.
    93                           ; 
    94                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    95                           ; 
    96                           ; Redistribution and use in source and binary forms, with or without modification, are
    97                           ; permitted provided that the following conditions are met:
    98                           ; 
    99                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   100                           ;        conditions and the following disclaimer.
   101                           ; 
   102                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   103                           ;        of conditions and the following disclaimer in the documentation and/or other
   104                           ;        materials provided with the distribution. Publication is not required when
   105                           ;        this file is used in an embedded application.
   106                           ; 
   107                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   108                           ;        software without specific prior written permission.
   109                           ; 
   110                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   111                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   112                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   113                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   114                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   115                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   116                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   117                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   118                           ; 
   119                           ; 
   120                           ; Code-generator required, PIC16F1824 Definitions
   121                           ; 
   122                           ; SFR Addresses
   123  0000                     	;# 
   124  0001                     	;# 
   125  0002                     	;# 
   126  0003                     	;# 
   127  0004                     	;# 
   128  0005                     	;# 
   129  0006                     	;# 
   130  0007                     	;# 
   131  0008                     	;# 
   132  0009                     	;# 
   133  000A                     	;# 
   134  000B                     	;# 
   135  000C                     	;# 
   136  000E                     	;# 
   137  0011                     	;# 
   138  0012                     	;# 
   139  0013                     	;# 
   140  0015                     	;# 
   141  0016                     	;# 
   142  0016                     	;# 
   143  0017                     	;# 
   144  0018                     	;# 
   145  0019                     	;# 
   146  001A                     	;# 
   147  001B                     	;# 
   148  001C                     	;# 
   149  001E                     	;# 
   150  001F                     	;# 
   151  008C                     	;# 
   152  008E                     	;# 
   153  0091                     	;# 
   154  0092                     	;# 
   155  0093                     	;# 
   156  0095                     	;# 
   157  0096                     	;# 
   158  0097                     	;# 
   159  0098                     	;# 
   160  0099                     	;# 
   161  009A                     	;# 
   162  009B                     	;# 
   163  009B                     	;# 
   164  009C                     	;# 
   165  009D                     	;# 
   166  009E                     	;# 
   167  010C                     	;# 
   168  010E                     	;# 
   169  0111                     	;# 
   170  0112                     	;# 
   171  0113                     	;# 
   172  0114                     	;# 
   173  0115                     	;# 
   174  0116                     	;# 
   175  0117                     	;# 
   176  0118                     	;# 
   177  0119                     	;# 
   178  011A                     	;# 
   179  011B                     	;# 
   180  011D                     	;# 
   181  011E                     	;# 
   182  018C                     	;# 
   183  018E                     	;# 
   184  0191                     	;# 
   185  0191                     	;# 
   186  0192                     	;# 
   187  0193                     	;# 
   188  0193                     	;# 
   189  0193                     	;# 
   190  0194                     	;# 
   191  0195                     	;# 
   192  0196                     	;# 
   193  0199                     	;# 
   194  019A                     	;# 
   195  019B                     	;# 
   196  019B                     	;# 
   197  019B                     	;# 
   198  019B                     	;# 
   199  019C                     	;# 
   200  019C                     	;# 
   201  019D                     	;# 
   202  019E                     	;# 
   203  019F                     	;# 
   204  020C                     	;# 
   205  020E                     	;# 
   206  0211                     	;# 
   207  0211                     	;# 
   208  0212                     	;# 
   209  0212                     	;# 
   210  0213                     	;# 
   211  0213                     	;# 
   212  0214                     	;# 
   213  0214                     	;# 
   214  0215                     	;# 
   215  0215                     	;# 
   216  0215                     	;# 
   217  0215                     	;# 
   218  0216                     	;# 
   219  0216                     	;# 
   220  0217                     	;# 
   221  0217                     	;# 
   222  0291                     	;# 
   223  0291                     	;# 
   224  0292                     	;# 
   225  0293                     	;# 
   226  0294                     	;# 
   227  0295                     	;# 
   228  0295                     	;# 
   229  0296                     	;# 
   230  0298                     	;# 
   231  0298                     	;# 
   232  0299                     	;# 
   233  029A                     	;# 
   234  029B                     	;# 
   235  029C                     	;# 
   236  029D                     	;# 
   237  029E                     	;# 
   238  029E                     	;# 
   239  0311                     	;# 
   240  0311                     	;# 
   241  0312                     	;# 
   242  0313                     	;# 
   243  0318                     	;# 
   244  0318                     	;# 
   245  0319                     	;# 
   246  031A                     	;# 
   247  038C                     	;# 
   248  038E                     	;# 
   249  0391                     	;# 
   250  0392                     	;# 
   251  0393                     	;# 
   252  039A                     	;# 
   253  039C                     	;# 
   254  039D                     	;# 
   255  039E                     	;# 
   256  039F                     	;# 
   257  0415                     	;# 
   258  0416                     	;# 
   259  0417                     	;# 
   260  041C                     	;# 
   261  041D                     	;# 
   262  041E                     	;# 
   263  0FE4                     	;# 
   264  0FE5                     	;# 
   265  0FE6                     	;# 
   266  0FE7                     	;# 
   267  0FE8                     	;# 
   268  0FE9                     	;# 
   269  0FEA                     	;# 
   270  0FEB                     	;# 
   271  0FED                     	;# 
   272  0FEE                     	;# 
   273  0FEF                     	;# 
   274  0000                     	;# 
   275  0001                     	;# 
   276  0002                     	;# 
   277  0003                     	;# 
   278  0004                     	;# 
   279  0005                     	;# 
   280  0006                     	;# 
   281  0007                     	;# 
   282  0008                     	;# 
   283  0009                     	;# 
   284  000A                     	;# 
   285  000B                     	;# 
   286  000C                     	;# 
   287  000E                     	;# 
   288  0011                     	;# 
   289  0012                     	;# 
   290  0013                     	;# 
   291  0015                     	;# 
   292  0016                     	;# 
   293  0016                     	;# 
   294  0017                     	;# 
   295  0018                     	;# 
   296  0019                     	;# 
   297  001A                     	;# 
   298  001B                     	;# 
   299  001C                     	;# 
   300  001E                     	;# 
   301  001F                     	;# 
   302  008C                     	;# 
   303  008E                     	;# 
   304  0091                     	;# 
   305  0092                     	;# 
   306  0093                     	;# 
   307  0095                     	;# 
   308  0096                     	;# 
   309  0097                     	;# 
   310  0098                     	;# 
   311  0099                     	;# 
   312  009A                     	;# 
   313  009B                     	;# 
   314  009B                     	;# 
   315  009C                     	;# 
   316  009D                     	;# 
   317  009E                     	;# 
   318  010C                     	;# 
   319  010E                     	;# 
   320  0111                     	;# 
   321  0112                     	;# 
   322  0113                     	;# 
   323  0114                     	;# 
   324  0115                     	;# 
   325  0116                     	;# 
   326  0117                     	;# 
   327  0118                     	;# 
   328  0119                     	;# 
   329  011A                     	;# 
   330  011B                     	;# 
   331  011D                     	;# 
   332  011E                     	;# 
   333  018C                     	;# 
   334  018E                     	;# 
   335  0191                     	;# 
   336  0191                     	;# 
   337  0192                     	;# 
   338  0193                     	;# 
   339  0193                     	;# 
   340  0193                     	;# 
   341  0194                     	;# 
   342  0195                     	;# 
   343  0196                     	;# 
   344  0199                     	;# 
   345  019A                     	;# 
   346  019B                     	;# 
   347  019B                     	;# 
   348  019B                     	;# 
   349  019B                     	;# 
   350  019C                     	;# 
   351  019C                     	;# 
   352  019D                     	;# 
   353  019E                     	;# 
   354  019F                     	;# 
   355  020C                     	;# 
   356  020E                     	;# 
   357  0211                     	;# 
   358  0211                     	;# 
   359  0212                     	;# 
   360  0212                     	;# 
   361  0213                     	;# 
   362  0213                     	;# 
   363  0214                     	;# 
   364  0214                     	;# 
   365  0215                     	;# 
   366  0215                     	;# 
   367  0215                     	;# 
   368  0215                     	;# 
   369  0216                     	;# 
   370  0216                     	;# 
   371  0217                     	;# 
   372  0217                     	;# 
   373  0291                     	;# 
   374  0291                     	;# 
   375  0292                     	;# 
   376  0293                     	;# 
   377  0294                     	;# 
   378  0295                     	;# 
   379  0295                     	;# 
   380  0296                     	;# 
   381  0298                     	;# 
   382  0298                     	;# 
   383  0299                     	;# 
   384  029A                     	;# 
   385  029B                     	;# 
   386  029C                     	;# 
   387  029D                     	;# 
   388  029E                     	;# 
   389  029E                     	;# 
   390  0311                     	;# 
   391  0311                     	;# 
   392  0312                     	;# 
   393  0313                     	;# 
   394  0318                     	;# 
   395  0318                     	;# 
   396  0319                     	;# 
   397  031A                     	;# 
   398  038C                     	;# 
   399  038E                     	;# 
   400  0391                     	;# 
   401  0392                     	;# 
   402  0393                     	;# 
   403  039A                     	;# 
   404  039C                     	;# 
   405  039D                     	;# 
   406  039E                     	;# 
   407  039F                     	;# 
   408  0415                     	;# 
   409  0416                     	;# 
   410  0417                     	;# 
   411  041C                     	;# 
   412  041D                     	;# 
   413  041E                     	;# 
   414  0FE4                     	;# 
   415  0FE5                     	;# 
   416  0FE6                     	;# 
   417  0FE7                     	;# 
   418  0FE8                     	;# 
   419  0FE9                     	;# 
   420  0FEA                     	;# 
   421  0FEB                     	;# 
   422  0FED                     	;# 
   423  0FEE                     	;# 
   424  0FEF                     	;# 
   425  0000                     	;# 
   426  0001                     	;# 
   427  0002                     	;# 
   428  0003                     	;# 
   429  0004                     	;# 
   430  0005                     	;# 
   431  0006                     	;# 
   432  0007                     	;# 
   433  0008                     	;# 
   434  0009                     	;# 
   435  000A                     	;# 
   436  000B                     	;# 
   437  000C                     	;# 
   438  000E                     	;# 
   439  0011                     	;# 
   440  0012                     	;# 
   441  0013                     	;# 
   442  0015                     	;# 
   443  0016                     	;# 
   444  0016                     	;# 
   445  0017                     	;# 
   446  0018                     	;# 
   447  0019                     	;# 
   448  001A                     	;# 
   449  001B                     	;# 
   450  001C                     	;# 
   451  001E                     	;# 
   452  001F                     	;# 
   453  008C                     	;# 
   454  008E                     	;# 
   455  0091                     	;# 
   456  0092                     	;# 
   457  0093                     	;# 
   458  0095                     	;# 
   459  0096                     	;# 
   460  0097                     	;# 
   461  0098                     	;# 
   462  0099                     	;# 
   463  009A                     	;# 
   464  009B                     	;# 
   465  009B                     	;# 
   466  009C                     	;# 
   467  009D                     	;# 
   468  009E                     	;# 
   469  010C                     	;# 
   470  010E                     	;# 
   471  0111                     	;# 
   472  0112                     	;# 
   473  0113                     	;# 
   474  0114                     	;# 
   475  0115                     	;# 
   476  0116                     	;# 
   477  0117                     	;# 
   478  0118                     	;# 
   479  0119                     	;# 
   480  011A                     	;# 
   481  011B                     	;# 
   482  011D                     	;# 
   483  011E                     	;# 
   484  018C                     	;# 
   485  018E                     	;# 
   486  0191                     	;# 
   487  0191                     	;# 
   488  0192                     	;# 
   489  0193                     	;# 
   490  0193                     	;# 
   491  0193                     	;# 
   492  0194                     	;# 
   493  0195                     	;# 
   494  0196                     	;# 
   495  0199                     	;# 
   496  019A                     	;# 
   497  019B                     	;# 
   498  019B                     	;# 
   499  019B                     	;# 
   500  019B                     	;# 
   501  019C                     	;# 
   502  019C                     	;# 
   503  019D                     	;# 
   504  019E                     	;# 
   505  019F                     	;# 
   506  020C                     	;# 
   507  020E                     	;# 
   508  0211                     	;# 
   509  0211                     	;# 
   510  0212                     	;# 
   511  0212                     	;# 
   512  0213                     	;# 
   513  0213                     	;# 
   514  0214                     	;# 
   515  0214                     	;# 
   516  0215                     	;# 
   517  0215                     	;# 
   518  0215                     	;# 
   519  0215                     	;# 
   520  0216                     	;# 
   521  0216                     	;# 
   522  0217                     	;# 
   523  0217                     	;# 
   524  0291                     	;# 
   525  0291                     	;# 
   526  0292                     	;# 
   527  0293                     	;# 
   528  0294                     	;# 
   529  0295                     	;# 
   530  0295                     	;# 
   531  0296                     	;# 
   532  0298                     	;# 
   533  0298                     	;# 
   534  0299                     	;# 
   535  029A                     	;# 
   536  029B                     	;# 
   537  029C                     	;# 
   538  029D                     	;# 
   539  029E                     	;# 
   540  029E                     	;# 
   541  0311                     	;# 
   542  0311                     	;# 
   543  0312                     	;# 
   544  0313                     	;# 
   545  0318                     	;# 
   546  0318                     	;# 
   547  0319                     	;# 
   548  031A                     	;# 
   549  038C                     	;# 
   550  038E                     	;# 
   551  0391                     	;# 
   552  0392                     	;# 
   553  0393                     	;# 
   554  039A                     	;# 
   555  039C                     	;# 
   556  039D                     	;# 
   557  039E                     	;# 
   558  039F                     	;# 
   559  0415                     	;# 
   560  0416                     	;# 
   561  0417                     	;# 
   562  041C                     	;# 
   563  041D                     	;# 
   564  041E                     	;# 
   565  0FE4                     	;# 
   566  0FE5                     	;# 
   567  0FE6                     	;# 
   568  0FE7                     	;# 
   569  0FE8                     	;# 
   570  0FE9                     	;# 
   571  0FEA                     	;# 
   572  0FEB                     	;# 
   573  0FED                     	;# 
   574  0FEE                     	;# 
   575  0FEF                     	;# 
   576  0000                     	;# 
   577  0001                     	;# 
   578  0002                     	;# 
   579  0003                     	;# 
   580  0004                     	;# 
   581  0005                     	;# 
   582  0006                     	;# 
   583  0007                     	;# 
   584  0008                     	;# 
   585  0009                     	;# 
   586  000A                     	;# 
   587  000B                     	;# 
   588  000C                     	;# 
   589  000E                     	;# 
   590  0011                     	;# 
   591  0012                     	;# 
   592  0013                     	;# 
   593  0015                     	;# 
   594  0016                     	;# 
   595  0016                     	;# 
   596  0017                     	;# 
   597  0018                     	;# 
   598  0019                     	;# 
   599  001A                     	;# 
   600  001B                     	;# 
   601  001C                     	;# 
   602  001E                     	;# 
   603  001F                     	;# 
   604  008C                     	;# 
   605  008E                     	;# 
   606  0091                     	;# 
   607  0092                     	;# 
   608  0093                     	;# 
   609  0095                     	;# 
   610  0096                     	;# 
   611  0097                     	;# 
   612  0098                     	;# 
   613  0099                     	;# 
   614  009A                     	;# 
   615  009B                     	;# 
   616  009B                     	;# 
   617  009C                     	;# 
   618  009D                     	;# 
   619  009E                     	;# 
   620  010C                     	;# 
   621  010E                     	;# 
   622  0111                     	;# 
   623  0112                     	;# 
   624  0113                     	;# 
   625  0114                     	;# 
   626  0115                     	;# 
   627  0116                     	;# 
   628  0117                     	;# 
   629  0118                     	;# 
   630  0119                     	;# 
   631  011A                     	;# 
   632  011B                     	;# 
   633  011D                     	;# 
   634  011E                     	;# 
   635  018C                     	;# 
   636  018E                     	;# 
   637  0191                     	;# 
   638  0191                     	;# 
   639  0192                     	;# 
   640  0193                     	;# 
   641  0193                     	;# 
   642  0193                     	;# 
   643  0194                     	;# 
   644  0195                     	;# 
   645  0196                     	;# 
   646  0199                     	;# 
   647  019A                     	;# 
   648  019B                     	;# 
   649  019B                     	;# 
   650  019B                     	;# 
   651  019B                     	;# 
   652  019C                     	;# 
   653  019C                     	;# 
   654  019D                     	;# 
   655  019E                     	;# 
   656  019F                     	;# 
   657  020C                     	;# 
   658  020E                     	;# 
   659  0211                     	;# 
   660  0211                     	;# 
   661  0212                     	;# 
   662  0212                     	;# 
   663  0213                     	;# 
   664  0213                     	;# 
   665  0214                     	;# 
   666  0214                     	;# 
   667  0215                     	;# 
   668  0215                     	;# 
   669  0215                     	;# 
   670  0215                     	;# 
   671  0216                     	;# 
   672  0216                     	;# 
   673  0217                     	;# 
   674  0217                     	;# 
   675  0291                     	;# 
   676  0291                     	;# 
   677  0292                     	;# 
   678  0293                     	;# 
   679  0294                     	;# 
   680  0295                     	;# 
   681  0295                     	;# 
   682  0296                     	;# 
   683  0298                     	;# 
   684  0298                     	;# 
   685  0299                     	;# 
   686  029A                     	;# 
   687  029B                     	;# 
   688  029C                     	;# 
   689  029D                     	;# 
   690  029E                     	;# 
   691  029E                     	;# 
   692  0311                     	;# 
   693  0311                     	;# 
   694  0312                     	;# 
   695  0313                     	;# 
   696  0318                     	;# 
   697  0318                     	;# 
   698  0319                     	;# 
   699  031A                     	;# 
   700  038C                     	;# 
   701  038E                     	;# 
   702  0391                     	;# 
   703  0392                     	;# 
   704  0393                     	;# 
   705  039A                     	;# 
   706  039C                     	;# 
   707  039D                     	;# 
   708  039E                     	;# 
   709  039F                     	;# 
   710  0415                     	;# 
   711  0416                     	;# 
   712  0417                     	;# 
   713  041C                     	;# 
   714  041D                     	;# 
   715  041E                     	;# 
   716  0FE4                     	;# 
   717  0FE5                     	;# 
   718  0FE6                     	;# 
   719  0FE7                     	;# 
   720  0FE8                     	;# 
   721  0FE9                     	;# 
   722  0FEA                     	;# 
   723  0FEB                     	;# 
   724  0FED                     	;# 
   725  0FEE                     	;# 
   726  0FEF                     	;# 
   727  0000                     	;# 
   728  0001                     	;# 
   729  0002                     	;# 
   730  0003                     	;# 
   731  0004                     	;# 
   732  0005                     	;# 
   733  0006                     	;# 
   734  0007                     	;# 
   735  0008                     	;# 
   736  0009                     	;# 
   737  000A                     	;# 
   738  000B                     	;# 
   739  000C                     	;# 
   740  000E                     	;# 
   741  0011                     	;# 
   742  0012                     	;# 
   743  0013                     	;# 
   744  0015                     	;# 
   745  0016                     	;# 
   746  0016                     	;# 
   747  0017                     	;# 
   748  0018                     	;# 
   749  0019                     	;# 
   750  001A                     	;# 
   751  001B                     	;# 
   752  001C                     	;# 
   753  001E                     	;# 
   754  001F                     	;# 
   755  008C                     	;# 
   756  008E                     	;# 
   757  0091                     	;# 
   758  0092                     	;# 
   759  0093                     	;# 
   760  0095                     	;# 
   761  0096                     	;# 
   762  0097                     	;# 
   763  0098                     	;# 
   764  0099                     	;# 
   765  009A                     	;# 
   766  009B                     	;# 
   767  009B                     	;# 
   768  009C                     	;# 
   769  009D                     	;# 
   770  009E                     	;# 
   771  010C                     	;# 
   772  010E                     	;# 
   773  0111                     	;# 
   774  0112                     	;# 
   775  0113                     	;# 
   776  0114                     	;# 
   777  0115                     	;# 
   778  0116                     	;# 
   779  0117                     	;# 
   780  0118                     	;# 
   781  0119                     	;# 
   782  011A                     	;# 
   783  011B                     	;# 
   784  011D                     	;# 
   785  011E                     	;# 
   786  018C                     	;# 
   787  018E                     	;# 
   788  0191                     	;# 
   789  0191                     	;# 
   790  0192                     	;# 
   791  0193                     	;# 
   792  0193                     	;# 
   793  0193                     	;# 
   794  0194                     	;# 
   795  0195                     	;# 
   796  0196                     	;# 
   797  0199                     	;# 
   798  019A                     	;# 
   799  019B                     	;# 
   800  019B                     	;# 
   801  019B                     	;# 
   802  019B                     	;# 
   803  019C                     	;# 
   804  019C                     	;# 
   805  019D                     	;# 
   806  019E                     	;# 
   807  019F                     	;# 
   808  020C                     	;# 
   809  020E                     	;# 
   810  0211                     	;# 
   811  0211                     	;# 
   812  0212                     	;# 
   813  0212                     	;# 
   814  0213                     	;# 
   815  0213                     	;# 
   816  0214                     	;# 
   817  0214                     	;# 
   818  0215                     	;# 
   819  0215                     	;# 
   820  0215                     	;# 
   821  0215                     	;# 
   822  0216                     	;# 
   823  0216                     	;# 
   824  0217                     	;# 
   825  0217                     	;# 
   826  0291                     	;# 
   827  0291                     	;# 
   828  0292                     	;# 
   829  0293                     	;# 
   830  0294                     	;# 
   831  0295                     	;# 
   832  0295                     	;# 
   833  0296                     	;# 
   834  0298                     	;# 
   835  0298                     	;# 
   836  0299                     	;# 
   837  029A                     	;# 
   838  029B                     	;# 
   839  029C                     	;# 
   840  029D                     	;# 
   841  029E                     	;# 
   842  029E                     	;# 
   843  0311                     	;# 
   844  0311                     	;# 
   845  0312                     	;# 
   846  0313                     	;# 
   847  0318                     	;# 
   848  0318                     	;# 
   849  0319                     	;# 
   850  031A                     	;# 
   851  038C                     	;# 
   852  038E                     	;# 
   853  0391                     	;# 
   854  0392                     	;# 
   855  0393                     	;# 
   856  039A                     	;# 
   857  039C                     	;# 
   858  039D                     	;# 
   859  039E                     	;# 
   860  039F                     	;# 
   861  0415                     	;# 
   862  0416                     	;# 
   863  0417                     	;# 
   864  041C                     	;# 
   865  041D                     	;# 
   866  041E                     	;# 
   867  0FE4                     	;# 
   868  0FE5                     	;# 
   869  0FE6                     	;# 
   870  0FE7                     	;# 
   871  0FE8                     	;# 
   872  0FE9                     	;# 
   873  0FEA                     	;# 
   874  0FEB                     	;# 
   875  0FED                     	;# 
   876  0FEE                     	;# 
   877  0FEF                     	;# 
   878  0000                     	;# 
   879  0001                     	;# 
   880  0002                     	;# 
   881  0003                     	;# 
   882  0004                     	;# 
   883  0005                     	;# 
   884  0006                     	;# 
   885  0007                     	;# 
   886  0008                     	;# 
   887  0009                     	;# 
   888  000A                     	;# 
   889  000B                     	;# 
   890  000C                     	;# 
   891  000E                     	;# 
   892  0011                     	;# 
   893  0012                     	;# 
   894  0013                     	;# 
   895  0015                     	;# 
   896  0016                     	;# 
   897  0016                     	;# 
   898  0017                     	;# 
   899  0018                     	;# 
   900  0019                     	;# 
   901  001A                     	;# 
   902  001B                     	;# 
   903  001C                     	;# 
   904  001E                     	;# 
   905  001F                     	;# 
   906  008C                     	;# 
   907  008E                     	;# 
   908  0091                     	;# 
   909  0092                     	;# 
   910  0093                     	;# 
   911  0095                     	;# 
   912  0096                     	;# 
   913  0097                     	;# 
   914  0098                     	;# 
   915  0099                     	;# 
   916  009A                     	;# 
   917  009B                     	;# 
   918  009B                     	;# 
   919  009C                     	;# 
   920  009D                     	;# 
   921  009E                     	;# 
   922  010C                     	;# 
   923  010E                     	;# 
   924  0111                     	;# 
   925  0112                     	;# 
   926  0113                     	;# 
   927  0114                     	;# 
   928  0115                     	;# 
   929  0116                     	;# 
   930  0117                     	;# 
   931  0118                     	;# 
   932  0119                     	;# 
   933  011A                     	;# 
   934  011B                     	;# 
   935  011D                     	;# 
   936  011E                     	;# 
   937  018C                     	;# 
   938  018E                     	;# 
   939  0191                     	;# 
   940  0191                     	;# 
   941  0192                     	;# 
   942  0193                     	;# 
   943  0193                     	;# 
   944  0193                     	;# 
   945  0194                     	;# 
   946  0195                     	;# 
   947  0196                     	;# 
   948  0199                     	;# 
   949  019A                     	;# 
   950  019B                     	;# 
   951  019B                     	;# 
   952  019B                     	;# 
   953  019B                     	;# 
   954  019C                     	;# 
   955  019C                     	;# 
   956  019D                     	;# 
   957  019E                     	;# 
   958  019F                     	;# 
   959  020C                     	;# 
   960  020E                     	;# 
   961  0211                     	;# 
   962  0211                     	;# 
   963  0212                     	;# 
   964  0212                     	;# 
   965  0213                     	;# 
   966  0213                     	;# 
   967  0214                     	;# 
   968  0214                     	;# 
   969  0215                     	;# 
   970  0215                     	;# 
   971  0215                     	;# 
   972  0215                     	;# 
   973  0216                     	;# 
   974  0216                     	;# 
   975  0217                     	;# 
   976  0217                     	;# 
   977  0291                     	;# 
   978  0291                     	;# 
   979  0292                     	;# 
   980  0293                     	;# 
   981  0294                     	;# 
   982  0295                     	;# 
   983  0295                     	;# 
   984  0296                     	;# 
   985  0298                     	;# 
   986  0298                     	;# 
   987  0299                     	;# 
   988  029A                     	;# 
   989  029B                     	;# 
   990  029C                     	;# 
   991  029D                     	;# 
   992  029E                     	;# 
   993  029E                     	;# 
   994  0311                     	;# 
   995  0311                     	;# 
   996  0312                     	;# 
   997  0313                     	;# 
   998  0318                     	;# 
   999  0318                     	;# 
  1000  0319                     	;# 
  1001  031A                     	;# 
  1002  038C                     	;# 
  1003  038E                     	;# 
  1004  0391                     	;# 
  1005  0392                     	;# 
  1006  0393                     	;# 
  1007  039A                     	;# 
  1008  039C                     	;# 
  1009  039D                     	;# 
  1010  039E                     	;# 
  1011  039F                     	;# 
  1012  0415                     	;# 
  1013  0416                     	;# 
  1014  0417                     	;# 
  1015  041C                     	;# 
  1016  041D                     	;# 
  1017  041E                     	;# 
  1018  0FE4                     	;# 
  1019  0FE5                     	;# 
  1020  0FE6                     	;# 
  1021  0FE7                     	;# 
  1022  0FE8                     	;# 
  1023  0FE9                     	;# 
  1024  0FEA                     	;# 
  1025  0FEB                     	;# 
  1026  0FED                     	;# 
  1027  0FEE                     	;# 
  1028  0FEF                     	;# 
  1029  0000                     	;# 
  1030  0001                     	;# 
  1031  0002                     	;# 
  1032  0003                     	;# 
  1033  0004                     	;# 
  1034  0005                     	;# 
  1035  0006                     	;# 
  1036  0007                     	;# 
  1037  0008                     	;# 
  1038  0009                     	;# 
  1039  000A                     	;# 
  1040  000B                     	;# 
  1041  000C                     	;# 
  1042  000E                     	;# 
  1043  0011                     	;# 
  1044  0012                     	;# 
  1045  0013                     	;# 
  1046  0015                     	;# 
  1047  0016                     	;# 
  1048  0016                     	;# 
  1049  0017                     	;# 
  1050  0018                     	;# 
  1051  0019                     	;# 
  1052  001A                     	;# 
  1053  001B                     	;# 
  1054  001C                     	;# 
  1055  001E                     	;# 
  1056  001F                     	;# 
  1057  008C                     	;# 
  1058  008E                     	;# 
  1059  0091                     	;# 
  1060  0092                     	;# 
  1061  0093                     	;# 
  1062  0095                     	;# 
  1063  0096                     	;# 
  1064  0097                     	;# 
  1065  0098                     	;# 
  1066  0099                     	;# 
  1067  009A                     	;# 
  1068  009B                     	;# 
  1069  009B                     	;# 
  1070  009C                     	;# 
  1071  009D                     	;# 
  1072  009E                     	;# 
  1073  010C                     	;# 
  1074  010E                     	;# 
  1075  0111                     	;# 
  1076  0112                     	;# 
  1077  0113                     	;# 
  1078  0114                     	;# 
  1079  0115                     	;# 
  1080  0116                     	;# 
  1081  0117                     	;# 
  1082  0118                     	;# 
  1083  0119                     	;# 
  1084  011A                     	;# 
  1085  011B                     	;# 
  1086  011D                     	;# 
  1087  011E                     	;# 
  1088  018C                     	;# 
  1089  018E                     	;# 
  1090  0191                     	;# 
  1091  0191                     	;# 
  1092  0192                     	;# 
  1093  0193                     	;# 
  1094  0193                     	;# 
  1095  0193                     	;# 
  1096  0194                     	;# 
  1097  0195                     	;# 
  1098  0196                     	;# 
  1099  0199                     	;# 
  1100  019A                     	;# 
  1101  019B                     	;# 
  1102  019B                     	;# 
  1103  019B                     	;# 
  1104  019B                     	;# 
  1105  019C                     	;# 
  1106  019C                     	;# 
  1107  019D                     	;# 
  1108  019E                     	;# 
  1109  019F                     	;# 
  1110  020C                     	;# 
  1111  020E                     	;# 
  1112  0211                     	;# 
  1113  0211                     	;# 
  1114  0212                     	;# 
  1115  0212                     	;# 
  1116  0213                     	;# 
  1117  0213                     	;# 
  1118  0214                     	;# 
  1119  0214                     	;# 
  1120  0215                     	;# 
  1121  0215                     	;# 
  1122  0215                     	;# 
  1123  0215                     	;# 
  1124  0216                     	;# 
  1125  0216                     	;# 
  1126  0217                     	;# 
  1127  0217                     	;# 
  1128  0291                     	;# 
  1129  0291                     	;# 
  1130  0292                     	;# 
  1131  0293                     	;# 
  1132  0294                     	;# 
  1133  0295                     	;# 
  1134  0295                     	;# 
  1135  0296                     	;# 
  1136  0298                     	;# 
  1137  0298                     	;# 
  1138  0299                     	;# 
  1139  029A                     	;# 
  1140  029B                     	;# 
  1141  029C                     	;# 
  1142  029D                     	;# 
  1143  029E                     	;# 
  1144  029E                     	;# 
  1145  0311                     	;# 
  1146  0311                     	;# 
  1147  0312                     	;# 
  1148  0313                     	;# 
  1149  0318                     	;# 
  1150  0318                     	;# 
  1151  0319                     	;# 
  1152  031A                     	;# 
  1153  038C                     	;# 
  1154  038E                     	;# 
  1155  0391                     	;# 
  1156  0392                     	;# 
  1157  0393                     	;# 
  1158  039A                     	;# 
  1159  039C                     	;# 
  1160  039D                     	;# 
  1161  039E                     	;# 
  1162  039F                     	;# 
  1163  0415                     	;# 
  1164  0416                     	;# 
  1165  0417                     	;# 
  1166  041C                     	;# 
  1167  041D                     	;# 
  1168  041E                     	;# 
  1169  0FE4                     	;# 
  1170  0FE5                     	;# 
  1171  0FE6                     	;# 
  1172  0FE7                     	;# 
  1173  0FE8                     	;# 
  1174  0FE9                     	;# 
  1175  0FEA                     	;# 
  1176  0FEB                     	;# 
  1177  0FED                     	;# 
  1178  0FEE                     	;# 
  1179  0FEF                     	;# 
  1180  0000                     	;# 
  1181  0001                     	;# 
  1182  0002                     	;# 
  1183  0003                     	;# 
  1184  0004                     	;# 
  1185  0005                     	;# 
  1186  0006                     	;# 
  1187  0007                     	;# 
  1188  0008                     	;# 
  1189  0009                     	;# 
  1190  000A                     	;# 
  1191  000B                     	;# 
  1192  000C                     	;# 
  1193  000E                     	;# 
  1194  0011                     	;# 
  1195  0012                     	;# 
  1196  0013                     	;# 
  1197  0015                     	;# 
  1198  0016                     	;# 
  1199  0016                     	;# 
  1200  0017                     	;# 
  1201  0018                     	;# 
  1202  0019                     	;# 
  1203  001A                     	;# 
  1204  001B                     	;# 
  1205  001C                     	;# 
  1206  001E                     	;# 
  1207  001F                     	;# 
  1208  008C                     	;# 
  1209  008E                     	;# 
  1210  0091                     	;# 
  1211  0092                     	;# 
  1212  0093                     	;# 
  1213  0095                     	;# 
  1214  0096                     	;# 
  1215  0097                     	;# 
  1216  0098                     	;# 
  1217  0099                     	;# 
  1218  009A                     	;# 
  1219  009B                     	;# 
  1220  009B                     	;# 
  1221  009C                     	;# 
  1222  009D                     	;# 
  1223  009E                     	;# 
  1224  010C                     	;# 
  1225  010E                     	;# 
  1226  0111                     	;# 
  1227  0112                     	;# 
  1228  0113                     	;# 
  1229  0114                     	;# 
  1230  0115                     	;# 
  1231  0116                     	;# 
  1232  0117                     	;# 
  1233  0118                     	;# 
  1234  0119                     	;# 
  1235  011A                     	;# 
  1236  011B                     	;# 
  1237  011D                     	;# 
  1238  011E                     	;# 
  1239  018C                     	;# 
  1240  018E                     	;# 
  1241  0191                     	;# 
  1242  0191                     	;# 
  1243  0192                     	;# 
  1244  0193                     	;# 
  1245  0193                     	;# 
  1246  0193                     	;# 
  1247  0194                     	;# 
  1248  0195                     	;# 
  1249  0196                     	;# 
  1250  0199                     	;# 
  1251  019A                     	;# 
  1252  019B                     	;# 
  1253  019B                     	;# 
  1254  019B                     	;# 
  1255  019B                     	;# 
  1256  019C                     	;# 
  1257  019C                     	;# 
  1258  019D                     	;# 
  1259  019E                     	;# 
  1260  019F                     	;# 
  1261  020C                     	;# 
  1262  020E                     	;# 
  1263  0211                     	;# 
  1264  0211                     	;# 
  1265  0212                     	;# 
  1266  0212                     	;# 
  1267  0213                     	;# 
  1268  0213                     	;# 
  1269  0214                     	;# 
  1270  0214                     	;# 
  1271  0215                     	;# 
  1272  0215                     	;# 
  1273  0215                     	;# 
  1274  0215                     	;# 
  1275  0216                     	;# 
  1276  0216                     	;# 
  1277  0217                     	;# 
  1278  0217                     	;# 
  1279  0291                     	;# 
  1280  0291                     	;# 
  1281  0292                     	;# 
  1282  0293                     	;# 
  1283  0294                     	;# 
  1284  0295                     	;# 
  1285  0295                     	;# 
  1286  0296                     	;# 
  1287  0298                     	;# 
  1288  0298                     	;# 
  1289  0299                     	;# 
  1290  029A                     	;# 
  1291  029B                     	;# 
  1292  029C                     	;# 
  1293  029D                     	;# 
  1294  029E                     	;# 
  1295  029E                     	;# 
  1296  0311                     	;# 
  1297  0311                     	;# 
  1298  0312                     	;# 
  1299  0313                     	;# 
  1300  0318                     	;# 
  1301  0318                     	;# 
  1302  0319                     	;# 
  1303  031A                     	;# 
  1304  038C                     	;# 
  1305  038E                     	;# 
  1306  0391                     	;# 
  1307  0392                     	;# 
  1308  0393                     	;# 
  1309  039A                     	;# 
  1310  039C                     	;# 
  1311  039D                     	;# 
  1312  039E                     	;# 
  1313  039F                     	;# 
  1314  0415                     	;# 
  1315  0416                     	;# 
  1316  0417                     	;# 
  1317  041C                     	;# 
  1318  041D                     	;# 
  1319  041E                     	;# 
  1320  0FE4                     	;# 
  1321  0FE5                     	;# 
  1322  0FE6                     	;# 
  1323  0FE7                     	;# 
  1324  0FE8                     	;# 
  1325  0FE9                     	;# 
  1326  0FEA                     	;# 
  1327  0FEB                     	;# 
  1328  0FED                     	;# 
  1329  0FEE                     	;# 
  1330  0FEF                     	;# 
  1331  0000                     	;# 
  1332  0001                     	;# 
  1333  0002                     	;# 
  1334  0003                     	;# 
  1335  0004                     	;# 
  1336  0005                     	;# 
  1337  0006                     	;# 
  1338  0007                     	;# 
  1339  0008                     	;# 
  1340  0009                     	;# 
  1341  000A                     	;# 
  1342  000B                     	;# 
  1343  000C                     	;# 
  1344  000E                     	;# 
  1345  0011                     	;# 
  1346  0012                     	;# 
  1347  0013                     	;# 
  1348  0015                     	;# 
  1349  0016                     	;# 
  1350  0016                     	;# 
  1351  0017                     	;# 
  1352  0018                     	;# 
  1353  0019                     	;# 
  1354  001A                     	;# 
  1355  001B                     	;# 
  1356  001C                     	;# 
  1357  001E                     	;# 
  1358  001F                     	;# 
  1359  008C                     	;# 
  1360  008E                     	;# 
  1361  0091                     	;# 
  1362  0092                     	;# 
  1363  0093                     	;# 
  1364  0095                     	;# 
  1365  0096                     	;# 
  1366  0097                     	;# 
  1367  0098                     	;# 
  1368  0099                     	;# 
  1369  009A                     	;# 
  1370  009B                     	;# 
  1371  009B                     	;# 
  1372  009C                     	;# 
  1373  009D                     	;# 
  1374  009E                     	;# 
  1375  010C                     	;# 
  1376  010E                     	;# 
  1377  0111                     	;# 
  1378  0112                     	;# 
  1379  0113                     	;# 
  1380  0114                     	;# 
  1381  0115                     	;# 
  1382  0116                     	;# 
  1383  0117                     	;# 
  1384  0118                     	;# 
  1385  0119                     	;# 
  1386  011A                     	;# 
  1387  011B                     	;# 
  1388  011D                     	;# 
  1389  011E                     	;# 
  1390  018C                     	;# 
  1391  018E                     	;# 
  1392  0191                     	;# 
  1393  0191                     	;# 
  1394  0192                     	;# 
  1395  0193                     	;# 
  1396  0193                     	;# 
  1397  0193                     	;# 
  1398  0194                     	;# 
  1399  0195                     	;# 
  1400  0196                     	;# 
  1401  0199                     	;# 
  1402  019A                     	;# 
  1403  019B                     	;# 
  1404  019B                     	;# 
  1405  019B                     	;# 
  1406  019B                     	;# 
  1407  019C                     	;# 
  1408  019C                     	;# 
  1409  019D                     	;# 
  1410  019E                     	;# 
  1411  019F                     	;# 
  1412  020C                     	;# 
  1413  020E                     	;# 
  1414  0211                     	;# 
  1415  0211                     	;# 
  1416  0212                     	;# 
  1417  0212                     	;# 
  1418  0213                     	;# 
  1419  0213                     	;# 
  1420  0214                     	;# 
  1421  0214                     	;# 
  1422  0215                     	;# 
  1423  0215                     	;# 
  1424  0215                     	;# 
  1425  0215                     	;# 
  1426  0216                     	;# 
  1427  0216                     	;# 
  1428  0217                     	;# 
  1429  0217                     	;# 
  1430  0291                     	;# 
  1431  0291                     	;# 
  1432  0292                     	;# 
  1433  0293                     	;# 
  1434  0294                     	;# 
  1435  0295                     	;# 
  1436  0295                     	;# 
  1437  0296                     	;# 
  1438  0298                     	;# 
  1439  0298                     	;# 
  1440  0299                     	;# 
  1441  029A                     	;# 
  1442  029B                     	;# 
  1443  029C                     	;# 
  1444  029D                     	;# 
  1445  029E                     	;# 
  1446  029E                     	;# 
  1447  0311                     	;# 
  1448  0311                     	;# 
  1449  0312                     	;# 
  1450  0313                     	;# 
  1451  0318                     	;# 
  1452  0318                     	;# 
  1453  0319                     	;# 
  1454  031A                     	;# 
  1455  038C                     	;# 
  1456  038E                     	;# 
  1457  0391                     	;# 
  1458  0392                     	;# 
  1459  0393                     	;# 
  1460  039A                     	;# 
  1461  039C                     	;# 
  1462  039D                     	;# 
  1463  039E                     	;# 
  1464  039F                     	;# 
  1465  0415                     	;# 
  1466  0416                     	;# 
  1467  0417                     	;# 
  1468  041C                     	;# 
  1469  041D                     	;# 
  1470  041E                     	;# 
  1471  0FE4                     	;# 
  1472  0FE5                     	;# 
  1473  0FE6                     	;# 
  1474  0FE7                     	;# 
  1475  0FE8                     	;# 
  1476  0FE9                     	;# 
  1477  0FEA                     	;# 
  1478  0FEB                     	;# 
  1479  0FED                     	;# 
  1480  0FEE                     	;# 
  1481  0FEF                     	;# 
  1482                           
  1483                           	psect	stringtext1
  1484  06B4                     __pstringtext1:
  1485  06B4                     _AUTOROTATION_DELAY:
  1486  06B4  3400               	retlw	0
  1487  06B5  3475               	retlw	117
  1488  06B6  3400               	retlw	0
  1489  06B7                     __end_of_AUTOROTATION_DELAY:
  1490                           
  1491                           	psect	stringtext2
  1492  06BA                     __pstringtext2:
  1493  06BA                     _GOOD_WSP_VOLTAGE:
  1494  06BA  348E               	retlw	142
  1495  06BB  3400               	retlw	0
  1496  06BC                     __end_of_GOOD_WSP_VOLTAGE:
  1497                           
  1498                           	psect	stringtext3
  1499  06BC                     __pstringtext3:
  1500  06BC                     _BAD_WSP_VOLTAGE:
  1501  06BC  3480               	retlw	128
  1502  06BD  3400               	retlw	0
  1503  06BE                     __end_of_BAD_WSP_VOLTAGE:
  1504                           
  1505                           	psect	stringtext4
  1506  06BE                     __pstringtext4:
  1507  06BE                     _UP_RESISTANSE:
  1508  06BE  3420               	retlw	32
  1509  06BF  344E               	retlw	78
  1510  06C0                     __end_of_UP_RESISTANSE:
  1511                           
  1512                           	psect	stringtext5
  1513  06C8                     __pstringtext5:
  1514  06C8                     _MELODY_REPEAT_DELAY:
  1515  06C8  341E               	retlw	30
  1516  06C9                     __end_of_MELODY_REPEAT_DELAY:
  1517                           
  1518                           	psect	stringtext6
  1519  06C9                     __pstringtext6:
  1520  06C9                     _MOVING_WAIT_DELAY:
  1521  06C9  3401               	retlw	1
  1522  06CA                     __end_of_MOVING_WAIT_DELAY:
  1523                           
  1524                           	psect	stringtext7
  1525  06CA                     __pstringtext7:
  1526  06CA                     _FRIMWARE_VERSION_EEPROM_ADR:
  1527  06CA  3401               	retlw	1
  1528  06CB                     __end_of_FRIMWARE_VERSION_EEPROM_ADR:
  1529                           
  1530                           	psect	stringtext8
  1531  06C0                     __pstringtext8:
  1532  06C0                     _HIGH_WATER_RESISTANSE:
  1533  06C0  34A8               	retlw	168
  1534  06C1  3461               	retlw	97
  1535  06C2                     __end_of_HIGH_WATER_RESISTANSE:
  1536                           
  1537                           	psect	stringtext9
  1538  06C2                     __pstringtext9:
  1539  06C2                     _LOW_WATER_RESISTANSE:
  1540  06C2  3420               	retlw	32
  1541  06C3  344E               	retlw	78
  1542  06C4                     __end_of_LOW_WATER_RESISTANSE:
  1543                           
  1544                           	psect	stringtext10
  1545  06C4                     __pstringtext10:
  1546  06C4                     _AUTOROTATION_DAYS:
  1547  06C4  340E               	retlw	14
  1548  06C5  3400               	retlw	0
  1549  06C6                     __end_of_AUTOROTATION_DAYS:
  1550                           
  1551                           	psect	stringtext11
  1552  06CB                     __pstringtext11:
  1553  06CB                     _RELE_GAP:
  1554  06CB  3401               	retlw	1
  1555  06CC                     __end_of_RELE_GAP:
  1556                           
  1557                           	psect	stringtext12
  1558  06CC                     __pstringtext12:
  1559  06CC                     _RELE_POWER_AUTOROTATION_DELAY:
  1560  06CC  3419               	retlw	25
  1561  06CD                     __end_of_RELE_POWER_AUTOROTATION_DELAY:
  1562                           
  1563                           	psect	stringtext13
  1564  06CD                     __pstringtext13:
  1565  06CD                     _RELE_POWER_WORK_DELAY:
  1566  06CD  3478               	retlw	120
  1567  06CE                     __end_of_RELE_POWER_WORK_DELAY:
  1568                           
  1569                           	psect	stringtext14
  1570  06CE                     __pstringtext14:
  1571  06CE                     _JUMP_MEAS_COUNT:
  1572  06CE  340A               	retlw	10
  1573  06CF                     __end_of_JUMP_MEAS_COUNT:
  1574                           
  1575                           	psect	stringtext15
  1576  06CF                     __pstringtext15:
  1577  06CF                     _FUN_MEAS_COUNT:
  1578  06CF  340A               	retlw	10
  1579  06D0                     __end_of_FUN_MEAS_COUNT:
  1580                           
  1581                           	psect	stringtext16
  1582  06D0                     __pstringtext16:
  1583  06D0                     _WSP_MEAS_COUNT:
  1584  06D0  3404               	retlw	4
  1585  06D1                     __end_of_WSP_MEAS_COUNT:
  1586                           
  1587                           	psect	stringtext17
  1588  06D1                     __pstringtext17:
  1589  06D1                     _LONG_ZUMMER_DELAY:
  1590  06D1  3482               	retlw	130
  1591  06D2                     __end_of_LONG_ZUMMER_DELAY:
  1592                           
  1593                           	psect	stringtext18
  1594  06D2                     __pstringtext18:
  1595  06D2                     _SHORT_ZUMMER_DELAY:
  1596  06D2  341E               	retlw	30
  1597  06D3                     __end_of_SHORT_ZUMMER_DELAY:
  1598                           
  1599                           	psect	nvBANK0
  1600  0053                     __pnvBANK0:
  1601  0053                     _TMR0_InterruptHandler:
  1602  0053                     	ds	2
  1603  0055                     _TMR2_InterruptHandler:
  1604  0055                     	ds	2
  1605  0057                     _timer0ReloadVal:
  1606  0057                     	ds	1
  1607  000C                     _PORTAbits	set	12
  1608  000E                     _PORTCbits	set	14
  1609  0015                     _TMR0	set	21
  1610  001C                     _T2CONbits	set	28
  1611  001C                     _T2CON	set	28
  1612  001A                     _TMR2	set	26
  1613  001B                     _PR2	set	27
  1614  0011                     _PIR1bits	set	17
  1615  000B                     _INTCONbits	set	11
  1616  005F                     _GIE	set	95
  1617  008C                     _TRISAbits	set	140
  1618  008E                     _TRISCbits	set	142
  1619  0095                     _OPTION_REG	set	149
  1620  0091                     _PIE1bits	set	145
  1621  0095                     _OPTION_REGbits	set	149
  1622  008E                     _TRISC	set	142
  1623  008C                     _TRISA	set	140
  1624  009D                     _ADCON0bits	set	157
  1625  009D                     _ADCON0	set	157
  1626  009C                     _ADRESH	set	156
  1627  009B                     _ADRESL	set	155
  1628  009E                     _ADCON1	set	158
  1629  0097                     _WDTCON	set	151
  1630  0098                     _OSCTUNE	set	152
  1631  0099                     _OSCCON	set	153
  1632  010C                     _LATAbits	set	268
  1633  010E                     _LATCbits	set	270
  1634  011E                     _APFCON1	set	286
  1635  011D                     _APFCON0	set	285
  1636  010E                     _LATC	set	270
  1637  010C                     _LATA	set	268
  1638  0116                     _BORCON	set	278
  1639  0191                     _EEADR	set	401
  1640  0196                     _EECON2	set	406
  1641  0193                     _EEDATA	set	403
  1642  018C                     _ANSELAbits	set	396
  1643  018E                     _ANSELCbits	set	398
  1644  018C                     _ANSELA	set	396
  1645  018E                     _ANSELC	set	398
  1646  0CA8                     _RD	set	3240
  1647  0CAA                     _WREN	set	3242
  1648  0CA9                     _WR	set	3241
  1649  020E                     _WPUC	set	526
  1650  020C                     _WPUA	set	524
  1651                           
  1652                           	psect	cinit
  1653  002F                     start_initialization:	
  1654                           ; #config settings
  1655                           
  1656  002F                     __initialization:
  1657                           
  1658                           ; Clear objects allocated to BITCOMMON
  1659  002F  01F0               	clrf	(__pbitbssCOMMON/(0+8))& (0+127)
  1660  0030  01F1               	clrf	((__pbitbssCOMMON/(0+8)+1))& (0+127)
  1661  0031  01F2               	clrf	((__pbitbssCOMMON/(0+8)+2))& (0+127)
  1662                           
  1663                           ; Clear objects allocated to COMMON
  1664  0032  01F9               	clrf	__pbssCOMMON& (0+127)
  1665  0033  01FA               	clrf	(__pbssCOMMON+1)& (0+127)
  1666  0034  01FB               	clrf	(__pbssCOMMON+2)& (0+127)
  1667  0035  01FC               	clrf	(__pbssCOMMON+3)& (0+127)
  1668  0036  01FD               	clrf	(__pbssCOMMON+4)& (0+127)
  1669                           
  1670                           ; Clear objects allocated to BITBANK0
  1671  0037  3020               	movlw	low (__pbitbssBANK0/(0+8))
  1672  0038  0084               	movwf	4
  1673  0039  3000               	movlw	high (__pbitbssBANK0/(0+8))
  1674  003A  0085               	movwf	5
  1675  003B  3014               	movlw	20
  1676  003C  3186  2694  3180   	fcall	clear_ram0
  1677                           
  1678                           ; Clear objects allocated to BANK0
  1679  003F  3034               	movlw	low __pbssBANK0
  1680  0040  0084               	movwf	4
  1681  0041  3000               	movlw	high __pbssBANK0
  1682  0042  0085               	movwf	5
  1683  0043  301F               	movlw	31
  1684  0044  3186  2694  3180   	fcall	clear_ram0
  1685  0047                     end_of_initialization:	
  1686                           ;End of C runtime variable initialization code
  1687                           
  1688  0047                     __end_of__initialization:
  1689  0047  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  1690  0048  0020               	movlb	0
  1691  0049  3184  2C14         	ljmp	_main	;jump to C main() function
  1692                           
  1693                           	psect	bitbssCOMMON
  1694  0380                     __pbitbssCOMMON:
  1695  0380                     __ccovbit1_23:
  1696  0380                     	ds	1
  1697  0381                     __ccovbit5_22:
  1698  0381                     	ds	1
  1699  0382                     __ccovbit3_21:
  1700  0382                     	ds	1
  1701  0383                     __ccovbit6_20:
  1702  0383                     	ds	1
  1703  0384                     __ccovbit0_19:
  1704  0384                     	ds	1
  1705  0385                     __ccovbit1_18:
  1706  0385                     	ds	1
  1707  0386                     __ccovbit4_17:
  1708  0386                     	ds	1
  1709  0387                     __ccovbit2_16:
  1710  0387                     	ds	1
  1711  0388                     __ccovbit1_15:
  1712  0388                     	ds	1
  1713  0389                     __ccovbit6_14:
  1714  0389                     	ds	1
  1715  038A                     __ccovbit12_13:
  1716  038A                     	ds	1
  1717  038B                     __ccovbit10_12:
  1718  038B                     	ds	1
  1719  038C                     __ccovbit6_11:
  1720  038C                     	ds	1
  1721  038D                     __ccovbit5_10:
  1722  038D                     	ds	1
  1723  038E                     __ccovbit3_9:
  1724  038E                     	ds	1
  1725  038F                     __ccovbit2_8:
  1726  038F                     	ds	1
  1727  0390                     __ccovbit1_7:
  1728  0390                     	ds	1
  1729  0391                     __ccovbit6_6:
  1730  0391                     	ds	1
  1731  0392                     __ccovbit9_5:
  1732  0392                     	ds	1
  1733  0393                     __ccovbit3_4:
  1734  0393                     	ds	1
  1735  0394                     __ccovbit1_3:
  1736  0394                     	ds	1
  1737  0395                     __ccovbit3_2:
  1738  0395                     	ds	1
  1739  0396                     __ccovbit1_1:
  1740  0396                     	ds	1
  1741  0397                     EEPROM_WriteByte@status:
  1742  0397                     	ds	1
  1743                           
  1744                           	psect	bssCOMMON
  1745  0079                     __pbssCOMMON:
  1746  0079                     _ff:
  1747  0079                     	ds	4
  1748  007D                     _beep_short_count:
  1749  007D                     	ds	1
  1750                           
  1751                           	psect	bitbssBANK0
  1752  0100                     __pbitbssBANK0:
  1753  0100                     __ccovbit8_182:
  1754  0100                     	ds	1
  1755  0101                     __ccovbit3_181:
  1756  0101                     	ds	1
  1757  0102                     __ccovbit9_180:
  1758  0102                     	ds	1
  1759  0103                     __ccovbit6_179:
  1760  0103                     	ds	1
  1761  0104                     __ccovbit4_178:
  1762  0104                     	ds	1
  1763  0105                     __ccovbit31_177:
  1764  0105                     	ds	1
  1765  0106                     __ccovbit22_176:
  1766  0106                     	ds	1
  1767  0107                     __ccovbit20_175:
  1768  0107                     	ds	1
  1769  0108                     __ccovbit17_174:
  1770  0108                     	ds	1
  1771  0109                     __ccovbit14_173:
  1772  0109                     	ds	1
  1773  010A                     __ccovbit12_172:
  1774  010A                     	ds	1
  1775  010B                     __ccovbit7_171:
  1776  010B                     	ds	1
  1777  010C                     __ccovbit5_170:
  1778  010C                     	ds	1
  1779  010D                     __ccovbit31_169:
  1780  010D                     	ds	1
  1781  010E                     __ccovbit29_168:
  1782  010E                     	ds	1
  1783  010F                     __ccovbit26_167:
  1784  010F                     	ds	1
  1785  0110                     __ccovbit23_166:
  1786  0110                     	ds	1
  1787  0111                     __ccovbit21_165:
  1788  0111                     	ds	1
  1789  0112                     __ccovbit13_164:
  1790  0112                     	ds	1
  1791  0113                     __ccovbit11_163:
  1792  0113                     	ds	1
  1793  0114                     __ccovbit30_162:
  1794  0114                     	ds	1
  1795  0115                     __ccovbit28_161:
  1796  0115                     	ds	1
  1797  0116                     __ccovbit26_160:
  1798  0116                     	ds	1
  1799  0117                     __ccovbit22_159:
  1800  0117                     	ds	1
  1801  0118                     __ccovbit17_158:
  1802  0118                     	ds	1
  1803  0119                     __ccovbit16_157:
  1804  0119                     	ds	1
  1805  011A                     __ccovbit14_156:
  1806  011A                     	ds	1
  1807  011B                     __ccovbit3_155:
  1808  011B                     	ds	1
  1809  011C                     __ccovbit7_154:
  1810  011C                     	ds	1
  1811  011D                     __ccovbit4_153:
  1812  011D                     	ds	1
  1813  011E                     __ccovbit1_152:
  1814  011E                     	ds	1
  1815  011F                     __ccovbit4_151:
  1816  011F                     	ds	1
  1817  0120                     __ccovbit2_150:
  1818  0120                     	ds	1
  1819  0121                     __ccovbit20_149:
  1820  0121                     	ds	1
  1821  0122                     __ccovbit18_148:
  1822  0122                     	ds	1
  1823  0123                     __ccovbit12_147:
  1824  0123                     	ds	1
  1825  0124                     __ccovbit4_146:
  1826  0124                     	ds	1
  1827  0125                     __ccovbit3_145:
  1828  0125                     	ds	1
  1829  0126                     __ccovbit4_144:
  1830  0126                     	ds	1
  1831  0127                     __ccovbit2_143:
  1832  0127                     	ds	1
  1833  0128                     __ccovbit1_142:
  1834  0128                     	ds	1
  1835  0129                     __ccovbit22_141:
  1836  0129                     	ds	1
  1837  012A                     __ccovbit17_140:
  1838  012A                     	ds	1
  1839  012B                     __ccovbit16_139:
  1840  012B                     	ds	1
  1841  012C                     __ccovbit14_138:
  1842  012C                     	ds	1
  1843  012D                     __ccovbit10_137:
  1844  012D                     	ds	1
  1845  012E                     __ccovbit8_136:
  1846  012E                     	ds	1
  1847  012F                     __ccovbit5_135:
  1848  012F                     	ds	1
  1849  0130                     __ccovbit4_134:
  1850  0130                     	ds	1
  1851  0131                     __ccovbit2_133:
  1852  0131                     	ds	1
  1853  0132                     __ccovbit1_132:
  1854  0132                     	ds	1
  1855  0133                     __ccovbit31_131:
  1856  0133                     	ds	1
  1857  0134                     __ccovbit29_130:
  1858  0134                     	ds	1
  1859  0135                     __ccovbit23_129:
  1860  0135                     	ds	1
  1861  0136                     __ccovbit21_128:
  1862  0136                     	ds	1
  1863  0137                     __ccovbit19_127:
  1864  0137                     	ds	1
  1865  0138                     __ccovbit18_126:
  1866  0138                     	ds	1
  1867  0139                     __ccovbit16_125:
  1868  0139                     	ds	1
  1869  013A                     __ccovbit14_124:
  1870  013A                     	ds	1
  1871  013B                     __ccovbit10_123:
  1872  013B                     	ds	1
  1873  013C                     __ccovbit8_122:
  1874  013C                     	ds	1
  1875  013D                     __ccovbit4_121:
  1876  013D                     	ds	1
  1877  013E                     __ccovbit3_120:
  1878  013E                     	ds	1
  1879  013F                     __ccovbit5_119:
  1880  013F                     	ds	1
  1881  0140                     __ccovbit3_118:
  1882  0140                     	ds	1
  1883  0141                     __ccovbit1_117:
  1884  0141                     	ds	1
  1885  0142                     __ccovbit8_116:
  1886  0142                     	ds	1
  1887  0143                     __ccovbit5_115:
  1888  0143                     	ds	1
  1889  0144                     __ccovbit3_114:
  1890  0144                     	ds	1
  1891  0145                     __ccovbit1_113:
  1892  0145                     	ds	1
  1893  0146                     __ccovbit17_112:
  1894  0146                     	ds	1
  1895  0147                     __ccovbit15_111:
  1896  0147                     	ds	1
  1897  0148                     __ccovbit13_110:
  1898  0148                     	ds	1
  1899  0149                     __ccovbit12_109:
  1900  0149                     	ds	1
  1901  014A                     __ccovbit11_108:
  1902  014A                     	ds	1
  1903  014B                     __ccovbit10_107:
  1904  014B                     	ds	1
  1905  014C                     __ccovbit7_106:
  1906  014C                     	ds	1
  1907  014D                     __ccovbit4_105:
  1908  014D                     	ds	1
  1909  014E                     __ccovbit3_104:
  1910  014E                     	ds	1
  1911  014F                     __ccovbit2_103:
  1912  014F                     	ds	1
  1913  0150                     __ccovbit1_102:
  1914  0150                     	ds	1
  1915  0151                     __ccovbit14_101:
  1916  0151                     	ds	1
  1917  0152                     __ccovbit10_100:
  1918  0152                     	ds	1
  1919  0153                     __ccovbit7_99:
  1920  0153                     	ds	1
  1921  0154                     __ccovbit6_98:
  1922  0154                     	ds	1
  1923  0155                     __ccovbit4_97:
  1924  0155                     	ds	1
  1925  0156                     __ccovbit1_96:
  1926  0156                     	ds	1
  1927  0157                     __ccovbit19_95:
  1928  0157                     	ds	1
  1929  0158                     __ccovbit17_94:
  1930  0158                     	ds	1
  1931  0159                     __ccovbit15_93:
  1932  0159                     	ds	1
  1933  015A                     __ccovbit14_92:
  1934  015A                     	ds	1
  1935  015B                     __ccovbit13_91:
  1936  015B                     	ds	1
  1937  015C                     __ccovbit12_90:
  1938  015C                     	ds	1
  1939  015D                     __ccovbit11_89:
  1940  015D                     	ds	1
  1941  015E                     __ccovbit8_88:
  1942  015E                     	ds	1
  1943  015F                     __ccovbit6_87:
  1944  015F                     	ds	1
  1945  0160                     __ccovbit5_86:
  1946  0160                     	ds	1
  1947  0161                     __ccovbit4_85:
  1948  0161                     	ds	1
  1949  0162                     __ccovbit3_84:
  1950  0162                     	ds	1
  1951  0163                     __ccovbit2_83:
  1952  0163                     	ds	1
  1953  0164                     __ccovbit1_82:
  1954  0164                     	ds	1
  1955  0165                     __ccovbit1_81:
  1956  0165                     	ds	1
  1957  0166                     __ccovbit2_80:
  1958  0166                     	ds	1
  1959  0167                     __ccovbit27_79:
  1960  0167                     	ds	1
  1961  0168                     __ccovbit23_78:
  1962  0168                     	ds	1
  1963  0169                     __ccovbit22_77:
  1964  0169                     	ds	1
  1965  016A                     __ccovbit20_76:
  1966  016A                     	ds	1
  1967  016B                     __ccovbit18_75:
  1968  016B                     	ds	1
  1969  016C                     __ccovbit15_74:
  1970  016C                     	ds	1
  1971  016D                     __ccovbit14_73:
  1972  016D                     	ds	1
  1973  016E                     __ccovbit10_72:
  1974  016E                     	ds	1
  1975  016F                     __ccovbit7_71:
  1976  016F                     	ds	1
  1977  0170                     __ccovbit6_70:
  1978  0170                     	ds	1
  1979  0171                     __ccovbit4_69:
  1980  0171                     	ds	1
  1981  0172                     __ccovbit1_68:
  1982  0172                     	ds	1
  1983  0173                     __ccovbit9_67:
  1984  0173                     	ds	1
  1985  0174                     __ccovbit5_66:
  1986  0174                     	ds	1
  1987  0175                     __ccovbit4_65:
  1988  0175                     	ds	1
  1989  0176                     __ccovbit3_64:
  1990  0176                     	ds	1
  1991  0177                     __ccovbit1_63:
  1992  0177                     	ds	1
  1993  0178                     __ccovbit9_62:
  1994  0178                     	ds	1
  1995  0179                     __ccovbit5_61:
  1996  0179                     	ds	1
  1997  017A                     __ccovbit4_60:
  1998  017A                     	ds	1
  1999  017B                     __ccovbit3_59:
  2000  017B                     	ds	1
  2001  017C                     __ccovbit1_58:
  2002  017C                     	ds	1
  2003  017D                     __ccovbit4_57:
  2004  017D                     	ds	1
  2005  017E                     __ccovbit2_56:
  2006  017E                     	ds	1
  2007  017F                     __ccovbit1_55:
  2008  017F                     	ds	1
  2009  0180                     __ccovbit4_54:
  2010  0180                     	ds	1
  2011  0181                     __ccovbit2_53:
  2012  0181                     	ds	1
  2013  0182                     __ccovbit1_52:
  2014  0182                     	ds	1
  2015  0183                     __ccovbit5_51:
  2016  0183                     	ds	1
  2017  0184                     __ccovbit3_50:
  2018  0184                     	ds	1
  2019  0185                     __ccovbit2_49:
  2020  0185                     	ds	1
  2021  0186                     __ccovbit1_48:
  2022  0186                     	ds	1
  2023  0187                     __ccovbit7_47:
  2024  0187                     	ds	1
  2025  0188                     __ccovbit4_46:
  2026  0188                     	ds	1
  2027  0189                     __ccovbit2_45:
  2028  0189                     	ds	1
  2029  018A                     __ccovbit1_44:
  2030  018A                     	ds	1
  2031  018B                     __ccovbit6_43:
  2032  018B                     	ds	1
  2033  018C                     __ccovbit4_42:
  2034  018C                     	ds	1
  2035  018D                     __ccovbit2_41:
  2036  018D                     	ds	1
  2037  018E                     __ccovbit1_40:
  2038  018E                     	ds	1
  2039  018F                     __ccovbit6_39:
  2040  018F                     	ds	1
  2041  0190                     __ccovbit4_38:
  2042  0190                     	ds	1
  2043  0191                     __ccovbit2_37:
  2044  0191                     	ds	1
  2045  0192                     __ccovbit1_36:
  2046  0192                     	ds	1
  2047  0193                     __ccovbit5_35:
  2048  0193                     	ds	1
  2049  0194                     __ccovbit3_34:
  2050  0194                     	ds	1
  2051  0195                     __ccovbit1_33:
  2052  0195                     	ds	1
  2053  0196                     __ccovbit8_32:
  2054  0196                     	ds	1
  2055  0197                     __ccovbit6_31:
  2056  0197                     	ds	1
  2057  0198                     __ccovbit2_30:
  2058  0198                     	ds	1
  2059  0199                     __ccovbit8_29:
  2060  0199                     	ds	1
  2061  019A                     __ccovbit6_28:
  2062  019A                     	ds	1
  2063  019B                     __ccovbit2_27:
  2064  019B                     	ds	1
  2065  019C                     __ccovbit1_26:
  2066  019C                     	ds	1
  2067  019D                     __ccovbit1_25:
  2068  019D                     	ds	1
  2069  019E                     __ccovbit0_24:
  2070  019E                     	ds	1
  2071                           
  2072                           	psect	bssBANK0
  2073  0034                     __pbssBANK0:
  2074  0034                     _time_rotation:
  2075  0034                     	ds	3
  2076  0037                     ms_tick@s_count:
  2077  0037                     	ds	2
  2078  0039                     ms_tick@ms_count:
  2079  0039                     	ds	2
  2080  003B                     _time_zummer_long:
  2081  003B                     	ds	2
  2082  003D                     _time_zummer_short:
  2083  003D                     	ds	2
  2084  003F                     _time_tone:
  2085  003F                     	ds	2
  2086  0041                     _time_rele_gap:
  2087  0041                     	ds	2
  2088  0043                     _time_rele_control:
  2089  0043                     	ds	2
  2090  0045                     _time_rele_power:
  2091  0045                     	ds	2
  2092  0047                     _ADC_InterruptHandler:
  2093  0047                     	ds	2
  2094  0049                     get_jump@jump_counter:
  2095  0049                     	ds	1
  2096  004A                     get_fun@fun_counter:
  2097  004A                     	ds	1
  2098  004B                     get_wsp@bad_measures_counter:
  2099  004B                     	ds	1
  2100  004C                     sec_work@iled:
  2101  004C                     	ds	1
  2102  004D                     _beep_double_count:
  2103  004D                     	ds	1
  2104  004E                     _beep_long_count:
  2105  004E                     	ds	1
  2106  004F                     _time_meas:
  2107  004F                     	ds	1
  2108  0050                     _time_moving_wait:
  2109  0050                     	ds	1
  2110  0051                     _time_melody:
  2111  0051                     	ds	1
  2112  0052                     _sec_count:
  2113  0052                     	ds	1
  2114                           
  2115                           	psect	clrtext
  2116  0694                     clear_ram0:	
  2117                           ;	Called with FSR0 containing the base address, and
  2118                           ;	WREG with the size to clear
  2119                           
  2120  0694  0064               	clrwdt	;clear the watchdog before getting into this loop
  2121  0695                     clrloop0:
  2122  0695  0180               	clrf	0	;clear RAM location pointed to by FSR
  2123  0696  3101               	addfsr 0,1
  2124  0697  0B89               	decfsz	9,f	;Have we reached the end of clearing yet?
  2125  0698  2E95               	goto	clrloop0	;have we reached the end yet?
  2126  0699  3400               	retlw	0	;all done for this memory range, return
  2127                           
  2128                           	psect	cstackCOMMON
  2129  0073                     __pcstackCOMMON:
  2130  0073                     ?_PIN_MANAGER_Initialize:
  2131  0073                     ?_OSCILLATOR_Initialize:	
  2132                           ; 1 bytes @ 0x0
  2133                           
  2134  0073                     ?_WDT_Initialize:	
  2135                           ; 1 bytes @ 0x0
  2136                           
  2137  0073                     ?_TMR2_Initialize:	
  2138                           ; 1 bytes @ 0x0
  2139                           
  2140  0073                     ?_ADC_Initialize:	
  2141                           ; 1 bytes @ 0x0
  2142                           
  2143  0073                     ?_TMR0_Initialize:	
  2144                           ; 1 bytes @ 0x0
  2145                           
  2146  0073                     ?_TMR0_ISR:	
  2147                           ; 1 bytes @ 0x0
  2148                           
  2149  0073                     ??_TMR0_ISR:	
  2150                           ; 1 bytes @ 0x0
  2151                           
  2152  0073                     ?_TMR2_ISR:	
  2153                           ; 1 bytes @ 0x0
  2154                           
  2155  0073                     ?_TMR2_DefaultInterruptHandler:	
  2156                           ; 1 bytes @ 0x0
  2157                           
  2158  0073                     ??_TMR2_DefaultInterruptHandler:	
  2159                           ; 1 bytes @ 0x0
  2160                           
  2161  0073                     ?_TMR0_DefaultInterruptHandler:	
  2162                           ; 1 bytes @ 0x0
  2163                           
  2164  0073                     ??_TMR0_DefaultInterruptHandler:	
  2165                           ; 1 bytes @ 0x0
  2166                           
  2167  0073                     ?_EEPROM_ReadByte:	
  2168                           ; 1 bytes @ 0x0
  2169                           
  2170  0073                     ?_SYSTEM_Initialize:	
  2171                           ; 1 bytes @ 0x0
  2172                           
  2173  0073                     ?_ADC_GetConversion:	
  2174                           ; 1 bytes @ 0x0
  2175                           
  2176  0073                     ?_INTERRUPT_InterruptManager:	
  2177                           ; 1 bytes @ 0x0
  2178                           
  2179  0073                     ?_TMR2_StartTimer:	
  2180                           ; 1 bytes @ 0x0
  2181                           
  2182  0073                     ?_start_tone:	
  2183                           ; 1 bytes @ 0x0
  2184                           
  2185  0073                     ??_start_tone:	
  2186                           ; 1 bytes @ 0x0
  2187                           
  2188  0073                     ?_stop_tone:	
  2189                           ; 1 bytes @ 0x0
  2190                           
  2191  0073                     ??_stop_tone:	
  2192                           ; 1 bytes @ 0x0
  2193                           
  2194  0073                     ?_beep_short:	
  2195                           ; 1 bytes @ 0x0
  2196                           
  2197  0073                     ??_beep_short:	
  2198                           ; 1 bytes @ 0x0
  2199                           
  2200  0073                     ?_beep_long:	
  2201                           ; 1 bytes @ 0x0
  2202                           
  2203  0073                     ??_beep_long:	
  2204                           ; 1 bytes @ 0x0
  2205                           
  2206  0073                     ?_beep_double:	
  2207                           ; 1 bytes @ 0x0
  2208                           
  2209  0073                     ??_beep_double:	
  2210                           ; 1 bytes @ 0x0
  2211                           
  2212  0073                     ?_go_close:	
  2213                           ; 1 bytes @ 0x0
  2214                           
  2215  0073                     ?_go_close_short:	
  2216                           ; 1 bytes @ 0x0
  2217                           
  2218  0073                     ?_go_open:	
  2219                           ; 1 bytes @ 0x0
  2220                           
  2221  0073                     ?_go_close_alt:	
  2222                           ; 1 bytes @ 0x0
  2223                           
  2224  0073                     ?_go_open_alt:	
  2225                           ; 1 bytes @ 0x0
  2226                           
  2227  0073                     ?_rele_off:	
  2228                           ; 1 bytes @ 0x0
  2229                           
  2230  0073                     ?_close:	
  2231                           ; 1 bytes @ 0x0
  2232                           
  2233  0073                     ?_open:	
  2234                           ; 1 bytes @ 0x0
  2235                           
  2236  0073                     ?_rele_tick:	
  2237                           ; 1 bytes @ 0x0
  2238                           
  2239  0073                     ??_rele_tick:	
  2240                           ; 1 bytes @ 0x0
  2241                           
  2242  0073                     ?_start_alarm:	
  2243                           ; 1 bytes @ 0x0
  2244                           
  2245  0073                     ?_clear_alarm:	
  2246                           ; 1 bytes @ 0x0
  2247                           
  2248  0073                     ?_fun_work:	
  2249                           ; 1 bytes @ 0x0
  2250                           
  2251  0073                     ?_switch_wm:	
  2252                           ; 1 bytes @ 0x0
  2253                           
  2254  0073                     ?_autorotation_work:	
  2255                           ; 1 bytes @ 0x0
  2256                           
  2257  0073                     ?_minute_tick:	
  2258                           ; 1 bytes @ 0x0
  2259                           
  2260  0073                     ??_minute_tick:	
  2261                           ; 1 bytes @ 0x0
  2262                           
  2263  0073                     ?_sec_30_work:	
  2264                           ; 1 bytes @ 0x0
  2265                           
  2266  0073                     ??_sec_30_work:	
  2267                           ; 1 bytes @ 0x0
  2268                           
  2269  0073                     ?_sec_work:	
  2270                           ; 1 bytes @ 0x0
  2271                           
  2272  0073                     ?_ms_200_work:	
  2273                           ; 1 bytes @ 0x0
  2274                           
  2275  0073                     ??_ms_200_work:	
  2276                           ; 1 bytes @ 0x0
  2277                           
  2278  0073                     ?_ms_100_work:	
  2279                           ; 1 bytes @ 0x0
  2280                           
  2281  0073                     ??_ms_100_work:	
  2282                           ; 1 bytes @ 0x0
  2283                           
  2284  0073                     ?_ms_tick:	
  2285                           ; 1 bytes @ 0x0
  2286                           
  2287  0073                     ?_eeprom_set:	
  2288                           ; 1 bytes @ 0x0
  2289                           
  2290  0073                     ?_hardware_work:	
  2291                           ; 1 bytes @ 0x0
  2292                           
  2293  0073                     ?_zummer_switch:	
  2294                           ; 1 bytes @ 0x0
  2295                           
  2296  0073                     ??_zummer_switch:	
  2297                           ; 1 bytes @ 0x0
  2298                           
  2299  0073                     ?_get_wsp:	
  2300                           ; 1 bytes @ 0x0
  2301                           
  2302  0073                     ?_get_fun:	
  2303                           ; 1 bytes @ 0x0
  2304                           
  2305  0073                     ?_get_jump:	
  2306                           ; 1 bytes @ 0x0
  2307                           
  2308  0073                     ?_start_setup:	
  2309                           ; 1 bytes @ 0x0
  2310                           
  2311  0073                     ?_main:	
  2312                           ; 1 bytes @ 0x0
  2313                           
  2314                           
  2315                           ; 1 bytes @ 0x0
  2316  0073                     	ds	1
  2317  0074                     ??_sec_work:
  2318                           
  2319                           ; 1 bytes @ 0x1
  2320  0074                     	ds	1
  2321  0075                     ??_PIN_MANAGER_Initialize:
  2322  0075                     ??_OSCILLATOR_Initialize:	
  2323                           ; 1 bytes @ 0x2
  2324                           
  2325  0075                     ??_WDT_Initialize:	
  2326                           ; 1 bytes @ 0x2
  2327                           
  2328  0075                     ??_ADC_Initialize:	
  2329                           ; 1 bytes @ 0x2
  2330                           
  2331  0075                     ??_TMR2_ISR:	
  2332                           ; 1 bytes @ 0x2
  2333                           
  2334  0075                     ?_TMR2_SetInterruptHandler:	
  2335                           ; 1 bytes @ 0x2
  2336                           
  2337  0075                     ?_TMR0_SetInterruptHandler:	
  2338                           ; 1 bytes @ 0x2
  2339                           
  2340  0075                     ??_EEPROM_ReadByte:	
  2341                           ; 1 bytes @ 0x2
  2342                           
  2343  0075                     ?_EEPROM_WriteByte:	
  2344                           ; 1 bytes @ 0x2
  2345                           
  2346  0075                     ??_ADC_GetConversion:	
  2347                           ; 1 bytes @ 0x2
  2348                           
  2349  0075                     ??_INTERRUPT_InterruptManager:	
  2350                           ; 1 bytes @ 0x2
  2351                           
  2352  0075                     ??_TMR2_StartTimer:	
  2353                           ; 1 bytes @ 0x2
  2354                           
  2355  0075                     ??_go_close:	
  2356                           ; 1 bytes @ 0x2
  2357                           
  2358  0075                     ??_go_close_short:	
  2359                           ; 1 bytes @ 0x2
  2360                           
  2361  0075                     ??_go_open:	
  2362                           ; 1 bytes @ 0x2
  2363                           
  2364  0075                     ??_go_close_alt:	
  2365                           ; 1 bytes @ 0x2
  2366                           
  2367  0075                     ??_go_open_alt:	
  2368                           ; 1 bytes @ 0x2
  2369                           
  2370  0075                     ??_rele_off:	
  2371                           ; 1 bytes @ 0x2
  2372                           
  2373  0075                     ??_close:	
  2374                           ; 1 bytes @ 0x2
  2375                           
  2376  0075                     ??_open:	
  2377                           ; 1 bytes @ 0x2
  2378                           
  2379  0075                     ??_start_alarm:	
  2380                           ; 1 bytes @ 0x2
  2381                           
  2382  0075                     ??_clear_alarm:	
  2383                           ; 1 bytes @ 0x2
  2384                           
  2385  0075                     ??_fun_work:	
  2386                           ; 1 bytes @ 0x2
  2387                           
  2388  0075                     ??_switch_wm:	
  2389                           ; 1 bytes @ 0x2
  2390                           
  2391  0075                     ??_autorotation_work:	
  2392                           ; 1 bytes @ 0x2
  2393                           
  2394  0075                     ??_ms_tick:	
  2395                           ; 1 bytes @ 0x2
  2396                           
  2397  0075                     ??_hardware_work:	
  2398                           ; 1 bytes @ 0x2
  2399                           
  2400  0075                     ??_get_fun:	
  2401                           ; 1 bytes @ 0x2
  2402                           
  2403  0075                     ??_get_jump:	
  2404                           ; 1 bytes @ 0x2
  2405                           
  2406  0075                     EEPROM_WriteByte@dt:	
  2407                           ; 1 bytes @ 0x2
  2408                           
  2409  0075                     TMR2_SetInterruptHandler@InterruptHandler:	
  2410                           ; 1 bytes @ 0x2
  2411                           
  2412  0075                     TMR0_SetInterruptHandler@InterruptHandler:	
  2413                           ; 2 bytes @ 0x2
  2414                           
  2415                           
  2416                           ; 2 bytes @ 0x2
  2417  0075                     	ds	1
  2418  0076                     ??_EEPROM_WriteByte:
  2419  0076                     ADC_GetConversion@channel:	
  2420                           ; 1 bytes @ 0x3
  2421                           
  2422                           
  2423                           ; 1 bytes @ 0x3
  2424  0076                     	ds	1
  2425  0077                     ??_TMR2_Initialize:
  2426  0077                     ??_TMR0_Initialize:	
  2427                           ; 1 bytes @ 0x4
  2428                           
  2429  0077                     ??_TMR2_SetInterruptHandler:	
  2430                           ; 1 bytes @ 0x4
  2431                           
  2432  0077                     ??_TMR0_SetInterruptHandler:	
  2433                           ; 1 bytes @ 0x4
  2434                           
  2435  0077                     ??_get_wsp:	
  2436                           ; 1 bytes @ 0x4
  2437                           
  2438  0077                     EEPROM_ReadByte@addr:	
  2439                           ; 1 bytes @ 0x4
  2440                           
  2441                           
  2442                           ; 1 bytes @ 0x4
  2443  0077                     	ds	1
  2444  0078                     ??_SYSTEM_Initialize:
  2445  0078                     EEPROM_WriteByte@addr:	
  2446                           ; 1 bytes @ 0x5
  2447                           
  2448                           
  2449                           ; 1 bytes @ 0x5
  2450  0078                     	ds	1
  2451  0079                     ??_start_setup:
  2452  0079                     ??_main:	
  2453                           ; 1 bytes @ 0x6
  2454                           
  2455                           
  2456                           	psect	cstackBANK0
  2457  0058                     __pcstackBANK0:	
  2458                           ; 1 bytes @ 0x6
  2459                           
  2460  0058                     ??_eeprom_set:
  2461  0058                     get_wsp@res:	
  2462                           ; 1 bytes @ 0x0
  2463                           
  2464                           
  2465                           ; 2 bytes @ 0x0
  2466  0058                     	ds	1
  2467  0059                     eeprom_set@vers:
  2468                           
  2469                           ; 1 bytes @ 0x1
  2470  0059                     	ds	1
  2471                           
  2472                           	psect	maintext
  2473  0414                     __pmaintext:	
  2474 ;;
  2475 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  2476 ;;
  2477 ;; *************** function _main *****************
  2478 ;; Defined at:
  2479 ;;		line 832 in file "main.c"
  2480 ;; Parameters:    Size  Location     Type
  2481 ;;		None
  2482 ;; Auto vars:     Size  Location     Type
  2483 ;;		None
  2484 ;; Return value:  Size  Location     Type
  2485 ;;                  1    wreg      void 
  2486 ;; Registers used:
  2487 ;;		wreg, status,2, status,0, pclath, cstack
  2488 ;; Tracked objects:
  2489 ;;		On entry : B1F/0
  2490 ;;		On exit  : 0/0
  2491 ;;		Unchanged: 0/0
  2492 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2493 ;;      Params:         0       0       0       0
  2494 ;;      Locals:         0       0       0       0
  2495 ;;      Temps:          0       0       0       0
  2496 ;;      Totals:         0       0       0       0
  2497 ;;Total ram usage:        0 bytes
  2498 ;; Hardware stack levels required when called: 11
  2499 ;; This function calls:
  2500 ;;		_autorotation_work
  2501 ;;		_close
  2502 ;;		_fun_work
  2503 ;;		_get_fun
  2504 ;;		_get_jump
  2505 ;;		_get_wsp
  2506 ;;		_hardware_work
  2507 ;;		_start_setup
  2508 ;;		_switch_wm
  2509 ;; This function is called by:
  2510 ;;		Startup code after reset
  2511 ;; This function uses a non-reentrant model
  2512 ;;
  2513                           
  2514  0414                     _main:	
  2515                           ;psect for function _main
  2516                           
  2517                           
  2518                           ;incstack = 0
  2519                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
  2520  0414                     l2682:
  2521                           
  2522                           ;main.c: 834:     start_setup();
  2523  0414  3183  2308  3184   	fcall	_start_setup
  2524  0417                     __ccov383_end_blk0:
  2525  0417                     __ccov384_start_blk1:
  2526  0417                     l551:	
  2527                           ;main.c: 837:     while (1) {
  2528                           
  2529  0417  0064               	clrwdt	;# 
  2530  0418                     __ccov384_end_blk1:
  2531  0418                     __ccov385_start_blk2:
  2532  0418                     l2684:
  2533                           
  2534                           ;main.c: 841:         hardware_work();
  2535  0418  3183  2348  3184   	fcall	_hardware_work
  2536  041B                     __ccov385_end_blk2:
  2537  041B                     __ccov386_start_blk3:
  2538  041B                     l2686:
  2539                           
  2540                           ;main.c: 845:         if (!ff.bits.ALARM_ON) {
  2541  041B  1879               	btfsc	_ff,0
  2542  041C  2C1E               	goto	u2771
  2543  041D  2C1F               	goto	u2770
  2544  041E                     u2771:
  2545  041E  2C34               	goto	l2690
  2546  041F                     __ccov386_end_blk3:
  2547  041F                     u2770:
  2548  041F                     __ccov387_start_blk4:
  2549  041F                     l2688:
  2550  041F  0020               	movlb	0	; select bank0
  2551  0420  1620               	bsf	__ccovbit4_178/(0+8),__ccovbit4_178& (0+7)	;volatile
  2552                           
  2553                           ;main.c: 847:             get_jump();
  2554  0421  3183  2383  3184   	fcall	_get_jump
  2555                           
  2556                           ;main.c: 848:             switch_wm();
  2557  0424  3183  23BE  3184   	fcall	_switch_wm
  2558                           
  2559                           ;main.c: 850:             get_fun();
  2560  0427  3182  223B  3184   	fcall	_get_fun
  2561                           
  2562                           ;main.c: 851:             fun_work();
  2563  042A  3181  21E9  3184   	fcall	_fun_work
  2564                           
  2565                           ;main.c: 853:             get_wsp();
  2566  042D  3180  20CC  3184   	fcall	_get_wsp
  2567                           
  2568                           ;main.c: 855:              autorotation_work();
  2569  0430  3181  218F  3184   	fcall	_autorotation_work
  2570                           
  2571                           ;main.c: 857:         } else {
  2572  0433  2C17               	goto	l551
  2573  0434                     __ccov387_end_blk4:
  2574  0434                     __ccov388_start_blk6:
  2575  0434                     l2690:
  2576  0434  0020               	movlb	0	; select bank0
  2577  0435  15A0               	bsf	__ccovbit6_179/(0+8),__ccovbit6_179& (0+7)	;volatile
  2578                           
  2579                           ;main.c: 858:             close();
  2580  0436  3184  2486  3184   	fcall	_close
  2581  0439  2C17               	goto	l551
  2582  043A                     __ccov388_end_blk6:
  2583  043A  3180  282D         	ljmp	start
  2584  043C                     __end_of_main:
  2585                           
  2586                           	psect	text1
  2587  03BE                     __ptext1:	
  2588 ;; *************** function _switch_wm *****************
  2589 ;; Defined at:
  2590 ;;		line 357 in file "main.c"
  2591 ;; Parameters:    Size  Location     Type
  2592 ;;		None
  2593 ;; Auto vars:     Size  Location     Type
  2594 ;;		None
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  1    wreg      void 
  2597 ;; Registers used:
  2598 ;;		wreg, status,2, status,0, pclath, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2604 ;;      Params:         0       0       0       0
  2605 ;;      Locals:         0       0       0       0
  2606 ;;      Temps:          1       0       0       0
  2607 ;;      Totals:         1       0       0       0
  2608 ;;Total ram usage:        1 bytes
  2609 ;; Hardware stack levels used: 1
  2610 ;; Hardware stack levels required when called: 8
  2611 ;; This function calls:
  2612 ;;		_rele_off
  2613 ;; This function is called by:
  2614 ;;		_main
  2615 ;; This function uses a non-reentrant model
  2616 ;;
  2617                           
  2618  03BE                     _switch_wm:	
  2619                           ;psect for function _switch_wm
  2620                           
  2621                           
  2622                           ;incstack = 0
  2623                           ; Regs used in _switch_wm: [wreg+status,2+status,0+pclath+cstack]
  2624  03BE                     l2298:
  2625                           
  2626                           ;main.c: 358:     if (ff.bits.JUMP_LOW) {
  2627  03BE  1FF9               	btfss	_ff,7
  2628  03BF  2BC1               	goto	u2251
  2629  03C0  2BC2               	goto	u2250
  2630  03C1                     u2251:
  2631  03C1  2BD4               	goto	l392
  2632  03C2                     __ccov203_end_blk0:
  2633  03C2                     u2250:
  2634  03C2                     __ccov204_start_blk1:
  2635  03C2                     l2300:
  2636  03C2  0020               	movlb	0	; select bank0
  2637  03C3  172A               	bsf	__ccovbit1_96/(0+8),__ccovbit1_96& (0+7)	;volatile
  2638                           
  2639                           ;main.c: 359:         if (!ff.bits.UNIVERSAL_VORK_MODE_ON) {
  2640  03C4  1AFB               	btfsc	_ff+2,5
  2641  03C5  2BC7               	goto	u2261
  2642  03C6  2BC8               	goto	u2260
  2643  03C7                     u2261:
  2644  03C7  2BE8               	goto	l397
  2645  03C8                     __ccov204_end_blk1:
  2646  03C8                     u2260:
  2647  03C8                     __ccov205_start_blk2:
  2648  03C8                     l2302:
  2649                           
  2650                           ;main.c: 360:             ff.bits.NORMAL_WORK_MODE_ON = 0;
  2651  03C8  127B               	bcf	_ff+2,4
  2652                           
  2653                           ;main.c: 361:             ff.bits.UNIVERSAL_VORK_MODE_ON = 1;
  2654  03C9  16FB               	bsf	_ff+2,5
  2655  03CA                     __ccov205_end_blk2:
  2656  03CA                     __ccov206_start_blk3:
  2657  03CA                     l2304:
  2658                           
  2659                           ;main.c: 362:             rele_off();
  2660  03CA  3185  25BD  3183   	fcall	_rele_off
  2661  03CD                     __ccov206_end_blk3:
  2662  03CD                     __ccov207_start_blk4:
  2663  03CD                     l2306:
  2664  03CD  0020               	movlb	0	; select bank0
  2665  03CE  16AA               	bsf	__ccovbit4_97/(0+8),__ccovbit4_97& (0+7)	;volatile
  2666                           
  2667                           ;main.c: 364:             beep_long_count = 2;
  2668  03CF  3002               	movlw	2
  2669  03D0  00F5               	movwf	??_switch_wm
  2670  03D1  0875               	movf	??_switch_wm,w
  2671  03D2  00CE               	movwf	_beep_long_count
  2672  03D3  2BE8               	goto	l397
  2673  03D4                     __ccov207_end_blk4:
  2674  03D4                     __ccov208_start_blk6:
  2675  03D4                     l392:
  2676  03D4  0020               	movlb	0	; select bank0
  2677  03D5  162A               	bsf	__ccovbit6_98/(0+8),__ccovbit6_98& (0+7)	;volatile
  2678  03D6  1C7A               	btfss	_ff+1,0
  2679  03D7  2BD9               	goto	u2271
  2680  03D8  2BDA               	goto	u2270
  2681  03D9                     u2271:
  2682  03D9  2BE8               	goto	l397
  2683  03DA                     __ccov208_end_blk6:
  2684  03DA                     u2270:
  2685  03DA                     __ccov209_start_blk7:
  2686  03DA                     l2308:
  2687  03DA  15AA               	bsf	__ccovbit7_99/(0+8),__ccovbit7_99& (0+7)	;volatile
  2688                           
  2689                           ;main.c: 367:         if (!ff.bits.NORMAL_WORK_MODE_ON) {
  2690  03DB  1A7B               	btfsc	_ff+2,4
  2691  03DC  2BDE               	goto	u2281
  2692  03DD  2BDF               	goto	u2280
  2693  03DE                     u2281:
  2694  03DE  2BE8               	goto	l397
  2695  03DF                     __ccov209_end_blk7:
  2696  03DF                     u2280:
  2697  03DF                     __ccov210_start_blk8:
  2698  03DF                     l2310:
  2699                           
  2700                           ;main.c: 368:             ff.bits.NORMAL_WORK_MODE_ON = 1;
  2701  03DF  167B               	bsf	_ff+2,4
  2702                           
  2703                           ;main.c: 369:             ff.bits.UNIVERSAL_VORK_MODE_ON = 0;
  2704  03E0  12FB               	bcf	_ff+2,5
  2705  03E1                     __ccov210_end_blk8:
  2706  03E1                     __ccov211_start_blk9:
  2707  03E1                     l2312:
  2708                           
  2709                           ;main.c: 370:             rele_off();
  2710  03E1  3185  25BD  3183   	fcall	_rele_off
  2711  03E4                     __ccov211_end_blk9:
  2712  03E4                     __ccov212_start_blk10:
  2713  03E4                     l2314:
  2714  03E4  0020               	movlb	0	; select bank0
  2715  03E5  152A               	bsf	__ccovbit10_100/(0+8),__ccovbit10_100& (0+7)	;volatile
  2716                           
  2717                           ;main.c: 372:             beep_long_count = 1;
  2718  03E6  01CE               	clrf	_beep_long_count
  2719  03E7  0ACE               	incf	_beep_long_count,f
  2720  03E8                     __ccov212_end_blk10:
  2721  03E8                     __ccov213_start_blk14:
  2722  03E8                     l397:
  2723  03E8  14AA               	bsf	__ccovbit14_101/(0+8),__ccovbit14_101& (0+7)	;volatile
  2724  03E9  0008               	return
  2725  03EA                     __end_of_switch_wm:
  2726  03EA                     
  2727                           	psect	text2
  2728  0308                     __ptext2:	
  2729 ;; *************** function _start_setup *****************
  2730 ;; Defined at:
  2731 ;;		line 752 in file "main.c"
  2732 ;; Parameters:    Size  Location     Type
  2733 ;;		None
  2734 ;; Auto vars:     Size  Location     Type
  2735 ;;		None
  2736 ;; Return value:  Size  Location     Type
  2737 ;;                  1    wreg      void 
  2738 ;; Registers used:
  2739 ;;		wreg, status,2, status,0, pclath, cstack
  2740 ;; Tracked objects:
  2741 ;;		On entry : 0/0
  2742 ;;		On exit  : 0/0
  2743 ;;		Unchanged: 0/0
  2744 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2745 ;;      Params:         0       0       0       0
  2746 ;;      Locals:         0       0       0       0
  2747 ;;      Temps:          0       0       0       0
  2748 ;;      Totals:         0       0       0       0
  2749 ;;Total ram usage:        0 bytes
  2750 ;; Hardware stack levels used: 1
  2751 ;; Hardware stack levels required when called: 10
  2752 ;; This function calls:
  2753 ;;		_SYSTEM_Initialize
  2754 ;;		_TMR0_SetInterruptHandler
  2755 ;;		_TMR2_SetInterruptHandler
  2756 ;;		_TMR2_StartTimer
  2757 ;;		_eeprom_set
  2758 ;; This function is called by:
  2759 ;;		_main
  2760 ;; This function uses a non-reentrant model
  2761 ;;
  2762                           
  2763  0308                     _start_setup:	
  2764                           ;psect for function _start_setup
  2765                           
  2766                           
  2767                           ;incstack = 0
  2768                           ; Regs used in _start_setup: [wreg+status,2+status,0+pclath+cstack]
  2769  0308                     l2630:
  2770                           
  2771                           ;main.c: 754:     SYSTEM_Initialize();
  2772  0308  3185  25D2  3183   	fcall	_SYSTEM_Initialize
  2773  030B                     __ccov362_end_blk0:
  2774  030B                     __ccov363_start_blk1:
  2775  030B                     l2632:
  2776                           
  2777                           ;main.c: 755:     (INTCONbits.GIE = 1);
  2778  030B  178B               	bsf	11,7	;volatile
  2779  030C                     __ccov363_end_blk1:
  2780  030C                     __ccov364_start_blk2:
  2781  030C                     l2634:
  2782                           
  2783                           ;main.c: 756:     (INTCONbits.PEIE = 1);
  2784  030C  170B               	bsf	11,6	;volatile
  2785                           
  2786                           ;main.c: 759:     eeprom_set();
  2787  030D  3185  2561  3183   	fcall	_eeprom_set
  2788                           
  2789                           ;main.c: 761:     TMR0_SetInterruptHandler(zummer_switch);
  2790  0310  305E               	movlw	low _zummer_switch
  2791  0311  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  2792  0312  3006               	movlw	high _zummer_switch
  2793  0313  00F6               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  2794  0314  3186  268D  3183   	fcall	_TMR0_SetInterruptHandler
  2795                           
  2796                           ;main.c: 762:     TMR2_SetInterruptHandler(ms_tick);
  2797  0317  30C6               	movlw	low _ms_tick
  2798  0318  00F5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  2799  0319  3002               	movlw	high _ms_tick
  2800  031A  00F6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  2801  031B  3186  2686  3183   	fcall	_TMR2_SetInterruptHandler
  2802  031E                     __ccov364_end_blk2:
  2803  031E                     __ccov365_start_blk3:
  2804  031E                     l2636:
  2805                           
  2806                           ;main.c: 763:     TMR2_StartTimer();
  2807  031E  3186  26B0  3183   	fcall	_TMR2_StartTimer
  2808  0321                     __ccov365_end_blk3:
  2809  0321                     __ccov366_start_blk4:
  2810  0321                     l2638:
  2811                           
  2812                           ;main.c: 780:     INTCONbits.TMR0IE = 0;
  2813  0321  128B               	bcf	11,5	;volatile
  2814                           
  2815                           ;main.c: 781:     ff.value = 0;
  2816  0322  3000               	movlw	0
  2817  0323  00FC               	movwf	_ff+3
  2818  0324  3000               	movlw	0
  2819  0325  00FB               	movwf	_ff+2
  2820  0326  3000               	movlw	0
  2821  0327  00FA               	movwf	_ff+1
  2822  0328  3000               	movlw	0
  2823  0329  00F9               	movwf	_ff
  2824  032A                     __ccov366_end_blk4:
  2825  032A                     __ccov367_start_blk6:
  2826  032A                     l2640:
  2827  032A  0022               	movlb	2	; select bank2
  2828  032B  128E               	bcf	14,5	;volatile
  2829  032C                     __ccov367_end_blk6:
  2830  032C                     __ccov368_start_blk9:
  2831  032C                     l2642:
  2832  032C  120E               	bcf	14,4	;volatile
  2833  032D                     __ccov368_end_blk9:
  2834  032D                     __ccov369_start_blk12:
  2835  032D                     l2644:
  2836  032D  100E               	bcf	14,0	;volatile
  2837  032E                     __ccov369_end_blk12:
  2838  032E                     __ccov370_start_blk15:
  2839  032E                     l2646:
  2840  032E  108E               	bcf	14,1	;volatile
  2841  032F                     __ccov370_end_blk15:
  2842  032F                     __ccov371_start_blk18:
  2843  032F                     l2648:
  2844  032F  128C               	bcf	12,5	;volatile
  2845  0330                     __ccov371_end_blk18:
  2846  0330                     __ccov372_start_blk21:
  2847  0330                     l2650:
  2848  0330  120C               	bcf	12,4	;volatile
  2849  0331                     __ccov372_end_blk21:
  2850  0331                     __ccov373_start_blk22:
  2851  0331                     l545:
  2852                           
  2853                           ;main.c: 790:     time_rotation = 0;
  2854  0331  3000               	movlw	0
  2855  0332  0020               	movlb	0	; select bank0
  2856  0333  00B4               	movwf	_time_rotation
  2857  0334  3000               	movlw	0
  2858  0335  00B5               	movwf	_time_rotation+1
  2859  0336  3000               	movlw	0
  2860  0337  00B6               	movwf	_time_rotation+2
  2861  0338                     __ccov373_end_blk22:
  2862  0338                     __ccov374_start_blk23:
  2863  0338                     l2652:
  2864                           
  2865                           ;main.c: 791:     time_rele_power = 0;
  2866  0338  01C5               	clrf	_time_rele_power
  2867  0339  01C6               	clrf	_time_rele_power+1
  2868  033A                     __ccov374_end_blk23:
  2869  033A                     __ccov375_start_blk24:
  2870  033A                     l2654:
  2871                           
  2872                           ;main.c: 792:     time_rele_control = 0;
  2873  033A  01C3               	clrf	_time_rele_control
  2874  033B  01C4               	clrf	_time_rele_control+1
  2875  033C                     __ccov375_end_blk24:
  2876  033C                     __ccov376_start_blk25:
  2877  033C                     l2656:
  2878                           
  2879                           ;main.c: 793:     time_rele_gap = 0;
  2880  033C  01C1               	clrf	_time_rele_gap
  2881  033D  01C2               	clrf	_time_rele_gap+1
  2882  033E                     __ccov376_end_blk25:
  2883  033E                     __ccov377_start_blk26:
  2884  033E                     l2658:
  2885                           
  2886                           ;main.c: 794:     time_tone = 0;
  2887  033E  01BF               	clrf	_time_tone
  2888  033F  01C0               	clrf	_time_tone+1
  2889  0340                     __ccov377_end_blk26:
  2890  0340                     __ccov378_start_blk27:
  2891  0340                     l2660:
  2892                           
  2893                           ;main.c: 799:     time_melody = 0;
  2894  0340  01D1               	clrf	_time_melody
  2895  0341                     __ccov378_end_blk27:
  2896  0341                     __ccov379_start_blk28:
  2897  0341                     l2662:
  2898                           
  2899                           ;main.c: 800:     time_zummer_short = 0;
  2900  0341  01BD               	clrf	_time_zummer_short
  2901  0342  01BE               	clrf	_time_zummer_short+1
  2902  0343                     __ccov379_end_blk28:
  2903  0343                     __ccov380_start_blk29:
  2904  0343                     l2664:
  2905                           
  2906                           ;main.c: 801:     time_zummer_long = 0;
  2907  0343  01BB               	clrf	_time_zummer_long
  2908  0344  01BC               	clrf	_time_zummer_long+1
  2909  0345                     __ccov380_end_blk29:
  2910  0345                     __ccov381_start_blk30:
  2911  0345                     l2666:
  2912                           
  2913                           ;main.c: 804:     time_meas = 0;
  2914  0345  01CF               	clrf	_time_meas
  2915  0346                     __ccov381_end_blk30:
  2916  0346                     __ccov382_start_blk31:
  2917  0346                     l546:
  2918  0346  16A0               	bsf	__ccovbit31_177/(0+8),__ccovbit31_177& (0+7)	;volatile
  2919  0347  0008               	return
  2920  0348                     __end_of_start_setup:
  2921  0348                     
  2922                           	psect	text3
  2923  0561                     __ptext3:	
  2924 ;; *************** function _eeprom_set *****************
  2925 ;; Defined at:
  2926 ;;		line 560 in file "main.c"
  2927 ;; Parameters:    Size  Location     Type
  2928 ;;		None
  2929 ;; Auto vars:     Size  Location     Type
  2930 ;;  vers            1    1[BANK0 ] unsigned char 
  2931 ;; Return value:  Size  Location     Type
  2932 ;;                  1    wreg      void 
  2933 ;; Registers used:
  2934 ;;		wreg, status,2, status,0, pclath, cstack
  2935 ;; Tracked objects:
  2936 ;;		On entry : 0/0
  2937 ;;		On exit  : 0/0
  2938 ;;		Unchanged: 0/0
  2939 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  2940 ;;      Params:         0       0       0       0
  2941 ;;      Locals:         0       1       0       0
  2942 ;;      Temps:          0       1       0       0
  2943 ;;      Totals:         0       2       0       0
  2944 ;;Total ram usage:        2 bytes
  2945 ;; Hardware stack levels used: 1
  2946 ;; Hardware stack levels required when called: 8
  2947 ;; This function calls:
  2948 ;;		_EEPROM_ReadByte
  2949 ;;		_EEPROM_WriteByte
  2950 ;; This function is called by:
  2951 ;;		_start_setup
  2952 ;; This function uses a non-reentrant model
  2953 ;;
  2954                           
  2955  0561                     _eeprom_set:	
  2956                           ;psect for function _eeprom_set
  2957                           
  2958                           
  2959                           ;incstack = 0
  2960                           ; Regs used in _eeprom_set: [wreg+status,2+status,0+pclath+cstack]
  2961  0561                     l2592:
  2962                           
  2963                           ;main.c: 561:     char vers = EEPROM_ReadByte(FRIMWARE_VERSION_EEPROM_ADR);
  2964  0561  3001               	movlw	1
  2965  0562  3184  24FE  3185   	fcall	_EEPROM_ReadByte
  2966  0565  0020               	movlb	0	; select bank0
  2967  0566  00D8               	movwf	??_eeprom_set
  2968  0567  0858               	movf	??_eeprom_set,w
  2969  0568  00D9               	movwf	eeprom_set@vers
  2970  0569                     __ccov295_end_blk0:
  2971  0569                     __ccov296_start_blk1:
  2972  0569                     l2594:
  2973                           
  2974                           ;main.c: 562:     if (vers == 0xFF) {
  2975  0569  0A59               	incf	eeprom_set@vers,w
  2976  056A  1D03               	btfss	3,2
  2977  056B  2D6D               	goto	u2711
  2978  056C  2D6E               	goto	u2710
  2979  056D                     u2711:
  2980  056D  2D75               	goto	l466
  2981  056E                     __ccov296_end_blk1:
  2982  056E                     u2710:
  2983  056E                     __ccov297_start_blk2:
  2984  056E                     l2596:
  2985  056E  1424               	bsf	__ccovbit2_150/(0+8),__ccovbit2_150& (0+7)	;volatile
  2986                           
  2987                           ;main.c: 563:         EEPROM_WriteByte(FRIMWARE_VERSION_EEPROM_ADR, 1);
  2988  056F  01F5               	clrf	EEPROM_WriteByte@dt
  2989  0570  0AF5               	incf	EEPROM_WriteByte@dt,f
  2990  0571  3001               	movlw	1
  2991  0572  3184  243C  3185   	fcall	_EEPROM_WriteByte
  2992  0575                     __ccov297_end_blk2:
  2993  0575                     __ccov298_start_blk4:
  2994  0575                     l466:
  2995  0575  0020               	movlb	0	; select bank0
  2996  0576  17A3               	bsf	__ccovbit4_151/(0+8),__ccovbit4_151& (0+7)	;volatile
  2997  0577  0008               	return
  2998  0578                     __end_of_eeprom_set:
  2999  0578                     
  3000                           	psect	text4
  3001  043C                     __ptext4:	
  3002 ;; *************** function _EEPROM_WriteByte *****************
  3003 ;; Defined at:
  3004 ;;		line 6 in file "eeprom.c"
  3005 ;; Parameters:    Size  Location     Type
  3006 ;;  addr            1    wreg     unsigned char 
  3007 ;;  dt              1    2[COMMON] unsigned char 
  3008 ;; Auto vars:     Size  Location     Type
  3009 ;;  addr            1    5[COMMON] unsigned char 
  3010 ;; Return value:  Size  Location     Type
  3011 ;;                  1    wreg      void 
  3012 ;; Registers used:
  3013 ;;		wreg
  3014 ;; Tracked objects:
  3015 ;;		On entry : 0/0
  3016 ;;		On exit  : 0/0
  3017 ;;		Unchanged: 0/0
  3018 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3019 ;;      Params:         1       0       0       0
  3020 ;;      Locals:         1       0       0       0
  3021 ;;      Temps:          2       0       0       0
  3022 ;;      Totals:         4       0       0       0
  3023 ;;Total ram usage:        4 bytes
  3024 ;; Hardware stack levels used: 1
  3025 ;; Hardware stack levels required when called: 7
  3026 ;; This function calls:
  3027 ;;		Nothing
  3028 ;; This function is called by:
  3029 ;;		_eeprom_set
  3030 ;;		_EEPROM_WriteWord
  3031 ;;		_EEPROM_Writeint24
  3032 ;;		_EEPROM_WriteString
  3033 ;; This function uses a non-reentrant model
  3034 ;;
  3035                           
  3036  043C                     _EEPROM_WriteByte:	
  3037                           ;psect for function _EEPROM_WriteByte
  3038                           
  3039                           
  3040                           ;incstack = 0
  3041                           ; Regs used in _EEPROM_WriteByte: [wreg]
  3042                           ;EEPROM_WriteByte@addr stored from wreg
  3043  043C  00F8               	movwf	EEPROM_WriteByte@addr
  3044  043D                     l2562:
  3045  043D                     l575:	
  3046                           ;eeprom.c: 7:    static __bit status;;eeprom.c: 8:     while (WR);
  3047                           
  3048  043D  0023               	movlb	3	; select bank3
  3049  043E  1895               	btfsc	21,1	;volsfr
  3050  043F  2C41               	goto	u2661
  3051  0440  2C42               	goto	u2660
  3052  0441                     u2661:
  3053  0441  2C3D               	goto	l575
  3054  0442                     __ccov390_end_blk2:
  3055  0442                     u2660:
  3056  0442                     __ccov391_start_blk3:
  3057  0442                     l577:
  3058                           
  3059                           ;eeprom.c: 9:     status = GIE;
  3060  0442  13F2               	bcf	EEPROM_WriteByte@status/(0+8),EEPROM_WriteByte@status& (0+7)
  3061  0443  1F8B               	btfss	11,7	;volatile
  3062  0444  2C46               	goto	u2675
  3063  0445  17F2               	bsf	EEPROM_WriteByte@status/(0+8),EEPROM_WriteByte@status& (0+7)
  3064  0446                     u2675:
  3065                           
  3066                           ;eeprom.c: 10:     GIE = 0;
  3067  0446  138B               	bcf	11,7	;volatile
  3068  0447                     __ccov391_end_blk3:
  3069  0447                     __ccov392_start_blk4:
  3070  0447                     l2564:
  3071                           
  3072                           ;eeprom.c: 11:     EEADR = addr;
  3073  0447  0878               	movf	EEPROM_WriteByte@addr,w
  3074  0448  00F6               	movwf	??_EEPROM_WriteByte
  3075  0449  01F7               	clrf	??_EEPROM_WriteByte+1
  3076  044A  0876               	movf	??_EEPROM_WriteByte,w
  3077  044B  0023               	movlb	3	; select bank3
  3078  044C  0091               	movwf	17	;volatile
  3079  044D  0877               	movf	??_EEPROM_WriteByte+1,w
  3080  044E  0092               	movwf	18	;volatile
  3081                           
  3082                           ;eeprom.c: 12:     EEDATA = dt;
  3083  044F  0875               	movf	EEPROM_WriteByte@dt,w
  3084  0450  0093               	movwf	19	;volatile
  3085  0451                     __ccov392_end_blk4:
  3086  0451                     __ccov393_start_blk5:
  3087  0451                     l2566:
  3088                           
  3089                           ;eeprom.c: 13:     WREN = 1;
  3090  0451  1515               	bsf	21,2	;volsfr
  3091                           
  3092                           ;eeprom.c: 14:     EECON2 = 0x55;
  3093  0452  3055               	movlw	85
  3094  0453  0096               	movwf	22	;volsfr
  3095                           
  3096                           ;eeprom.c: 15:     EECON2 = 0xAA;
  3097  0454  30AA               	movlw	170
  3098  0455  0096               	movwf	22	;volsfr
  3099  0456                     __ccov393_end_blk5:
  3100  0456                     __ccov394_start_blk6:
  3101  0456                     l2568:
  3102                           
  3103                           ;eeprom.c: 16:     WR = 1;
  3104  0456  1495               	bsf	21,1	;volsfr
  3105  0457                     __ccov394_end_blk6:
  3106  0457                     __ccov395_start_blk7:
  3107  0457                     l2570:
  3108                           
  3109                           ;eeprom.c: 17:     GIE = status;
  3110  0457  1BF2               	btfsc	EEPROM_WriteByte@status/(0+8),EEPROM_WriteByte@status& (0+7)
  3111  0458  2C5A               	goto	u2681
  3112  0459  2C5C               	goto	u2680
  3113  045A                     u2681:
  3114  045A  178B               	bsf	11,7	;volatile
  3115  045B  2C5D               	goto	u2694
  3116  045C                     u2680:
  3117  045C  138B               	bcf	11,7	;volatile
  3118  045D                     __ccov395_end_blk7:
  3119  045D                     u2694:
  3120  045D                     __ccov396_start_blk8:
  3121  045D                     l2572:
  3122                           
  3123                           ;eeprom.c: 18:     WREN = 0;
  3124  045D  0023               	movlb	3	; select bank3
  3125  045E  1115               	bcf	21,2	;volsfr
  3126  045F                     __ccov396_end_blk8:
  3127  045F                     __ccov397_start_blk9:
  3128  045F                     l578:
  3129  045F  0020               	movlb	0	; select bank0
  3130  0460  1520               	bsf	__ccovbit9_180/(0+8),__ccovbit9_180& (0+7)	;volatile
  3131  0461  0008               	return
  3132  0462                     __end_of_EEPROM_WriteByte:
  3133  0462                     
  3134                           	psect	text5
  3135  04FE                     __ptext5:	
  3136 ;; *************** function _EEPROM_ReadByte *****************
  3137 ;; Defined at:
  3138 ;;		line 21 in file "eeprom.c"
  3139 ;; Parameters:    Size  Location     Type
  3140 ;;  addr            1    wreg     unsigned char 
  3141 ;; Auto vars:     Size  Location     Type
  3142 ;;  addr            1    4[COMMON] unsigned char 
  3143 ;; Return value:  Size  Location     Type
  3144 ;;                  1    wreg      unsigned char 
  3145 ;; Registers used:
  3146 ;;		wreg
  3147 ;; Tracked objects:
  3148 ;;		On entry : 0/0
  3149 ;;		On exit  : 0/0
  3150 ;;		Unchanged: 0/0
  3151 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3152 ;;      Params:         0       0       0       0
  3153 ;;      Locals:         1       0       0       0
  3154 ;;      Temps:          2       0       0       0
  3155 ;;      Totals:         3       0       0       0
  3156 ;;Total ram usage:        3 bytes
  3157 ;; Hardware stack levels used: 1
  3158 ;; Hardware stack levels required when called: 7
  3159 ;; This function calls:
  3160 ;;		Nothing
  3161 ;; This function is called by:
  3162 ;;		_eeprom_set
  3163 ;;		_EEPROM_ReadWord
  3164 ;;		_EEPROM_Readint24
  3165 ;;		_EEPROM_ReadString
  3166 ;; This function uses a non-reentrant model
  3167 ;;
  3168                           
  3169  04FE                     _EEPROM_ReadByte:	
  3170                           ;psect for function _EEPROM_ReadByte
  3171                           
  3172                           
  3173                           ;incstack = 0
  3174                           ; Regs used in _EEPROM_ReadByte: [wreg]
  3175                           ;EEPROM_ReadByte@addr stored from wreg
  3176  04FE  00F7               	movwf	EEPROM_ReadByte@addr
  3177  04FF                     l2552:
  3178  04FF                     l581:	
  3179                           ;eeprom.c: 22:     while (RD || WR);
  3180                           
  3181  04FF  0023               	movlb	3	; select bank3
  3182  0500  1815               	btfsc	21,0	;volsfr
  3183  0501  2D03               	goto	u2641
  3184  0502  2D04               	goto	u2640
  3185  0503                     u2641:
  3186  0503  2CFF               	goto	l581
  3187  0504                     __ccov399_end_blk2:
  3188  0504                     u2640:
  3189  0504                     __ccov400_start_blk3:
  3190  0504                     l2554:
  3191  0504  0020               	movlb	0	; select bank0
  3192  0505  14A0               	bsf	__ccovbit3_181/(0+8),__ccovbit3_181& (0+7)	;volatile
  3193  0506  0023               	movlb	3	; select bank3
  3194  0507  1895               	btfsc	21,1	;volsfr
  3195  0508  2D0A               	goto	u2651
  3196  0509  2D0B               	goto	u2650
  3197  050A                     u2651:
  3198  050A  2CFF               	goto	l581
  3199  050B                     __ccov400_end_blk3:
  3200  050B                     u2650:
  3201  050B                     __ccov401_start_blk5:
  3202  050B                     l2556:
  3203                           
  3204                           ;eeprom.c: 23:     EEADR = addr;
  3205  050B  0877               	movf	EEPROM_ReadByte@addr,w
  3206  050C  00F5               	movwf	??_EEPROM_ReadByte
  3207  050D  01F6               	clrf	??_EEPROM_ReadByte+1
  3208  050E  0875               	movf	??_EEPROM_ReadByte,w
  3209  050F  0091               	movwf	17	;volatile
  3210  0510  0876               	movf	??_EEPROM_ReadByte+1,w
  3211  0511  0092               	movwf	18	;volatile
  3212  0512                     __ccov401_end_blk5:
  3213  0512                     __ccov402_start_blk6:
  3214  0512                     l2558:
  3215                           
  3216                           ;eeprom.c: 24:     RD = 1;
  3217  0512  1415               	bsf	21,0	;volsfr
  3218                           
  3219                           ;eeprom.c: 25:     return EEDATA;
  3220  0513  0813               	movf	19,w	;volatile
  3221  0514                     __ccov402_end_blk6:
  3222  0514                     __ccov403_start_blk8:
  3223  0514                     l584:
  3224  0514  0020               	movlb	0	; select bank0
  3225  0515  1420               	bsf	__ccovbit8_182/(0+8),__ccovbit8_182& (0+7)	;volatile
  3226  0516  0008               	return
  3227  0517                     __end_of_EEPROM_ReadByte:
  3228  0517                     
  3229                           	psect	text6
  3230  06B0                     __ptext6:	
  3231 ;; *************** function _TMR2_StartTimer *****************
  3232 ;; Defined at:
  3233 ;;		line 87 in file "mcc_generated_files/tmr2.c"
  3234 ;; Parameters:    Size  Location     Type
  3235 ;;		None
  3236 ;; Auto vars:     Size  Location     Type
  3237 ;;		None
  3238 ;; Return value:  Size  Location     Type
  3239 ;;                  1    wreg      void 
  3240 ;; Registers used:
  3241 ;;		None
  3242 ;; Tracked objects:
  3243 ;;		On entry : 0/0
  3244 ;;		On exit  : 0/0
  3245 ;;		Unchanged: 0/0
  3246 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3247 ;;      Params:         0       0       0       0
  3248 ;;      Locals:         0       0       0       0
  3249 ;;      Temps:          0       0       0       0
  3250 ;;      Totals:         0       0       0       0
  3251 ;;Total ram usage:        0 bytes
  3252 ;; Hardware stack levels used: 1
  3253 ;; Hardware stack levels required when called: 7
  3254 ;; This function calls:
  3255 ;;		Nothing
  3256 ;; This function is called by:
  3257 ;;		_start_setup
  3258 ;; This function uses a non-reentrant model
  3259 ;;
  3260                           
  3261  06B0                     _TMR2_StartTimer:	
  3262                           ;psect for function _TMR2_StartTimer
  3263                           
  3264                           
  3265                           ;incstack = 0
  3266                           ; Regs used in _TMR2_StartTimer: []
  3267  06B0                     l2178:
  3268                           
  3269                           ;mcc_generated_files/tmr2.c: 90:     T2CONbits.TMR2ON = 1;
  3270  06B0  0020               	movlb	0	; select bank0
  3271  06B1  151C               	bsf	28,2	;volatile
  3272  06B2                     __ccov55_end_blk0:
  3273  06B2                     __ccov56_start_blk1:
  3274  06B2                     l140:
  3275  06B2  1471               	bsf	__ccovbit1_15/(0+8),__ccovbit1_15& (0+7)	;volatile
  3276  06B3  0008               	return
  3277  06B4                     __end_of_TMR2_StartTimer:
  3278  06B4                     
  3279                           	psect	text7
  3280  05D2                     __ptext7:	
  3281 ;; *************** function _SYSTEM_Initialize *****************
  3282 ;; Defined at:
  3283 ;;		line 50 in file "mcc_generated_files/mcc.c"
  3284 ;; Parameters:    Size  Location     Type
  3285 ;;		None
  3286 ;; Auto vars:     Size  Location     Type
  3287 ;;		None
  3288 ;; Return value:  Size  Location     Type
  3289 ;;                  1    wreg      void 
  3290 ;; Registers used:
  3291 ;;		wreg, status,2, status,0, pclath, cstack
  3292 ;; Tracked objects:
  3293 ;;		On entry : 0/0
  3294 ;;		On exit  : 0/0
  3295 ;;		Unchanged: 0/0
  3296 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3297 ;;      Params:         0       0       0       0
  3298 ;;      Locals:         0       0       0       0
  3299 ;;      Temps:          0       0       0       0
  3300 ;;      Totals:         0       0       0       0
  3301 ;;Total ram usage:        0 bytes
  3302 ;; Hardware stack levels used: 1
  3303 ;; Hardware stack levels required when called: 9
  3304 ;; This function calls:
  3305 ;;		_ADC_Initialize
  3306 ;;		_OSCILLATOR_Initialize
  3307 ;;		_PIN_MANAGER_Initialize
  3308 ;;		_TMR0_Initialize
  3309 ;;		_TMR2_Initialize
  3310 ;;		_WDT_Initialize
  3311 ;; This function is called by:
  3312 ;;		_start_setup
  3313 ;; This function uses a non-reentrant model
  3314 ;;
  3315                           
  3316  05D2                     _SYSTEM_Initialize:	
  3317                           ;psect for function _SYSTEM_Initialize
  3318                           
  3319                           
  3320                           ;incstack = 0
  3321                           ; Regs used in _SYSTEM_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3322  05D2                     l2164:
  3323                           
  3324                           ;mcc_generated_files/mcc.c: 53:     PIN_MANAGER_Initialize();
  3325  05D2  3185  258F  3185   	fcall	_PIN_MANAGER_Initialize
  3326                           
  3327                           ;mcc_generated_files/mcc.c: 54:     OSCILLATOR_Initialize();
  3328  05D5  3186  2676  3185   	fcall	_OSCILLATOR_Initialize
  3329                           
  3330                           ;mcc_generated_files/mcc.c: 55:     WDT_Initialize();
  3331  05D8  3186  26A6  3185   	fcall	_WDT_Initialize
  3332                           
  3333                           ;mcc_generated_files/mcc.c: 56:     TMR2_Initialize();
  3334  05DB  3185  25E6  3185   	fcall	_TMR2_Initialize
  3335                           
  3336                           ;mcc_generated_files/mcc.c: 57:     ADC_Initialize();
  3337  05DE  3186  266D  3185   	fcall	_ADC_Initialize
  3338                           
  3339                           ;mcc_generated_files/mcc.c: 58:     TMR0_Initialize();
  3340  05E1  3185  2578  3185   	fcall	_TMR0_Initialize
  3341  05E4                     __ccov1_end_blk0:
  3342  05E4                     __ccov2_start_blk1:
  3343  05E4                     l23:
  3344  05E4  1772               	bsf	__ccovbit1_1/(0+8),__ccovbit1_1& (0+7)	;volatile
  3345  05E5  0008               	return
  3346  05E6                     __end_of_SYSTEM_Initialize:
  3347  05E6                     
  3348                           	psect	text8
  3349  06A6                     __ptext8:	
  3350 ;; *************** function _WDT_Initialize *****************
  3351 ;; Defined at:
  3352 ;;		line 71 in file "mcc_generated_files/mcc.c"
  3353 ;; Parameters:    Size  Location     Type
  3354 ;;		None
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;		None
  3357 ;; Return value:  Size  Location     Type
  3358 ;;                  1    wreg      void 
  3359 ;; Registers used:
  3360 ;;		wreg
  3361 ;; Tracked objects:
  3362 ;;		On entry : 0/0
  3363 ;;		On exit  : 0/0
  3364 ;;		Unchanged: 0/0
  3365 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3366 ;;      Params:         0       0       0       0
  3367 ;;      Locals:         0       0       0       0
  3368 ;;      Temps:          0       0       0       0
  3369 ;;      Totals:         0       0       0       0
  3370 ;;Total ram usage:        0 bytes
  3371 ;; Hardware stack levels used: 1
  3372 ;; Hardware stack levels required when called: 7
  3373 ;; This function calls:
  3374 ;;		Nothing
  3375 ;; This function is called by:
  3376 ;;		_SYSTEM_Initialize
  3377 ;; This function uses a non-reentrant model
  3378 ;;
  3379                           
  3380  06A6                     _WDT_Initialize:	
  3381                           ;psect for function _WDT_Initialize
  3382                           
  3383                           
  3384                           ;incstack = 0
  3385                           ; Regs used in _WDT_Initialize: [wreg]
  3386  06A6                     l2010:
  3387                           
  3388                           ;mcc_generated_files/mcc.c: 74:     WDTCON = 0x0A;
  3389  06A6  300A               	movlw	10
  3390  06A7  0021               	movlb	1	; select bank1
  3391  06A8  0097               	movwf	23	;volatile
  3392  06A9                     __ccov7_end_blk0:
  3393  06A9                     __ccov8_start_blk1:
  3394  06A9                     l29:
  3395  06A9  1672               	bsf	__ccovbit1_3/(0+8),__ccovbit1_3& (0+7)	;volatile
  3396  06AA  0008               	return
  3397  06AB                     __end_of_WDT_Initialize:
  3398  06AB                     
  3399                           	psect	text9
  3400  05E6                     __ptext9:	
  3401 ;; *************** function _TMR2_Initialize *****************
  3402 ;; Defined at:
  3403 ;;		line 64 in file "mcc_generated_files/tmr2.c"
  3404 ;; Parameters:    Size  Location     Type
  3405 ;;		None
  3406 ;; Auto vars:     Size  Location     Type
  3407 ;;		None
  3408 ;; Return value:  Size  Location     Type
  3409 ;;                  1    wreg      void 
  3410 ;; Registers used:
  3411 ;;		wreg, status,2, status,0, pclath, cstack
  3412 ;; Tracked objects:
  3413 ;;		On entry : 0/0
  3414 ;;		On exit  : 0/0
  3415 ;;		Unchanged: 0/0
  3416 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3417 ;;      Params:         0       0       0       0
  3418 ;;      Locals:         0       0       0       0
  3419 ;;      Temps:          0       0       0       0
  3420 ;;      Totals:         0       0       0       0
  3421 ;;Total ram usage:        0 bytes
  3422 ;; Hardware stack levels used: 1
  3423 ;; Hardware stack levels required when called: 8
  3424 ;; This function calls:
  3425 ;;		_TMR2_SetInterruptHandler
  3426 ;; This function is called by:
  3427 ;;		_SYSTEM_Initialize
  3428 ;; This function uses a non-reentrant model
  3429 ;;
  3430                           
  3431  05E6                     _TMR2_Initialize:	
  3432                           ;psect for function _TMR2_Initialize
  3433                           
  3434                           
  3435                           ;incstack = 0
  3436                           ; Regs used in _TMR2_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3437  05E6                     l2012:
  3438                           
  3439                           ;mcc_generated_files/tmr2.c: 69:     PR2 = 0x63;
  3440  05E6  3063               	movlw	99
  3441  05E7  0020               	movlb	0	; select bank0
  3442  05E8  009B               	movwf	27	;volatile
  3443  05E9                     __ccov48_end_blk0:
  3444  05E9                     __ccov49_start_blk1:
  3445  05E9                     l2014:
  3446                           
  3447                           ;mcc_generated_files/tmr2.c: 72:     TMR2 = 0x00;
  3448  05E9  019A               	clrf	26	;volatile
  3449  05EA                     __ccov49_end_blk1:
  3450  05EA                     __ccov50_start_blk2:
  3451  05EA                     l2016:
  3452                           
  3453                           ;mcc_generated_files/tmr2.c: 75:     PIR1bits.TMR2IF = 0;
  3454  05EA  1091               	bcf	17,1	;volatile
  3455  05EB                     __ccov50_end_blk2:
  3456  05EB                     __ccov51_start_blk3:
  3457  05EB                     l2018:
  3458                           
  3459                           ;mcc_generated_files/tmr2.c: 78:     PIE1bits.TMR2IE = 1;
  3460  05EB  0021               	movlb	1	; select bank1
  3461  05EC  1491               	bsf	17,1	;volatile
  3462  05ED                     __ccov51_end_blk3:
  3463  05ED                     __ccov52_start_blk4:
  3464  05ED                     l2020:
  3465                           
  3466                           ;mcc_generated_files/tmr2.c: 81:     TMR2_SetInterruptHandler(TMR2_DefaultInterruptHandl
      +                          er);
  3467  05ED  30C6               	movlw	low _TMR2_DefaultInterruptHandler
  3468  05EE  00F5               	movwf	TMR2_SetInterruptHandler@InterruptHandler
  3469  05EF  3006               	movlw	high _TMR2_DefaultInterruptHandler
  3470  05F0  00F6               	movwf	TMR2_SetInterruptHandler@InterruptHandler+1
  3471  05F1  3186  2686  3185   	fcall	_TMR2_SetInterruptHandler
  3472  05F4                     __ccov52_end_blk4:
  3473  05F4                     __ccov53_start_blk5:
  3474  05F4                     l2022:
  3475                           
  3476                           ;mcc_generated_files/tmr2.c: 84:     T2CON = 0x4D;
  3477  05F4  304D               	movlw	77
  3478  05F5  0020               	movlb	0	; select bank0
  3479  05F6  009C               	movwf	28	;volatile
  3480  05F7                     __ccov53_end_blk5:
  3481  05F7                     __ccov54_start_blk6:
  3482  05F7                     l137:
  3483  05F7  14F1               	bsf	__ccovbit6_14/(0+8),__ccovbit6_14& (0+7)	;volatile
  3484  05F8  0008               	return
  3485  05F9                     __end_of_TMR2_Initialize:
  3486  05F9                     
  3487                           	psect	text10
  3488  0686                     __ptext10:	
  3489 ;; *************** function _TMR2_SetInterruptHandler *****************
  3490 ;; Defined at:
  3491 ;;		line 132 in file "mcc_generated_files/tmr2.c"
  3492 ;; Parameters:    Size  Location     Type
  3493 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  3494 ;;		 -> ms_tick(1), TMR2_DefaultInterruptHandler(1), 
  3495 ;; Auto vars:     Size  Location     Type
  3496 ;;		None
  3497 ;; Return value:  Size  Location     Type
  3498 ;;                  1    wreg      void 
  3499 ;; Registers used:
  3500 ;;		wreg
  3501 ;; Tracked objects:
  3502 ;;		On entry : 0/0
  3503 ;;		On exit  : 0/0
  3504 ;;		Unchanged: 0/0
  3505 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3506 ;;      Params:         2       0       0       0
  3507 ;;      Locals:         0       0       0       0
  3508 ;;      Temps:          0       0       0       0
  3509 ;;      Totals:         2       0       0       0
  3510 ;;Total ram usage:        2 bytes
  3511 ;; Hardware stack levels used: 1
  3512 ;; Hardware stack levels required when called: 7
  3513 ;; This function calls:
  3514 ;;		Nothing
  3515 ;; This function is called by:
  3516 ;;		_TMR2_Initialize
  3517 ;;		_start_setup
  3518 ;; This function uses a non-reentrant model
  3519 ;;
  3520                           
  3521  0686                     _TMR2_SetInterruptHandler:	
  3522                           ;psect for function _TMR2_SetInterruptHandler
  3523                           
  3524                           
  3525                           ;incstack = 0
  3526                           ; Regs used in _TMR2_SetInterruptHandler: [wreg]
  3527  0686                     l1934:
  3528                           
  3529                           ;mcc_generated_files/tmr2.c: 133:     TMR2_InterruptHandler = InterruptHandler;
  3530  0686  0876               	movf	TMR2_SetInterruptHandler@InterruptHandler+1,w
  3531  0687  0020               	movlb	0	; select bank0
  3532  0688  00D6               	movwf	_TMR2_InterruptHandler+1
  3533  0689  0875               	movf	TMR2_SetInterruptHandler@InterruptHandler,w
  3534  068A  00D5               	movwf	_TMR2_InterruptHandler
  3535  068B                     __ccov69_end_blk0:
  3536  068B                     __ccov70_start_blk1:
  3537  068B                     l159:
  3538  068B  16F0               	bsf	__ccovbit1_18/(0+8),__ccovbit1_18& (0+7)	;volatile
  3539  068C  0008               	return
  3540  068D                     __end_of_TMR2_SetInterruptHandler:
  3541  068D                     
  3542                           	psect	text11
  3543  0578                     __ptext11:	
  3544 ;; *************** function _TMR0_Initialize *****************
  3545 ;; Defined at:
  3546 ;;		line 64 in file "mcc_generated_files/tmr0.c"
  3547 ;; Parameters:    Size  Location     Type
  3548 ;;		None
  3549 ;; Auto vars:     Size  Location     Type
  3550 ;;		None
  3551 ;; Return value:  Size  Location     Type
  3552 ;;                  1    wreg      void 
  3553 ;; Registers used:
  3554 ;;		wreg, status,2, status,0, pclath, cstack
  3555 ;; Tracked objects:
  3556 ;;		On entry : 0/0
  3557 ;;		On exit  : 0/0
  3558 ;;		Unchanged: 0/0
  3559 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3560 ;;      Params:         0       0       0       0
  3561 ;;      Locals:         0       0       0       0
  3562 ;;      Temps:          1       0       0       0
  3563 ;;      Totals:         1       0       0       0
  3564 ;;Total ram usage:        1 bytes
  3565 ;; Hardware stack levels used: 1
  3566 ;; Hardware stack levels required when called: 8
  3567 ;; This function calls:
  3568 ;;		_TMR0_SetInterruptHandler
  3569 ;; This function is called by:
  3570 ;;		_SYSTEM_Initialize
  3571 ;; This function uses a non-reentrant model
  3572 ;;
  3573                           
  3574  0578                     _TMR0_Initialize:	
  3575                           ;psect for function _TMR0_Initialize
  3576                           
  3577                           
  3578                           ;incstack = 0
  3579                           ; Regs used in _TMR0_Initialize: [wreg+status,2+status,0+pclath+cstack]
  3580  0578                     l2030:
  3581                           
  3582                           ;mcc_generated_files/tmr0.c: 69:     OPTION_REG = (uint8_t)((OPTION_REG & 0xC0) | (0xD1 
      +                          & 0x3F));
  3583  0578  0021               	movlb	1	; select bank1
  3584  0579  0815               	movf	21,w	;volatile
  3585  057A  39C0               	andlw	192
  3586  057B  3811               	iorlw	17
  3587  057C  0095               	movwf	21	;volatile
  3588  057D                     __ccov72_end_blk0:
  3589  057D                     __ccov73_start_blk1:
  3590  057D                     l2032:
  3591                           
  3592                           ;mcc_generated_files/tmr0.c: 72:     TMR0 = 0x83;
  3593  057D  3083               	movlw	131
  3594  057E  0020               	movlb	0	; select bank0
  3595  057F  0095               	movwf	21	;volatile
  3596  0580                     __ccov73_end_blk1:
  3597  0580                     __ccov74_start_blk2:
  3598  0580                     l2034:
  3599                           
  3600                           ;mcc_generated_files/tmr0.c: 75:     timer0ReloadVal= 131;
  3601  0580  3083               	movlw	131
  3602  0581  00F7               	movwf	??_TMR0_Initialize
  3603  0582  0877               	movf	??_TMR0_Initialize,w
  3604  0583  00D7               	movwf	_timer0ReloadVal	;volatile
  3605  0584                     __ccov74_end_blk2:
  3606  0584                     __ccov75_start_blk3:
  3607  0584                     l2036:
  3608                           
  3609                           ;mcc_generated_files/tmr0.c: 78:     INTCONbits.TMR0IF = 0;
  3610  0584  110B               	bcf	11,2	;volatile
  3611  0585                     __ccov75_end_blk3:
  3612  0585                     __ccov76_start_blk4:
  3613  0585                     l2038:
  3614                           
  3615                           ;mcc_generated_files/tmr0.c: 81:     INTCONbits.TMR0IE = 1;
  3616  0585  168B               	bsf	11,5	;volatile
  3617  0586                     __ccov76_end_blk4:
  3618  0586                     __ccov77_start_blk5:
  3619  0586                     l2040:
  3620                           
  3621                           ;mcc_generated_files/tmr0.c: 84:     TMR0_SetInterruptHandler(TMR0_DefaultInterruptHandl
      +                          er);
  3622  0586  30B7               	movlw	low _TMR0_DefaultInterruptHandler
  3623  0587  00F5               	movwf	TMR0_SetInterruptHandler@InterruptHandler
  3624  0588  3006               	movlw	high _TMR0_DefaultInterruptHandler
  3625  0589  00F6               	movwf	TMR0_SetInterruptHandler@InterruptHandler+1
  3626  058A  3186  268D  3185   	fcall	_TMR0_SetInterruptHandler
  3627  058D                     __ccov77_end_blk5:
  3628  058D                     __ccov78_start_blk6:
  3629  058D                     l179:
  3630  058D  15F0               	bsf	__ccovbit6_20/(0+8),__ccovbit6_20& (0+7)	;volatile
  3631  058E  0008               	return
  3632  058F                     __end_of_TMR0_Initialize:
  3633  058F                     
  3634                           	psect	text12
  3635  068D                     __ptext12:	
  3636 ;; *************** function _TMR0_SetInterruptHandler *****************
  3637 ;; Defined at:
  3638 ;;		line 125 in file "mcc_generated_files/tmr0.c"
  3639 ;; Parameters:    Size  Location     Type
  3640 ;;  InterruptHan    2    2[COMMON] PTR FTN()void 
  3641 ;;		 -> zummer_switch(1), TMR0_DefaultInterruptHandler(1), 
  3642 ;; Auto vars:     Size  Location     Type
  3643 ;;		None
  3644 ;; Return value:  Size  Location     Type
  3645 ;;                  1    wreg      void 
  3646 ;; Registers used:
  3647 ;;		wreg
  3648 ;; Tracked objects:
  3649 ;;		On entry : 0/0
  3650 ;;		On exit  : 0/0
  3651 ;;		Unchanged: 0/0
  3652 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3653 ;;      Params:         2       0       0       0
  3654 ;;      Locals:         0       0       0       0
  3655 ;;      Temps:          0       0       0       0
  3656 ;;      Totals:         2       0       0       0
  3657 ;;Total ram usage:        2 bytes
  3658 ;; Hardware stack levels used: 1
  3659 ;; Hardware stack levels required when called: 7
  3660 ;; This function calls:
  3661 ;;		Nothing
  3662 ;; This function is called by:
  3663 ;;		_TMR0_Initialize
  3664 ;;		_start_setup
  3665 ;; This function uses a non-reentrant model
  3666 ;;
  3667                           
  3668  068D                     _TMR0_SetInterruptHandler:	
  3669                           ;psect for function _TMR0_SetInterruptHandler
  3670                           
  3671                           
  3672                           ;incstack = 0
  3673                           ; Regs used in _TMR0_SetInterruptHandler: [wreg]
  3674  068D                     l1936:
  3675                           
  3676                           ;mcc_generated_files/tmr0.c: 126:     TMR0_InterruptHandler = InterruptHandler;
  3677  068D  0876               	movf	TMR0_SetInterruptHandler@InterruptHandler+1,w
  3678  068E  0020               	movlb	0	; select bank0
  3679  068F  00D4               	movwf	_TMR0_InterruptHandler+1
  3680  0690  0875               	movf	TMR0_SetInterruptHandler@InterruptHandler,w
  3681  0691  00D3               	movwf	_TMR0_InterruptHandler
  3682  0692                     __ccov90_end_blk0:
  3683  0692                     __ccov91_start_blk1:
  3684  0692                     l195:
  3685  0692  1470               	bsf	__ccovbit1_23/(0+8),__ccovbit1_23& (0+7)	;volatile
  3686  0693  0008               	return
  3687  0694                     __end_of_TMR0_SetInterruptHandler:
  3688  0694                     
  3689                           	psect	text13
  3690  058F                     __ptext13:	
  3691 ;; *************** function _PIN_MANAGER_Initialize *****************
  3692 ;; Defined at:
  3693 ;;		line 55 in file "mcc_generated_files/pin_manager.c"
  3694 ;; Parameters:    Size  Location     Type
  3695 ;;		None
  3696 ;; Auto vars:     Size  Location     Type
  3697 ;;		None
  3698 ;; Return value:  Size  Location     Type
  3699 ;;                  1    wreg      void 
  3700 ;; Registers used:
  3701 ;;		wreg, status,2
  3702 ;; Tracked objects:
  3703 ;;		On entry : 0/0
  3704 ;;		On exit  : 0/0
  3705 ;;		Unchanged: 0/0
  3706 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3707 ;;      Params:         0       0       0       0
  3708 ;;      Locals:         0       0       0       0
  3709 ;;      Temps:          0       0       0       0
  3710 ;;      Totals:         0       0       0       0
  3711 ;;Total ram usage:        0 bytes
  3712 ;; Hardware stack levels used: 1
  3713 ;; Hardware stack levels required when called: 7
  3714 ;; This function calls:
  3715 ;;		Nothing
  3716 ;; This function is called by:
  3717 ;;		_SYSTEM_Initialize
  3718 ;; This function uses a non-reentrant model
  3719 ;;
  3720                           
  3721  058F                     _PIN_MANAGER_Initialize:	
  3722                           ;psect for function _PIN_MANAGER_Initialize
  3723                           
  3724                           
  3725                           ;incstack = 0
  3726                           ; Regs used in _PIN_MANAGER_Initialize: [wreg+status,2]
  3727  058F                     l1992:
  3728                           
  3729                           ;mcc_generated_files/pin_manager.c: 60:     LATA = 0x00;
  3730  058F  0022               	movlb	2	; select bank2
  3731  0590  018C               	clrf	12	;volatile
  3732                           
  3733                           ;mcc_generated_files/pin_manager.c: 61:     LATC = 0x00;
  3734  0591  018E               	clrf	14	;volatile
  3735  0592                     __ccov31_end_blk0:
  3736  0592                     __ccov32_start_blk1:
  3737  0592                     l1994:
  3738                           
  3739                           ;mcc_generated_files/pin_manager.c: 66:     TRISA = 0x0F;
  3740  0592  300F               	movlw	15
  3741  0593  0021               	movlb	1	; select bank1
  3742  0594  008C               	movwf	12	;volatile
  3743  0595                     __ccov32_end_blk1:
  3744  0595                     __ccov33_start_blk2:
  3745  0595                     l1996:
  3746                           
  3747                           ;mcc_generated_files/pin_manager.c: 67:     TRISC = 0x0C;
  3748  0595  300C               	movlw	12
  3749  0596  008E               	movwf	14	;volatile
  3750  0597                     __ccov33_end_blk2:
  3751  0597                     __ccov34_start_blk3:
  3752  0597                     l1998:
  3753                           
  3754                           ;mcc_generated_files/pin_manager.c: 72:     ANSELC = 0x08;
  3755  0597  3008               	movlw	8
  3756  0598  0023               	movlb	3	; select bank3
  3757  0599  008E               	movwf	14	;volatile
  3758  059A                     __ccov34_end_blk3:
  3759  059A                     __ccov35_start_blk4:
  3760  059A                     l2000:
  3761                           
  3762                           ;mcc_generated_files/pin_manager.c: 73:     ANSELA = 0x05;
  3763  059A  3005               	movlw	5
  3764  059B  008C               	movwf	12	;volatile
  3765                           
  3766                           ;mcc_generated_files/pin_manager.c: 78:     WPUA = 0x00;
  3767  059C  0024               	movlb	4	; select bank4
  3768  059D  018C               	clrf	12	;volatile
  3769                           
  3770                           ;mcc_generated_files/pin_manager.c: 79:     WPUC = 0x00;
  3771  059E  018E               	clrf	14	;volatile
  3772  059F                     __ccov35_end_blk4:
  3773  059F                     __ccov36_start_blk5:
  3774  059F                     l2002:
  3775                           
  3776                           ;mcc_generated_files/pin_manager.c: 80:     OPTION_REGbits.nWPUEN = 1;
  3777  059F  0021               	movlb	1	; select bank1
  3778  05A0  1795               	bsf	21,7	;volatile
  3779                           
  3780                           ;mcc_generated_files/pin_manager.c: 86:     APFCON0 = 0x00;
  3781  05A1  0022               	movlb	2	; select bank2
  3782  05A2  019D               	clrf	29	;volatile
  3783                           
  3784                           ;mcc_generated_files/pin_manager.c: 87:     APFCON1 = 0x00;
  3785  05A3  019E               	clrf	30	;volatile
  3786  05A4                     __ccov36_end_blk5:
  3787  05A4                     __ccov37_start_blk6:
  3788  05A4                     l92:
  3789  05A4  14F2               	bsf	__ccovbit6_6/(0+8),__ccovbit6_6& (0+7)	;volatile
  3790  05A5  0008               	return
  3791  05A6                     __end_of_PIN_MANAGER_Initialize:
  3792  05A6                     
  3793                           	psect	text14
  3794  0676                     __ptext14:	
  3795 ;; *************** function _OSCILLATOR_Initialize *****************
  3796 ;; Defined at:
  3797 ;;		line 61 in file "mcc_generated_files/mcc.c"
  3798 ;; Parameters:    Size  Location     Type
  3799 ;;		None
  3800 ;; Auto vars:     Size  Location     Type
  3801 ;;		None
  3802 ;; Return value:  Size  Location     Type
  3803 ;;                  1    wreg      void 
  3804 ;; Registers used:
  3805 ;;		wreg, status,2
  3806 ;; Tracked objects:
  3807 ;;		On entry : 0/0
  3808 ;;		On exit  : 0/0
  3809 ;;		Unchanged: 0/0
  3810 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3811 ;;      Params:         0       0       0       0
  3812 ;;      Locals:         0       0       0       0
  3813 ;;      Temps:          0       0       0       0
  3814 ;;      Totals:         0       0       0       0
  3815 ;;Total ram usage:        0 bytes
  3816 ;; Hardware stack levels used: 1
  3817 ;; Hardware stack levels required when called: 7
  3818 ;; This function calls:
  3819 ;;		Nothing
  3820 ;; This function is called by:
  3821 ;;		_SYSTEM_Initialize
  3822 ;; This function uses a non-reentrant model
  3823 ;;
  3824                           
  3825  0676                     _OSCILLATOR_Initialize:	
  3826                           ;psect for function _OSCILLATOR_Initialize
  3827                           
  3828                           
  3829                           ;incstack = 0
  3830                           ; Regs used in _OSCILLATOR_Initialize: [wreg+status,2]
  3831  0676                     l2004:
  3832                           
  3833                           ;mcc_generated_files/mcc.c: 64:     OSCCON = 0x78;
  3834  0676  3078               	movlw	120
  3835  0677  0021               	movlb	1	; select bank1
  3836  0678  0099               	movwf	25	;volatile
  3837  0679                     __ccov3_end_blk0:
  3838  0679                     __ccov4_start_blk1:
  3839  0679                     l2006:
  3840                           
  3841                           ;mcc_generated_files/mcc.c: 66:     OSCTUNE = 0x00;
  3842  0679  0198               	clrf	24	;volatile
  3843  067A                     __ccov4_end_blk1:
  3844  067A                     __ccov5_start_blk2:
  3845  067A                     l2008:
  3846                           
  3847                           ;mcc_generated_files/mcc.c: 68:     BORCON = 0x00;
  3848  067A  0022               	movlb	2	; select bank2
  3849  067B  0196               	clrf	22	;volatile
  3850  067C                     __ccov5_end_blk2:
  3851  067C                     __ccov6_start_blk3:
  3852  067C                     l26:
  3853  067C  16F2               	bsf	__ccovbit3_2/(0+8),__ccovbit3_2& (0+7)	;volatile
  3854  067D  0008               	return
  3855  067E                     __end_of_OSCILLATOR_Initialize:
  3856  067E                     
  3857                           	psect	text15
  3858  066D                     __ptext15:	
  3859 ;; *************** function _ADC_Initialize *****************
  3860 ;; Defined at:
  3861 ;;		line 67 in file "mcc_generated_files/adc.c"
  3862 ;; Parameters:    Size  Location     Type
  3863 ;;		None
  3864 ;; Auto vars:     Size  Location     Type
  3865 ;;		None
  3866 ;; Return value:  Size  Location     Type
  3867 ;;                  1    wreg      void 
  3868 ;; Registers used:
  3869 ;;		wreg, status,2
  3870 ;; Tracked objects:
  3871 ;;		On entry : 0/0
  3872 ;;		On exit  : 0/0
  3873 ;;		Unchanged: 0/0
  3874 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3875 ;;      Params:         0       0       0       0
  3876 ;;      Locals:         0       0       0       0
  3877 ;;      Temps:          0       0       0       0
  3878 ;;      Totals:         0       0       0       0
  3879 ;;Total ram usage:        0 bytes
  3880 ;; Hardware stack levels used: 1
  3881 ;; Hardware stack levels required when called: 7
  3882 ;; This function calls:
  3883 ;;		Nothing
  3884 ;; This function is called by:
  3885 ;;		_SYSTEM_Initialize
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889  066D                     _ADC_Initialize:	
  3890                           ;psect for function _ADC_Initialize
  3891                           
  3892                           
  3893                           ;incstack = 0
  3894                           ; Regs used in _ADC_Initialize: [wreg+status,2]
  3895  066D                     l2024:
  3896                           
  3897                           ;mcc_generated_files/adc.c: 72:     ADCON1 = 0x50;
  3898  066D  3050               	movlw	80
  3899  066E  0021               	movlb	1	; select bank1
  3900  066F  009E               	movwf	30	;volatile
  3901  0670                     __ccov9_end_blk0:
  3902  0670                     __ccov10_start_blk1:
  3903  0670                     l2026:
  3904                           
  3905                           ;mcc_generated_files/adc.c: 75:     ADRESL = 0x00;
  3906  0670  019B               	clrf	27	;volatile
  3907  0671                     __ccov10_end_blk1:
  3908  0671                     __ccov11_start_blk2:
  3909  0671                     l2028:
  3910                           
  3911                           ;mcc_generated_files/adc.c: 78:     ADRESH = 0x00;
  3912  0671  019C               	clrf	28	;volatile
  3913                           
  3914                           ;mcc_generated_files/adc.c: 81:     ADCON0 = 0x1D;
  3915  0672  301D               	movlw	29
  3916  0673  009D               	movwf	29	;volatile
  3917  0674                     __ccov11_end_blk2:
  3918  0674                     __ccov12_start_blk3:
  3919  0674                     l46:
  3920  0674  15F2               	bsf	__ccovbit3_4/(0+8),__ccovbit3_4& (0+7)	;volatile
  3921  0675  0008               	return
  3922  0676                     __end_of_ADC_Initialize:
  3923  0676                     
  3924                           	psect	text16
  3925  0348                     __ptext16:	
  3926 ;; *************** function _hardware_work *****************
  3927 ;; Defined at:
  3928 ;;		line 568 in file "main.c"
  3929 ;; Parameters:    Size  Location     Type
  3930 ;;		None
  3931 ;; Auto vars:     Size  Location     Type
  3932 ;;		None
  3933 ;; Return value:  Size  Location     Type
  3934 ;;                  1    wreg      void 
  3935 ;; Registers used:
  3936 ;;		None
  3937 ;; Tracked objects:
  3938 ;;		On entry : 0/0
  3939 ;;		On exit  : 0/0
  3940 ;;		Unchanged: 0/0
  3941 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  3942 ;;      Params:         0       0       0       0
  3943 ;;      Locals:         0       0       0       0
  3944 ;;      Temps:          0       0       0       0
  3945 ;;      Totals:         0       0       0       0
  3946 ;;Total ram usage:        0 bytes
  3947 ;; Hardware stack levels used: 1
  3948 ;; Hardware stack levels required when called: 7
  3949 ;; This function calls:
  3950 ;;		Nothing
  3951 ;; This function is called by:
  3952 ;;		_main
  3953 ;; This function uses a non-reentrant model
  3954 ;;
  3955                           
  3956  0348                     _hardware_work:	
  3957                           ;psect for function _hardware_work
  3958                           
  3959                           
  3960                           ;incstack = 0
  3961                           ; Regs used in _hardware_work: []
  3962  0348                     l1664:
  3963                           
  3964                           ;main.c: 569:     LATCbits.LATC0 = ff.bits.ALARM_ON;
  3965  0348  1879               	btfsc	_ff,0
  3966  0349  2B4B               	goto	u1031
  3967  034A  2B4E               	goto	u1030
  3968  034B                     u1031:
  3969  034B  0022               	movlb	2	; select bank2
  3970  034C  140E               	bsf	14,0	;volatile
  3971  034D  2B50               	goto	u1044
  3972  034E                     u1030:
  3973  034E  0022               	movlb	2	; select bank2
  3974  034F  100E               	bcf	14,0	;volatile
  3975  0350                     u1044:
  3976                           
  3977                           ;main.c: 570:     LATCbits.LATC1 = ff.bits.MEAS_ON;
  3978  0350  1BFB               	btfsc	_ff+2,7
  3979  0351  2B53               	goto	u1051
  3980  0352  2B56               	goto	u1050
  3981  0353                     u1051:
  3982  0353  0022               	movlb	2	; select bank2
  3983  0354  148E               	bsf	14,1	;volatile
  3984  0355  2B58               	goto	u1064
  3985  0356                     u1050:
  3986  0356  0022               	movlb	2	; select bank2
  3987  0357  108E               	bcf	14,1	;volatile
  3988  0358                     u1064:
  3989                           
  3990                           ;main.c: 571:     LATCbits.LATC4 = ff.bits.RELE_CONTROL_ON;
  3991  0358  1B7A               	btfsc	_ff+1,6
  3992  0359  2B5B               	goto	u1071
  3993  035A  2B5E               	goto	u1070
  3994  035B                     u1071:
  3995  035B  0022               	movlb	2	; select bank2
  3996  035C  160E               	bsf	14,4	;volatile
  3997  035D  2B60               	goto	u1084
  3998  035E                     u1070:
  3999  035E  0022               	movlb	2	; select bank2
  4000  035F  120E               	bcf	14,4	;volatile
  4001  0360                     u1084:
  4002                           
  4003                           ;main.c: 572:     LATCbits.LATC5 = ff.bits.RELE_POWER_ON;
  4004  0360  1AFA               	btfsc	_ff+1,5
  4005  0361  2B63               	goto	u1091
  4006  0362  2B66               	goto	u1090
  4007  0363                     u1091:
  4008  0363  0022               	movlb	2	; select bank2
  4009  0364  168E               	bsf	14,5	;volatile
  4010  0365  2B68               	goto	u1104
  4011  0366                     u1090:
  4012  0366  0022               	movlb	2	; select bank2
  4013  0367  128E               	bcf	14,5	;volatile
  4014  0368                     u1104:
  4015                           
  4016                           ;main.c: 573:     LATAbits.LATA4 = ff.bits.LED_ON;
  4017  0368  1B7B               	btfsc	_ff+2,6
  4018  0369  2B6B               	goto	u1111
  4019  036A  2B6E               	goto	u1110
  4020  036B                     u1111:
  4021  036B  0022               	movlb	2	; select bank2
  4022  036C  160C               	bsf	12,4	;volatile
  4023  036D  2B70               	goto	u1124
  4024  036E                     u1110:
  4025  036E  0022               	movlb	2	; select bank2
  4026  036F  120C               	bcf	12,4	;volatile
  4027  0370                     u1124:
  4028                           
  4029                           ;main.c: 575:     if (ff.bits.TONE_ON) {
  4030  0370  1FFA               	btfss	_ff+1,7
  4031  0371  2B73               	goto	u1131
  4032  0372  2B74               	goto	u1130
  4033  0373                     u1131:
  4034  0373  2B77               	goto	l469
  4035  0374                     __ccov299_end_blk0:
  4036  0374                     u1130:
  4037  0374                     __ccov300_start_blk1:
  4038  0374                     l1666:
  4039  0374  0020               	movlb	0	; select bank0
  4040  0375  1723               	bsf	__ccovbit1_152/(0+8),__ccovbit1_152& (0+7)	;volatile
  4041                           
  4042                           ;main.c: 576:         INTCONbits.TMR0IE = 1;
  4043  0376  168B               	bsf	11,5	;volatile
  4044  0377                     __ccov300_end_blk1:
  4045  0377                     __ccov301_start_blk2:
  4046  0377                     l469:	
  4047                           ;main.c: 577:     };
  4048                           
  4049                           
  4050                           ;main.c: 578:     if (ff.bits.TONE_OFF) {
  4051  0377  1C7B               	btfss	_ff+2,0
  4052  0378  2B7A               	goto	u1141
  4053  0379  2B7B               	goto	u1140
  4054  037A                     u1141:
  4055  037A  2B80               	goto	l473
  4056  037B                     __ccov301_end_blk2:
  4057  037B                     u1140:
  4058  037B                     __ccov302_start_blk3:
  4059  037B                     l1668:
  4060                           
  4061                           ;main.c: 579:         INTCONbits.TMR0IE = 0;
  4062  037B  128B               	bcf	11,5	;volatile
  4063  037C                     __ccov302_end_blk3:
  4064  037C                     __ccov303_start_blk4:
  4065  037C                     l471:	
  4066                           ;main.c: 580:         do { LATAbits.LATA5 = 0; } while(0);
  4067                           
  4068  037C  0020               	movlb	0	; select bank0
  4069  037D  16A3               	bsf	__ccovbit4_153/(0+8),__ccovbit4_153& (0+7)	;volatile
  4070  037E  0022               	movlb	2	; select bank2
  4071  037F  128C               	bcf	12,5	;volatile
  4072  0380                     __ccov303_end_blk4:
  4073  0380                     __ccov304_start_blk7:
  4074  0380                     l473:
  4075  0380  0020               	movlb	0	; select bank0
  4076  0381  1623               	bsf	__ccovbit7_154/(0+8),__ccovbit7_154& (0+7)	;volatile
  4077  0382  0008               	return
  4078  0383                     __end_of_hardware_work:
  4079  0383                     
  4080                           	psect	text17
  4081  00CC                     __ptext17:	
  4082 ;; *************** function _get_wsp *****************
  4083 ;; Defined at:
  4084 ;;		line 593 in file "main.c"
  4085 ;; Parameters:    Size  Location     Type
  4086 ;;		None
  4087 ;; Auto vars:     Size  Location     Type
  4088 ;;  res             2    0[BANK0 ] unsigned int 
  4089 ;; Return value:  Size  Location     Type
  4090 ;;                  1    wreg      void 
  4091 ;; Registers used:
  4092 ;;		wreg, status,2, status,0, pclath, cstack
  4093 ;; Tracked objects:
  4094 ;;		On entry : 0/0
  4095 ;;		On exit  : 0/0
  4096 ;;		Unchanged: 0/0
  4097 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4098 ;;      Params:         0       0       0       0
  4099 ;;      Locals:         0       2       0       0
  4100 ;;      Temps:          2       0       0       0
  4101 ;;      Totals:         2       2       0       0
  4102 ;;Total ram usage:        4 bytes
  4103 ;; Hardware stack levels used: 1
  4104 ;; Hardware stack levels required when called: 8
  4105 ;; This function calls:
  4106 ;;		_ADC_GetConversion
  4107 ;;		_clear_alarm
  4108 ;;		_start_alarm
  4109 ;; This function is called by:
  4110 ;;		_main
  4111 ;; This function uses a non-reentrant model
  4112 ;;
  4113                           
  4114  00CC                     _get_wsp:	
  4115                           ;psect for function _get_wsp
  4116                           
  4117                           
  4118                           ;incstack = 0
  4119                           ; Regs used in _get_wsp: [wreg+status,2+status,0+pclath+cstack]
  4120  00CC                     l2598:
  4121                           
  4122                           ;main.c: 595:     if (ff.bits.ALLOW_MEASURE) {
  4123  00CC  1E79               	btfss	_ff,4
  4124  00CD  28CF               	goto	u2721
  4125  00CE  28D0               	goto	u2720
  4126  00CF                     u2721:
  4127  00CF  292C               	goto	l497
  4128  00D0                     __ccov308_end_blk0:
  4129  00D0                     u2720:
  4130  00D0                     __ccov309_start_blk1:
  4131  00D0                     l484:	
  4132                           ;main.c: 597:         static signed char bad_measures_counter = 0;;main.c: 598:         
      +                          do { LATCbits.LATC1 = 1; } while(0);
  4133                           
  4134  00D0  0022               	movlb	2	; select bank2
  4135  00D1  148E               	bsf	14,1	;volatile
  4136  00D2                     __ccov309_end_blk1:
  4137  00D2                     __ccov310_start_blk3:
  4138  00D2                     l486:	
  4139                           ;main.c: 599:         do { ANSELCbits.ANSC3 = 1; } while(0);
  4140                           
  4141  00D2  0023               	movlb	3	; select bank3
  4142  00D3  158E               	bsf	14,3	;volatile
  4143  00D4                     __ccov310_end_blk3:
  4144  00D4                     __ccov311_start_blk5:
  4145  00D4                     l2600:
  4146                           
  4147                           ;main.c: 600:         _delay((unsigned long)((1)*(16000000/4000.0)));
  4148  00D4  3006               	movlw	6
  4149  00D5  00F7               	movwf	??_get_wsp
  4150  00D6  3030               	movlw	48
  4151  00D7                     u2847:
  4152  00D7  0B89               	decfsz	9,f
  4153  00D8  28D7               	goto	u2847
  4154  00D9  0BF7               	decfsz	??_get_wsp,f
  4155  00DA  28D7               	goto	u2847
  4156  00DB  3200               	nop2
  4157  00DC                     __ccov311_end_blk5:
  4158  00DC                     __ccov312_start_blk6:
  4159  00DC                     l2602:
  4160                           
  4161                           ;main.c: 601:         unsigned res = ADC_GetConversion(PIN_WSP_STATE);
  4162  00DC  3007               	movlw	7
  4163  00DD  3185  2517  3180   	fcall	_ADC_GetConversion
  4164  00E0  00F7               	movwf	??_get_wsp
  4165  00E1  01F8               	clrf	??_get_wsp+1
  4166  00E2  0877               	movf	??_get_wsp,w
  4167  00E3  0020               	movlb	0	; select bank0
  4168  00E4  00D8               	movwf	get_wsp@res
  4169  00E5  0878               	movf	??_get_wsp+1,w
  4170  00E6  00D9               	movwf	get_wsp@res+1
  4171  00E7                     __ccov312_end_blk6:
  4172  00E7                     __ccov313_start_blk8:
  4173  00E7                     l2604:
  4174  00E7  0023               	movlb	3	; select bank3
  4175  00E8  118E               	bcf	14,3	;volatile
  4176  00E9                     __ccov313_end_blk8:
  4177  00E9                     __ccov314_start_blk11:
  4178  00E9                     l2606:
  4179  00E9  0022               	movlb	2	; select bank2
  4180  00EA  108E               	bcf	14,1	;volatile
  4181  00EB                     __ccov314_end_blk11:
  4182  00EB                     __ccov315_start_blk13:
  4183  00EB                     l2608:
  4184                           
  4185                           ;main.c: 604:         if (res < BAD_WSP_VOLTAGE) {
  4186  00EB  3000               	movlw	0
  4187  00EC  0020               	movlb	0	; select bank0
  4188  00ED  0259               	subwf	get_wsp@res+1,w
  4189  00EE  3080               	movlw	128
  4190  00EF  1903               	skipnz
  4191  00F0  0258               	subwf	get_wsp@res,w
  4192  00F1  1803               	skipnc
  4193  00F2  28F4               	goto	u2731
  4194  00F3  28F5               	goto	u2730
  4195  00F4                     u2731:
  4196  00F4  28FB               	goto	l2612
  4197  00F5                     __ccov315_end_blk13:
  4198  00F5                     u2730:
  4199  00F5                     __ccov316_start_blk14:
  4200  00F5                     l2610:
  4201  00F5  1523               	bsf	__ccovbit14_156/(0+8),__ccovbit14_156& (0+7)	;volatile
  4202                           
  4203                           ;main.c: 605:             bad_measures_counter++;
  4204  00F6  3001               	movlw	1
  4205  00F7  00F7               	movwf	??_get_wsp
  4206  00F8  0877               	movf	??_get_wsp,w
  4207  00F9  07CB               	addwf	get_wsp@bad_measures_counter,f
  4208                           
  4209                           ;main.c: 606:         } else {
  4210  00FA  290A               	goto	l2616
  4211  00FB                     __ccov316_end_blk14:
  4212  00FB                     __ccov317_start_blk16:
  4213  00FB                     l2612:
  4214  00FB  14A3               	bsf	__ccovbit16_157/(0+8),__ccovbit16_157& (0+7)	;volatile
  4215                           
  4216                           ;main.c: 607:             if (res > GOOD_WSP_VOLTAGE) {
  4217  00FC  3000               	movlw	0
  4218  00FD  0259               	subwf	get_wsp@res+1,w
  4219  00FE  308F               	movlw	143
  4220  00FF  1903               	skipnz
  4221  0100  0258               	subwf	get_wsp@res,w
  4222  0101  1C03               	skipc
  4223  0102  2904               	goto	u2741
  4224  0103  2905               	goto	u2740
  4225  0104                     u2741:
  4226  0104  290A               	goto	l2616
  4227  0105                     __ccov317_end_blk16:
  4228  0105                     u2740:
  4229  0105                     __ccov318_start_blk17:
  4230  0105                     l2614:
  4231  0105  1423               	bsf	__ccovbit17_158/(0+8),__ccovbit17_158& (0+7)	;volatile
  4232                           
  4233                           ;main.c: 608:                 bad_measures_counter--;
  4234  0106  30FF               	movlw	255
  4235  0107  00F7               	movwf	??_get_wsp
  4236  0108  0877               	movf	??_get_wsp,w
  4237  0109  07CB               	addwf	get_wsp@bad_measures_counter,f
  4238  010A                     __ccov318_end_blk17:
  4239  010A                     __ccov319_start_blk20:
  4240  010A                     l2616:
  4241                           
  4242                           ;main.c: 611:         if (bad_measures_counter > WSP_MEAS_COUNT) {
  4243  010A  084B               	movf	get_wsp@bad_measures_counter,w
  4244  010B  3A80               	xorlw	128
  4245  010C  3E7B               	addlw	-133
  4246  010D  1C03               	skipc
  4247  010E  2910               	goto	u2751
  4248  010F  2911               	goto	u2750
  4249  0110                     u2751:
  4250  0110  291A               	goto	l2622
  4251  0111                     __ccov319_end_blk20:
  4252  0111                     u2750:
  4253  0111                     __ccov320_start_blk21:
  4254  0111                     l2618:
  4255                           
  4256                           ;main.c: 612:             start_alarm();
  4257  0111  3186  267E  3180   	fcall	_start_alarm
  4258  0114                     __ccov320_end_blk21:
  4259  0114                     __ccov321_start_blk22:
  4260  0114                     l2620:
  4261  0114  0020               	movlb	0	; select bank0
  4262  0115  17A2               	bsf	__ccovbit22_159/(0+8),__ccovbit22_159& (0+7)	;volatile
  4263                           
  4264                           ;main.c: 613:             bad_measures_counter = WSP_MEAS_COUNT;
  4265  0116  3004               	movlw	4
  4266  0117  00F7               	movwf	??_get_wsp
  4267  0118  0877               	movf	??_get_wsp,w
  4268  0119  00CB               	movwf	get_wsp@bad_measures_counter
  4269  011A                     __ccov321_end_blk22:
  4270  011A                     __ccov322_start_blk24:
  4271  011A                     l2622:
  4272                           
  4273                           ;main.c: 615:         if (bad_measures_counter < -WSP_MEAS_COUNT) {
  4274  011A  084B               	movf	get_wsp@bad_measures_counter,w
  4275  011B  3A80               	xorlw	128
  4276  011C  3E84               	addlw	132
  4277  011D  1803               	skipnc
  4278  011E  2920               	goto	u2761
  4279  011F  2921               	goto	u2760
  4280  0120                     u2761:
  4281  0120  292A               	goto	l2628
  4282  0121                     __ccov322_end_blk24:
  4283  0121                     u2760:
  4284  0121                     __ccov323_start_blk25:
  4285  0121                     l2624:
  4286                           
  4287                           ;main.c: 616:             clear_alarm();
  4288  0121  3186  26AB  3180   	fcall	_clear_alarm
  4289  0124                     __ccov323_end_blk25:
  4290  0124                     __ccov324_start_blk26:
  4291  0124                     l2626:
  4292  0124  0020               	movlb	0	; select bank0
  4293  0125  1722               	bsf	__ccovbit26_160/(0+8),__ccovbit26_160& (0+7)	;volatile
  4294                           
  4295                           ;main.c: 617:             bad_measures_counter = -WSP_MEAS_COUNT;
  4296  0126  30FC               	movlw	252
  4297  0127  00F7               	movwf	??_get_wsp
  4298  0128  0877               	movf	??_get_wsp,w
  4299  0129  00CB               	movwf	get_wsp@bad_measures_counter
  4300  012A                     __ccov324_end_blk26:
  4301  012A                     __ccov325_start_blk28:
  4302  012A                     l2628:
  4303  012A  16A2               	bsf	__ccovbit28_161/(0+8),__ccovbit28_161& (0+7)	;volatile
  4304                           
  4305                           ;main.c: 619:         ff.bits.ALLOW_MEASURE = 0;
  4306  012B  1279               	bcf	_ff,4
  4307  012C                     __ccov325_end_blk28:
  4308  012C                     __ccov326_start_blk30:
  4309  012C                     l497:
  4310  012C  0020               	movlb	0	; select bank0
  4311  012D  1622               	bsf	__ccovbit30_162/(0+8),__ccovbit30_162& (0+7)	;volatile
  4312  012E  0008               	return
  4313  012F                     __end_of_get_wsp:
  4314  012F                     
  4315                           	psect	text18
  4316  067E                     __ptext18:	
  4317 ;; *************** function _start_alarm *****************
  4318 ;; Defined at:
  4319 ;;		line 318 in file "main.c"
  4320 ;; Parameters:    Size  Location     Type
  4321 ;;		None
  4322 ;; Auto vars:     Size  Location     Type
  4323 ;;		None
  4324 ;; Return value:  Size  Location     Type
  4325 ;;                  1    wreg      void 
  4326 ;; Registers used:
  4327 ;;		status,2
  4328 ;; Tracked objects:
  4329 ;;		On entry : 0/0
  4330 ;;		On exit  : 0/0
  4331 ;;		Unchanged: 0/0
  4332 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4333 ;;      Params:         0       0       0       0
  4334 ;;      Locals:         0       0       0       0
  4335 ;;      Temps:          0       0       0       0
  4336 ;;      Totals:         0       0       0       0
  4337 ;;Total ram usage:        0 bytes
  4338 ;; Hardware stack levels used: 1
  4339 ;; Hardware stack levels required when called: 7
  4340 ;; This function calls:
  4341 ;;		Nothing
  4342 ;; This function is called by:
  4343 ;;		_get_wsp
  4344 ;; This function uses a non-reentrant model
  4345 ;;
  4346                           
  4347  067E                     _start_alarm:	
  4348                           ;psect for function _start_alarm
  4349                           
  4350                           
  4351                           ;incstack = 0
  4352                           ; Regs used in _start_alarm: [status,2]
  4353  067E                     l2586:
  4354                           
  4355                           ;main.c: 319:     ff.bits.ALARM_ON = 1;
  4356  067E  1479               	bsf	_ff,0
  4357                           
  4358                           ;main.c: 320:     ff.bits.ALARM_OFF = 0;
  4359  067F  10F9               	bcf	_ff,1
  4360                           
  4361                           ;main.c: 321:     ff.bits.MELODY_ON = 1;
  4362  0680  14FC               	bsf	_ff+3,1
  4363                           
  4364                           ;main.c: 322:     ff.bits.SIREN = 1;
  4365  0681  14FB               	bsf	_ff+2,1
  4366  0682                     __ccov180_end_blk0:
  4367  0682                     __ccov181_start_blk1:
  4368  0682                     l2588:
  4369                           
  4370                           ;main.c: 323:     sec_count=0;
  4371  0682  0020               	movlb	0	; select bank0
  4372  0683  01D2               	clrf	_sec_count
  4373  0684                     __ccov181_end_blk1:
  4374  0684                     __ccov182_start_blk2:
  4375  0684                     l381:
  4376  0684  172C               	bsf	__ccovbit2_80/(0+8),__ccovbit2_80& (0+7)	;volatile
  4377  0685  0008               	return
  4378  0686                     __end_of_start_alarm:
  4379  0686                     
  4380                           	psect	text19
  4381  06AB                     __ptext19:	
  4382 ;; *************** function _clear_alarm *****************
  4383 ;; Defined at:
  4384 ;;		line 326 in file "main.c"
  4385 ;; Parameters:    Size  Location     Type
  4386 ;;		None
  4387 ;; Auto vars:     Size  Location     Type
  4388 ;;		None
  4389 ;; Return value:  Size  Location     Type
  4390 ;;                  1    wreg      void 
  4391 ;; Registers used:
  4392 ;;		None
  4393 ;; Tracked objects:
  4394 ;;		On entry : 0/0
  4395 ;;		On exit  : 0/0
  4396 ;;		Unchanged: 0/0
  4397 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4398 ;;      Params:         0       0       0       0
  4399 ;;      Locals:         0       0       0       0
  4400 ;;      Temps:          0       0       0       0
  4401 ;;      Totals:         0       0       0       0
  4402 ;;Total ram usage:        0 bytes
  4403 ;; Hardware stack levels used: 1
  4404 ;; Hardware stack levels required when called: 7
  4405 ;; This function calls:
  4406 ;;		Nothing
  4407 ;; This function is called by:
  4408 ;;		_get_wsp
  4409 ;; This function uses a non-reentrant model
  4410 ;;
  4411                           
  4412  06AB                     _clear_alarm:	
  4413                           ;psect for function _clear_alarm
  4414                           
  4415                           
  4416                           ;incstack = 0
  4417                           ; Regs used in _clear_alarm: []
  4418  06AB                     l2590:
  4419                           
  4420                           ;main.c: 327:     ff.bits.ALARM_ON = 0;
  4421  06AB  1079               	bcf	_ff,0
  4422                           
  4423                           ;main.c: 328:     ff.bits.ALARM_OFF = 1;
  4424  06AC  14F9               	bsf	_ff,1
  4425  06AD                     __ccov183_end_blk0:
  4426  06AD                     __ccov184_start_blk1:
  4427  06AD                     l384:
  4428  06AD  0020               	movlb	0	; select bank0
  4429  06AE  16AC               	bsf	__ccovbit1_81/(0+8),__ccovbit1_81& (0+7)	;volatile
  4430  06AF  0008               	return
  4431  06B0                     __end_of_clear_alarm:
  4432  06B0                     
  4433                           	psect	text20
  4434  0517                     __ptext20:	
  4435 ;; *************** function _ADC_GetConversion *****************
  4436 ;; Defined at:
  4437 ;;		line 112 in file "mcc_generated_files/adc.c"
  4438 ;; Parameters:    Size  Location     Type
  4439 ;;  channel         1    wreg     enum E2427
  4440 ;; Auto vars:     Size  Location     Type
  4441 ;;  channel         1    3[COMMON] enum E2427
  4442 ;; Return value:  Size  Location     Type
  4443 ;;                  1    wreg      unsigned char 
  4444 ;; Registers used:
  4445 ;;		wreg, status,2, status,0
  4446 ;; Tracked objects:
  4447 ;;		On entry : 0/0
  4448 ;;		On exit  : 0/0
  4449 ;;		Unchanged: 0/0
  4450 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4451 ;;      Params:         0       0       0       0
  4452 ;;      Locals:         1       0       0       0
  4453 ;;      Temps:          1       0       0       0
  4454 ;;      Totals:         2       0       0       0
  4455 ;;Total ram usage:        2 bytes
  4456 ;; Hardware stack levels used: 1
  4457 ;; Hardware stack levels required when called: 7
  4458 ;; This function calls:
  4459 ;;		Nothing
  4460 ;; This function is called by:
  4461 ;;		_get_wsp
  4462 ;; This function uses a non-reentrant model
  4463 ;;
  4464                           
  4465  0517                     _ADC_GetConversion:	
  4466                           ;psect for function _ADC_GetConversion
  4467                           
  4468                           
  4469                           ;incstack = 0
  4470                           ; Regs used in _ADC_GetConversion: [wreg+status,2+status,0]
  4471                           ;ADC_GetConversion@channel stored from wreg
  4472  0517  00F6               	movwf	ADC_GetConversion@channel
  4473  0518                     l2574:
  4474                           
  4475                           ;mcc_generated_files/adc.c: 112: char ADC_GetConversion(adc_channel_t channel);mcc_gener
      +                          ated_files/adc.c: 113: {;mcc_generated_files/adc.c: 115:     ADCON0bits.CHS = channel;
  4476  0518  0876               	movf	ADC_GetConversion@channel,w
  4477  0519  00F5               	movwf	??_ADC_GetConversion
  4478  051A  0DF5               	rlf	??_ADC_GetConversion,f
  4479  051B  0DF5               	rlf	??_ADC_GetConversion,f
  4480  051C  0021               	movlb	1	; select bank1
  4481  051D  081D               	movf	29,w	;volatile
  4482  051E  0675               	xorwf	??_ADC_GetConversion,w
  4483  051F  3983               	andlw	-125
  4484  0520  0675               	xorwf	??_ADC_GetConversion,w
  4485  0521  009D               	movwf	29	;volatile
  4486  0522                     __ccov22_end_blk0:
  4487  0522                     __ccov23_start_blk1:
  4488  0522                     l2576:
  4489                           
  4490                           ;mcc_generated_files/adc.c: 118:     ADCON0bits.ADON = 1;
  4491  0522  141D               	bsf	29,0	;volatile
  4492  0523                     __ccov23_end_blk1:
  4493  0523                     __ccov24_start_blk2:
  4494  0523                     l2578:
  4495                           
  4496                           ;mcc_generated_files/adc.c: 121:     _delay((unsigned long)((5)*(16000000/4000000.0)));
  4497  0523  3006               	movlw	6
  4498  0524                     u2857:
  4499  0524  0B89               	decfsz	9,f
  4500  0525  2D24               	goto	u2857
  4501  0526  3200               	nop2
  4502  0527                     __ccov24_end_blk2:
  4503  0527                     __ccov25_start_blk3:
  4504  0527                     l2580:
  4505                           
  4506                           ;mcc_generated_files/adc.c: 124:     ADCON0bits.GO_nDONE = 1;
  4507  0527  0021               	movlb	1	; select bank1
  4508  0528  149D               	bsf	29,1	;volatile
  4509  0529                     __ccov25_end_blk3:
  4510  0529                     __ccov26_start_blk5:
  4511  0529                     l61:	
  4512                           ;mcc_generated_files/adc.c: 128:     {;mcc_generated_files/adc.c: 129:     }
  4513                           
  4514                           
  4515                           ;mcc_generated_files/adc.c: 127:     while (ADCON0bits.GO_nDONE)
  4516  0529  189D               	btfsc	29,1	;volatile
  4517  052A  2D2C               	goto	u2701
  4518  052B  2D2D               	goto	u2700
  4519  052C                     u2701:
  4520  052C  2D29               	goto	l61
  4521  052D                     __ccov26_end_blk5:
  4522  052D                     u2700:
  4523  052D                     __ccov27_start_blk7:
  4524  052D                     l2582:
  4525                           
  4526                           ;mcc_generated_files/adc.c: 132:     return (ADRESH);
  4527  052D  081C               	movf	28,w	;volatile
  4528  052E                     __ccov27_end_blk7:
  4529  052E                     __ccov28_start_blk9:
  4530  052E                     l64:
  4531  052E  1572               	bsf	__ccovbit9_5/(0+8),__ccovbit9_5& (0+7)	;volatile
  4532  052F  0008               	return
  4533  0530                     __end_of_ADC_GetConversion:
  4534  0530                     
  4535                           	psect	text21
  4536  0383                     __ptext21:	
  4537 ;; *************** function _get_jump *****************
  4538 ;; Defined at:
  4539 ;;		line 688 in file "main.c"
  4540 ;; Parameters:    Size  Location     Type
  4541 ;;		None
  4542 ;; Auto vars:     Size  Location     Type
  4543 ;;		None
  4544 ;; Return value:  Size  Location     Type
  4545 ;;                  1    wreg      void 
  4546 ;; Registers used:
  4547 ;;		wreg, status,2, status,0
  4548 ;; Tracked objects:
  4549 ;;		On entry : 0/0
  4550 ;;		On exit  : 0/0
  4551 ;;		Unchanged: 0/0
  4552 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4553 ;;      Params:         0       0       0       0
  4554 ;;      Locals:         0       0       0       0
  4555 ;;      Temps:          1       0       0       0
  4556 ;;      Totals:         1       0       0       0
  4557 ;;Total ram usage:        1 bytes
  4558 ;; Hardware stack levels used: 1
  4559 ;; Hardware stack levels required when called: 7
  4560 ;; This function calls:
  4561 ;;		Nothing
  4562 ;; This function is called by:
  4563 ;;		_main
  4564 ;; This function uses a non-reentrant model
  4565 ;;
  4566                           
  4567  0383                     _get_jump:	
  4568                           ;psect for function _get_jump
  4569                           
  4570                           
  4571                           ;incstack = 0
  4572                           ; Regs used in _get_jump: [wreg+status,2+status,0]
  4573  0383                     l2412:
  4574                           
  4575                           ;main.c: 690:     static signed char jump_counter;;main.c: 692:     if (ff.bits.ALLOW_JU
      +                          MP) {
  4576  0383  1F79               	btfss	_ff,6
  4577  0384  2B86               	goto	u2481
  4578  0385  2B87               	goto	u2480
  4579  0386                     u2481:
  4580  0386  2BBB               	goto	l531
  4581  0387                     __ccov346_end_blk0:
  4582  0387                     u2480:
  4583  0387                     __ccov347_start_blk1:
  4584  0387                     l522:	
  4585                           ;main.c: 694:         do { ANSELAbits.ANSA1 = 0; } while(0);
  4586                           
  4587  0387  0023               	movlb	3	; select bank3
  4588  0388  108C               	bcf	12,1	;volatile
  4589  0389                     __ccov347_end_blk1:
  4590  0389                     __ccov348_start_blk3:
  4591  0389                     l524:	
  4592                           ;main.c: 695:         do { TRISAbits.TRISA1 = 1; } while(0);
  4593                           
  4594  0389  0021               	movlb	1	; select bank1
  4595  038A  148C               	bsf	12,1	;volatile
  4596  038B                     __ccov348_end_blk3:
  4597  038B                     __ccov349_start_blk4:
  4598  038B                     l525:
  4599                           
  4600                           ;main.c: 696:         if (PORTAbits.RA1) jump_counter++;
  4601  038B  0020               	movlb	0	; select bank0
  4602  038C  1C8C               	btfss	12,1	;volatile
  4603  038D  2B8F               	goto	u2491
  4604  038E  2B90               	goto	u2490
  4605  038F                     u2491:
  4606  038F  2B96               	goto	l2416
  4607  0390                     __ccov349_end_blk4:
  4608  0390                     u2490:
  4609  0390                     __ccov350_start_blk5:
  4610  0390                     l2414:
  4611  0390  1621               	bsf	__ccovbit5_170/(0+8),__ccovbit5_170& (0+7)	;volatile
  4612  0391  3001               	movlw	1
  4613  0392  00F5               	movwf	??_get_jump
  4614  0393  0875               	movf	??_get_jump,w
  4615  0394  07C9               	addwf	get_jump@jump_counter,f
  4616  0395  2B9B               	goto	l2418
  4617  0396                     __ccov350_end_blk5:
  4618  0396                     __ccov351_start_blk7:
  4619  0396                     l2416:
  4620  0396  15A1               	bsf	__ccovbit7_171/(0+8),__ccovbit7_171& (0+7)	;volatile
  4621  0397  30FF               	movlw	255
  4622  0398  00F5               	movwf	??_get_jump
  4623  0399  0875               	movf	??_get_jump,w
  4624  039A  07C9               	addwf	get_jump@jump_counter,f
  4625  039B                     __ccov351_end_blk7:
  4626  039B                     __ccov352_start_blk9:
  4627  039B                     l2418:
  4628                           
  4629                           ;main.c: 705:         if (jump_counter > JUMP_MEAS_COUNT) {
  4630  039B  0849               	movf	get_jump@jump_counter,w
  4631  039C  3A80               	xorlw	128
  4632  039D  3E75               	addlw	-139
  4633  039E  1C03               	skipc
  4634  039F  2BA1               	goto	u2501
  4635  03A0  2BA2               	goto	u2500
  4636  03A1                     u2501:
  4637  03A1  2BAA               	goto	l2426
  4638  03A2                     __ccov352_end_blk9:
  4639  03A2                     u2500:
  4640  03A2                     __ccov353_start_blk10:
  4641  03A2                     l2420:
  4642                           
  4643                           ;main.c: 706:             jump_counter = JUMP_MEAS_COUNT;
  4644  03A2  300A               	movlw	10
  4645  03A3  00F5               	movwf	??_get_jump
  4646  03A4  0875               	movf	??_get_jump,w
  4647  03A5  00C9               	movwf	get_jump@jump_counter
  4648  03A6                     __ccov353_end_blk10:
  4649  03A6                     __ccov354_start_blk11:
  4650  03A6                     l2422:
  4651                           
  4652                           ;main.c: 707:             ff.bits.JUMP_LOW = 0;
  4653  03A6  13F9               	bcf	_ff,7
  4654  03A7                     __ccov354_end_blk11:
  4655  03A7                     __ccov355_start_blk12:
  4656  03A7                     l2424:
  4657  03A7  1521               	bsf	__ccovbit12_172/(0+8),__ccovbit12_172& (0+7)	;volatile
  4658                           
  4659                           ;main.c: 708:             ff.bits.JUMP_HIGH = 1;
  4660  03A8  147A               	bsf	_ff+1,0
  4661                           
  4662                           ;main.c: 709:         } else if (jump_counter<-JUMP_MEAS_COUNT) {
  4663  03A9  2BB9               	goto	l2434
  4664  03AA                     __ccov355_end_blk12:
  4665  03AA                     __ccov356_start_blk14:
  4666  03AA                     l2426:
  4667  03AA  14A1               	bsf	__ccovbit14_173/(0+8),__ccovbit14_173& (0+7)	;volatile
  4668  03AB  0849               	movf	get_jump@jump_counter,w
  4669  03AC  3A80               	xorlw	128
  4670  03AD  3E8A               	addlw	138
  4671  03AE  1803               	skipnc
  4672  03AF  2BB1               	goto	u2511
  4673  03B0  2BB2               	goto	u2510
  4674  03B1                     u2511:
  4675  03B1  2BB9               	goto	l2434
  4676  03B2                     __ccov356_end_blk14:
  4677  03B2                     u2510:
  4678  03B2                     __ccov357_start_blk15:
  4679  03B2                     l2428:
  4680                           
  4681                           ;main.c: 710:             jump_counter = -JUMP_MEAS_COUNT;
  4682  03B2  30F6               	movlw	246
  4683  03B3  00F5               	movwf	??_get_jump
  4684  03B4  0875               	movf	??_get_jump,w
  4685  03B5  00C9               	movwf	get_jump@jump_counter
  4686  03B6                     __ccov357_end_blk15:
  4687  03B6                     __ccov358_start_blk16:
  4688  03B6                     l2430:
  4689                           
  4690                           ;main.c: 711:             ff.bits.JUMP_LOW = 1;
  4691  03B6  17F9               	bsf	_ff,7
  4692  03B7                     __ccov358_end_blk16:
  4693  03B7                     __ccov359_start_blk17:
  4694  03B7                     l2432:
  4695  03B7  1421               	bsf	__ccovbit17_174/(0+8),__ccovbit17_174& (0+7)	;volatile
  4696                           
  4697                           ;main.c: 712:             ff.bits.JUMP_HIGH = 0;
  4698  03B8  107A               	bcf	_ff+1,0
  4699  03B9                     __ccov359_end_blk17:
  4700  03B9                     __ccov360_start_blk20:
  4701  03B9                     l2434:
  4702  03B9  17A0               	bsf	__ccovbit20_175/(0+8),__ccovbit20_175& (0+7)	;volatile
  4703                           
  4704                           ;main.c: 714:         ff.bits.ALLOW_JUMP = 0;
  4705  03BA  1379               	bcf	_ff,6
  4706  03BB                     __ccov360_end_blk20:
  4707  03BB                     __ccov361_start_blk22:
  4708  03BB                     l531:
  4709  03BB  0020               	movlb	0	; select bank0
  4710  03BC  1720               	bsf	__ccovbit22_176/(0+8),__ccovbit22_176& (0+7)	;volatile
  4711  03BD  0008               	return
  4712  03BE                     __end_of_get_jump:
  4713  03BE                     
  4714                           	psect	text22
  4715  023B                     __ptext22:	
  4716 ;; *************** function _get_fun *****************
  4717 ;; Defined at:
  4718 ;;		line 623 in file "main.c"
  4719 ;; Parameters:    Size  Location     Type
  4720 ;;		None
  4721 ;; Auto vars:     Size  Location     Type
  4722 ;;		None
  4723 ;; Return value:  Size  Location     Type
  4724 ;;                  1    wreg      void 
  4725 ;; Registers used:
  4726 ;;		wreg, status,2, status,0
  4727 ;; Tracked objects:
  4728 ;;		On entry : 0/0
  4729 ;;		On exit  : 0/0
  4730 ;;		Unchanged: 0/0
  4731 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4732 ;;      Params:         0       0       0       0
  4733 ;;      Locals:         0       0       0       0
  4734 ;;      Temps:          1       0       0       0
  4735 ;;      Totals:         1       0       0       0
  4736 ;;Total ram usage:        1 bytes
  4737 ;; Hardware stack levels used: 1
  4738 ;; Hardware stack levels required when called: 7
  4739 ;; This function calls:
  4740 ;;		Nothing
  4741 ;; This function is called by:
  4742 ;;		_main
  4743 ;; This function uses a non-reentrant model
  4744 ;;
  4745                           
  4746  023B                     _get_fun:	
  4747                           ;psect for function _get_fun
  4748                           
  4749                           
  4750                           ;incstack = 0
  4751                           ; Regs used in _get_fun: [wreg+status,2+status,0]
  4752  023B                     l2378:
  4753                           
  4754                           ;main.c: 625:     if (ff.bits.ALLOW_FUN) {
  4755  023B  1EF9               	btfss	_ff,5
  4756  023C  2A3E               	goto	u2441
  4757  023D  2A3F               	goto	u2440
  4758  023E                     u2441:
  4759  023E  2A80               	goto	l516
  4760  023F                     __ccov327_end_blk0:
  4761  023F                     u2440:
  4762  023F                     __ccov328_start_blk1:
  4763  023F                     l503:	
  4764                           ;main.c: 627:         static signed char fun_counter;;main.c: 628:         do { LATCbits
      +                          .LATC1 = 1; } while(0);
  4765                           
  4766  023F  0022               	movlb	2	; select bank2
  4767  0240  148E               	bsf	14,1	;volatile
  4768  0241                     __ccov328_end_blk1:
  4769  0241                     __ccov329_start_blk3:
  4770  0241                     l2380:
  4771                           
  4772                           ;main.c: 629:         _delay((unsigned long)((1)*(16000000/4000.0)));
  4773  0241  3006               	movlw	6
  4774  0242  00F5               	movwf	??_get_fun
  4775  0243  3030               	movlw	48
  4776  0244                     u2867:
  4777  0244  0B89               	decfsz	9,f
  4778  0245  2A44               	goto	u2867
  4779  0246  0BF5               	decfsz	??_get_fun,f
  4780  0247  2A44               	goto	u2867
  4781  0248  3200               	nop2
  4782  0249                     __ccov329_end_blk3:
  4783  0249                     __ccov330_start_blk5:
  4784  0249                     l2382:
  4785  0249  0023               	movlb	3	; select bank3
  4786  024A  110E               	bcf	14,2	;volatile
  4787  024B                     __ccov330_end_blk5:
  4788  024B                     __ccov331_start_blk8:
  4789  024B                     l2384:
  4790  024B  0021               	movlb	1	; select bank1
  4791  024C  150E               	bsf	14,2	;volatile
  4792  024D                     __ccov331_end_blk8:
  4793  024D                     __ccov332_start_blk10:
  4794  024D                     l2386:
  4795                           
  4796                           ;main.c: 632:         if (PORTCbits.RC2) fun_counter--;
  4797  024D  0020               	movlb	0	; select bank0
  4798  024E  1D0E               	btfss	14,2	;volatile
  4799  024F  2A51               	goto	u2451
  4800  0250  2A52               	goto	u2450
  4801  0251                     u2451:
  4802  0251  2A58               	goto	l2390
  4803  0252                     __ccov332_end_blk10:
  4804  0252                     u2450:
  4805  0252                     __ccov333_start_blk11:
  4806  0252                     l2388:
  4807  0252  15A2               	bsf	__ccovbit11_163/(0+8),__ccovbit11_163& (0+7)	;volatile
  4808  0253  30FF               	movlw	255
  4809  0254  00F5               	movwf	??_get_fun
  4810  0255  0875               	movf	??_get_fun,w
  4811  0256  07CA               	addwf	get_fun@fun_counter,f
  4812  0257  2A5D               	goto	l2392
  4813  0258                     __ccov333_end_blk11:
  4814  0258                     __ccov334_start_blk13:
  4815  0258                     l2390:
  4816  0258  1522               	bsf	__ccovbit13_164/(0+8),__ccovbit13_164& (0+7)	;volatile
  4817  0259  3001               	movlw	1
  4818  025A  00F5               	movwf	??_get_fun
  4819  025B  0875               	movf	??_get_fun,w
  4820  025C  07CA               	addwf	get_fun@fun_counter,f
  4821  025D                     __ccov334_end_blk13:
  4822  025D                     __ccov335_start_blk16:
  4823  025D                     l2392:
  4824  025D  0022               	movlb	2	; select bank2
  4825  025E  108E               	bcf	14,1	;volatile
  4826  025F                     __ccov335_end_blk16:
  4827  025F                     __ccov336_start_blk18:
  4828  025F                     l2394:
  4829                           
  4830                           ;main.c: 640:         if (fun_counter > FUN_MEAS_COUNT) {
  4831  025F  0020               	movlb	0	; select bank0
  4832  0260  084A               	movf	get_fun@fun_counter,w
  4833  0261  3A80               	xorlw	128
  4834  0262  3E75               	addlw	-139
  4835  0263  1C03               	skipc
  4836  0264  2A66               	goto	u2461
  4837  0265  2A67               	goto	u2460
  4838  0266                     u2461:
  4839  0266  2A6F               	goto	l2402
  4840  0267                     __ccov336_end_blk18:
  4841  0267                     u2460:
  4842  0267                     __ccov337_start_blk19:
  4843  0267                     l2396:
  4844                           
  4845                           ;main.c: 641:             fun_counter = FUN_MEAS_COUNT;
  4846  0267  300A               	movlw	10
  4847  0268  00F5               	movwf	??_get_fun
  4848  0269  0875               	movf	??_get_fun,w
  4849  026A  00CA               	movwf	get_fun@fun_counter
  4850  026B                     __ccov337_end_blk19:
  4851  026B                     __ccov338_start_blk20:
  4852  026B                     l2398:
  4853                           
  4854                           ;main.c: 642:             ff.bits.FUN_LOW = 0;
  4855  026B  11F9               	bcf	_ff,3
  4856  026C                     __ccov338_end_blk20:
  4857  026C                     __ccov339_start_blk21:
  4858  026C                     l2400:
  4859  026C  14A2               	bsf	__ccovbit21_165/(0+8),__ccovbit21_165& (0+7)	;volatile
  4860                           
  4861                           ;main.c: 643:             ff.bits.FUN_HIGH = 1;
  4862  026D  1579               	bsf	_ff,2
  4863                           
  4864                           ;main.c: 644:         } else if (fun_counter<-FUN_MEAS_COUNT) {
  4865  026E  2A7E               	goto	l2410
  4866  026F                     __ccov339_end_blk21:
  4867  026F                     __ccov340_start_blk23:
  4868  026F                     l2402:
  4869  026F  1422               	bsf	__ccovbit23_166/(0+8),__ccovbit23_166& (0+7)	;volatile
  4870  0270  084A               	movf	get_fun@fun_counter,w
  4871  0271  3A80               	xorlw	128
  4872  0272  3E8A               	addlw	138
  4873  0273  1803               	skipnc
  4874  0274  2A76               	goto	u2471
  4875  0275  2A77               	goto	u2470
  4876  0276                     u2471:
  4877  0276  2A7E               	goto	l2410
  4878  0277                     __ccov340_end_blk23:
  4879  0277                     u2470:
  4880  0277                     __ccov341_start_blk24:
  4881  0277                     l2404:
  4882                           
  4883                           ;main.c: 645:             fun_counter = -FUN_MEAS_COUNT;
  4884  0277  30F6               	movlw	246
  4885  0278  00F5               	movwf	??_get_fun
  4886  0279  0875               	movf	??_get_fun,w
  4887  027A  00CA               	movwf	get_fun@fun_counter
  4888  027B                     __ccov341_end_blk24:
  4889  027B                     __ccov342_start_blk25:
  4890  027B                     l2406:
  4891                           
  4892                           ;main.c: 646:             ff.bits.FUN_LOW = 1;
  4893  027B  15F9               	bsf	_ff,3
  4894  027C                     __ccov342_end_blk25:
  4895  027C                     __ccov343_start_blk26:
  4896  027C                     l2408:
  4897  027C  17A1               	bsf	__ccovbit26_167/(0+8),__ccovbit26_167& (0+7)	;volatile
  4898                           
  4899                           ;main.c: 647:             ff.bits.FUN_HIGH = 0;
  4900  027D  1179               	bcf	_ff,2
  4901  027E                     __ccov343_end_blk26:
  4902  027E                     __ccov344_start_blk29:
  4903  027E                     l2410:
  4904  027E  1721               	bsf	__ccovbit29_168/(0+8),__ccovbit29_168& (0+7)	;volatile
  4905                           
  4906                           ;main.c: 649:         ff.bits.ALLOW_FUN = 0;
  4907  027F  12F9               	bcf	_ff,5
  4908  0280                     __ccov344_end_blk29:
  4909  0280                     __ccov345_start_blk31:
  4910  0280                     l516:
  4911  0280  0020               	movlb	0	; select bank0
  4912  0281  16A1               	bsf	__ccovbit31_169/(0+8),__ccovbit31_169& (0+7)	;volatile
  4913  0282  0008               	return
  4914  0283                     __end_of_get_fun:
  4915  0283                     
  4916                           	psect	text23
  4917  01E9                     __ptext23:	
  4918 ;; *************** function _fun_work *****************
  4919 ;; Defined at:
  4920 ;;		line 331 in file "main.c"
  4921 ;; Parameters:    Size  Location     Type
  4922 ;;		None
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;		None
  4925 ;; Return value:  Size  Location     Type
  4926 ;;                  1    wreg      void 
  4927 ;; Registers used:
  4928 ;;		wreg, status,2, status,0, pclath, cstack
  4929 ;; Tracked objects:
  4930 ;;		On entry : 0/0
  4931 ;;		On exit  : 0/0
  4932 ;;		Unchanged: 0/0
  4933 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  4934 ;;      Params:         0       0       0       0
  4935 ;;      Locals:         0       0       0       0
  4936 ;;      Temps:          1       0       0       0
  4937 ;;      Totals:         1       0       0       0
  4938 ;;Total ram usage:        1 bytes
  4939 ;; Hardware stack levels used: 1
  4940 ;; Hardware stack levels required when called: 9
  4941 ;; This function calls:
  4942 ;;		_close
  4943 ;;		_open
  4944 ;; This function is called by:
  4945 ;;		_main
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949  01E9                     _fun_work:	
  4950                           ;psect for function _fun_work
  4951                           
  4952                           
  4953                           ;incstack = 0
  4954                           ; Regs used in _fun_work: [wreg+status,2+status,0+pclath+cstack]
  4955  01E9                     l2264:
  4956                           
  4957                           ;main.c: 332:     {;main.c: 333:         if (
  4958  01E9  1DF9               	btfss	_ff,3
  4959  01EA  29EC               	goto	u2121
  4960  01EB  29ED               	goto	u2120
  4961  01EC                     u2121:
  4962  01EC  2A12               	goto	l2282
  4963  01ED                     __ccov185_end_blk0:
  4964  01ED                     u2120:
  4965  01ED                     __ccov186_start_blk1:
  4966  01ED                     l2266:
  4967  01ED  0020               	movlb	0	; select bank0
  4968  01EE  162C               	bsf	__ccovbit1_82/(0+8),__ccovbit1_82& (0+7)	;volatile
  4969  01EF  1979               	btfsc	_ff,2
  4970  01F0  29F2               	goto	u2131
  4971  01F1  29F3               	goto	u2130
  4972  01F2                     u2131:
  4973  01F2  2A12               	goto	l2282
  4974  01F3                     __ccov186_end_blk1:
  4975  01F3                     u2130:
  4976  01F3                     __ccov187_start_blk2:
  4977  01F3                     l2268:
  4978  01F3  15AC               	bsf	__ccovbit2_83/(0+8),__ccovbit2_83& (0+7)	;volatile
  4979  01F4  1CF9               	btfss	_ff,1
  4980  01F5  29F7               	goto	u2141
  4981  01F6  29F8               	goto	u2140
  4982  01F7                     u2141:
  4983  01F7  2A12               	goto	l2282
  4984  01F8                     __ccov187_end_blk2:
  4985  01F8                     u2140:
  4986  01F8                     __ccov188_start_blk3:
  4987  01F8                     l2270:
  4988  01F8  152C               	bsf	__ccovbit3_84/(0+8),__ccovbit3_84& (0+7)	;volatile
  4989  01F9  1DFB               	btfss	_ff+2,3
  4990  01FA  29FC               	goto	u2151
  4991  01FB  29FD               	goto	u2150
  4992  01FC                     u2151:
  4993  01FC  2A12               	goto	l2282
  4994  01FD                     __ccov188_end_blk3:
  4995  01FD                     u2150:
  4996  01FD                     __ccov189_start_blk4:
  4997  01FD                     l2272:
  4998  01FD  14AC               	bsf	__ccovbit4_85/(0+8),__ccovbit4_85& (0+7)	;volatile
  4999  01FE  197A               	btfsc	_ff+1,2
  5000  01FF  2A01               	goto	u2161
  5001  0200  2A02               	goto	u2160
  5002  0201                     u2161:
  5003  0201  2A12               	goto	l2282
  5004  0202                     __ccov189_end_blk4:
  5005  0202                     u2160:
  5006  0202                     __ccov190_start_blk5:
  5007  0202                     l2274:
  5008  0202  142C               	bsf	__ccovbit5_86/(0+8),__ccovbit5_86& (0+7)	;volatile
  5009  0203  18FA               	btfsc	_ff+1,1
  5010  0204  2A06               	goto	u2171
  5011  0205  2A07               	goto	u2170
  5012  0206                     u2171:
  5013  0206  2A12               	goto	l2282
  5014  0207                     __ccov190_end_blk5:
  5015  0207                     u2170:
  5016  0207                     __ccov191_start_blk6:
  5017  0207                     l2276:
  5018  0207  17AB               	bsf	__ccovbit6_87/(0+8),__ccovbit6_87& (0+7)	;volatile
  5019  0208  187C               	btfsc	_ff+3,0
  5020  0209  2A0B               	goto	u2181
  5021  020A  2A0C               	goto	u2180
  5022  020B                     u2181:
  5023  020B  2A12               	goto	l2282
  5024  020C                     __ccov191_end_blk6:
  5025  020C                     u2180:
  5026  020C                     __ccov192_start_blk7:
  5027  020C                     l2278:
  5028                           
  5029                           ;main.c: 340:                 !ff.bits.AUTOROTATION_WORK) {;main.c: 341:             bee
      +                          p_short_count = 1;
  5030  020C  01FD               	clrf	_beep_short_count
  5031  020D  0AFD               	incf	_beep_short_count,f
  5032  020E                     __ccov192_end_blk7:
  5033  020E                     __ccov193_start_blk8:
  5034  020E                     l2280:
  5035  020E  172B               	bsf	__ccovbit8_88/(0+8),__ccovbit8_88& (0+7)	;volatile
  5036                           
  5037                           ;main.c: 342:             open();
  5038  020F  3184  24A7  3181   	fcall	_open
  5039  0212                     __ccov193_end_blk8:
  5040  0212                     __ccov194_start_blk10:
  5041  0212                     l2282:
  5042                           
  5043                           ;main.c: 344:         if (
  5044  0212  1D79               	btfss	_ff,2
  5045  0213  2A15               	goto	u2191
  5046  0214  2A16               	goto	u2190
  5047  0215                     u2191:
  5048  0215  2A38               	goto	l389
  5049  0216                     __ccov194_end_blk10:
  5050  0216                     u2190:
  5051  0216                     __ccov195_start_blk11:
  5052  0216                     l2284:
  5053  0216  0020               	movlb	0	; select bank0
  5054  0217  16AB               	bsf	__ccovbit11_89/(0+8),__ccovbit11_89& (0+7)	;volatile
  5055  0218  1DFB               	btfss	_ff+2,3
  5056  0219  2A1B               	goto	u2201
  5057  021A  2A1C               	goto	u2200
  5058  021B                     u2201:
  5059  021B  2A38               	goto	l389
  5060  021C                     __ccov195_end_blk11:
  5061  021C                     u2200:
  5062  021C                     __ccov196_start_blk12:
  5063  021C                     l2286:
  5064  021C  162B               	bsf	__ccovbit12_90/(0+8),__ccovbit12_90& (0+7)	;volatile
  5065  021D  19F9               	btfsc	_ff,3
  5066  021E  2A20               	goto	u2211
  5067  021F  2A21               	goto	u2210
  5068  0220                     u2211:
  5069  0220  2A38               	goto	l389
  5070  0221                     __ccov196_end_blk12:
  5071  0221                     u2210:
  5072  0221                     __ccov197_start_blk13:
  5073  0221                     l2288:
  5074  0221  15AB               	bsf	__ccovbit13_91/(0+8),__ccovbit13_91& (0+7)	;volatile
  5075  0222  1A7A               	btfsc	_ff+1,4
  5076  0223  2A25               	goto	u2221
  5077  0224  2A26               	goto	u2220
  5078  0225                     u2221:
  5079  0225  2A38               	goto	l389
  5080  0226                     __ccov197_end_blk13:
  5081  0226                     u2220:
  5082  0226                     __ccov198_start_blk14:
  5083  0226                     l2290:
  5084  0226  152B               	bsf	__ccovbit14_92/(0+8),__ccovbit14_92& (0+7)	;volatile
  5085  0227  19FA               	btfsc	_ff+1,3
  5086  0228  2A2A               	goto	u2231
  5087  0229  2A2B               	goto	u2230
  5088  022A                     u2231:
  5089  022A  2A38               	goto	l389
  5090  022B                     __ccov198_end_blk14:
  5091  022B                     u2230:
  5092  022B                     __ccov199_start_blk15:
  5093  022B                     l2292:
  5094  022B  14AB               	bsf	__ccovbit15_93/(0+8),__ccovbit15_93& (0+7)	;volatile
  5095  022C  187C               	btfsc	_ff+3,0
  5096  022D  2A2F               	goto	u2241
  5097  022E  2A30               	goto	u2240
  5098  022F                     u2241:
  5099  022F  2A38               	goto	l389
  5100  0230                     __ccov199_end_blk15:
  5101  0230                     u2240:
  5102  0230                     __ccov200_start_blk16:
  5103  0230                     l2294:
  5104                           
  5105                           ;main.c: 350:                 !ff.bits.AUTOROTATION_WORK) {;main.c: 351:             bee
      +                          p_short_count = 2;
  5106  0230  3002               	movlw	2
  5107  0231  00F5               	movwf	??_fun_work
  5108  0232  0875               	movf	??_fun_work,w
  5109  0233  00FD               	movwf	_beep_short_count
  5110  0234                     __ccov200_end_blk16:
  5111  0234                     __ccov201_start_blk17:
  5112  0234                     l2296:
  5113  0234  142B               	bsf	__ccovbit17_94/(0+8),__ccovbit17_94& (0+7)	;volatile
  5114                           
  5115                           ;main.c: 352:             close();
  5116  0235  3184  2486  3181   	fcall	_close
  5117  0238                     __ccov201_end_blk17:
  5118  0238                     __ccov202_start_blk19:
  5119  0238                     l389:
  5120  0238  0020               	movlb	0	; select bank0
  5121  0239  17AA               	bsf	__ccovbit19_95/(0+8),__ccovbit19_95& (0+7)	;volatile
  5122  023A  0008               	return
  5123  023B                     __end_of_fun_work:
  5124  023B                     
  5125                           	psect	text24
  5126  0486                     __ptext24:	
  5127 ;; *************** function _close *****************
  5128 ;; Defined at:
  5129 ;;		line 249 in file "main.c"
  5130 ;; Parameters:    Size  Location     Type
  5131 ;;		None
  5132 ;; Auto vars:     Size  Location     Type
  5133 ;;		None
  5134 ;; Return value:  Size  Location     Type
  5135 ;;                  1    wreg      void 
  5136 ;; Registers used:
  5137 ;;		wreg, status,2, status,0, pclath, cstack
  5138 ;; Tracked objects:
  5139 ;;		On entry : 0/0
  5140 ;;		On exit  : 0/0
  5141 ;;		Unchanged: 0/0
  5142 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5143 ;;      Params:         0       0       0       0
  5144 ;;      Locals:         0       0       0       0
  5145 ;;      Temps:          0       0       0       0
  5146 ;;      Totals:         0       0       0       0
  5147 ;;Total ram usage:        0 bytes
  5148 ;; Hardware stack levels used: 1
  5149 ;; Hardware stack levels required when called: 8
  5150 ;; This function calls:
  5151 ;;		_go_close
  5152 ;;		_go_close_alt
  5153 ;;		_rele_off
  5154 ;; This function is called by:
  5155 ;;		_fun_work
  5156 ;;		_main
  5157 ;; This function uses a non-reentrant model
  5158 ;;
  5159                           
  5160  0486                     _close:	
  5161                           ;psect for function _close
  5162                           
  5163                           
  5164                           ;incstack = 0
  5165                           ; Regs used in _close: [wreg+status,2+status,0+pclath+cstack]
  5166  0486                     l2190:
  5167                           
  5168                           ;main.c: 250:     if (ff.bits.OPENING) {
  5169  0486  1CFA               	btfss	_ff+1,1
  5170  0487  2C89               	goto	u1971
  5171  0488  2C8A               	goto	u1970
  5172  0489                     u1971:
  5173  0489  2C90               	goto	l351
  5174  048A                     __ccov147_end_blk0:
  5175  048A                     u1970:
  5176  048A                     __ccov148_start_blk1:
  5177  048A                     l2192:
  5178  048A  0020               	movlb	0	; select bank0
  5179  048B  162F               	bsf	__ccovbit1_58/(0+8),__ccovbit1_58& (0+7)	;volatile
  5180                           
  5181                           ;main.c: 251:         rele_off();
  5182  048C  3185  25BD  3184   	fcall	_rele_off
  5183                           
  5184                           ;main.c: 252:     } else {
  5185  048F  2CA4               	goto	l356
  5186  0490                     __ccov148_end_blk1:
  5187  0490                     __ccov149_start_blk2:
  5188  0490                     l351:
  5189                           
  5190                           ;main.c: 253:         if (ff.bits.NORMAL_WORK_MODE_ON) {
  5191  0490  1E7B               	btfss	_ff+2,4
  5192  0491  2C93               	goto	u1981
  5193  0492  2C94               	goto	u1980
  5194  0493                     u1981:
  5195  0493  2C9A               	goto	l353
  5196  0494                     __ccov149_end_blk2:
  5197  0494                     u1980:
  5198  0494                     __ccov150_start_blk3:
  5199  0494                     l2194:
  5200  0494  0020               	movlb	0	; select bank0
  5201  0495  15AF               	bsf	__ccovbit3_59/(0+8),__ccovbit3_59& (0+7)	;volatile
  5202                           
  5203                           ;main.c: 254:             go_close();
  5204  0496  3183  23EA  3184   	fcall	_go_close
  5205                           
  5206                           ;main.c: 255:         } else if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  5207  0499  2CA4               	goto	l356
  5208  049A                     __ccov150_end_blk3:
  5209  049A                     __ccov151_start_blk4:
  5210  049A                     l353:
  5211  049A  0020               	movlb	0	; select bank0
  5212  049B  152F               	bsf	__ccovbit4_60/(0+8),__ccovbit4_60& (0+7)	;volatile
  5213  049C  1EFB               	btfss	_ff+2,5
  5214  049D  2C9F               	goto	u1991
  5215  049E  2CA0               	goto	u1990
  5216  049F                     u1991:
  5217  049F  2CA4               	goto	l356
  5218  04A0                     __ccov151_end_blk4:
  5219  04A0                     u1990:
  5220  04A0                     __ccov152_start_blk5:
  5221  04A0                     l2196:
  5222  04A0  14AF               	bsf	__ccovbit5_61/(0+8),__ccovbit5_61& (0+7)	;volatile
  5223                           
  5224                           ;main.c: 256:             go_close_alt();
  5225  04A1  3185  25A6  3184   	fcall	_go_close_alt
  5226  04A4                     __ccov152_end_blk5:
  5227  04A4                     __ccov153_start_blk9:
  5228  04A4                     l356:
  5229  04A4  0020               	movlb	0	; select bank0
  5230  04A5  142F               	bsf	__ccovbit9_62/(0+8),__ccovbit9_62& (0+7)	;volatile
  5231  04A6  0008               	return
  5232  04A7                     __end_of_close:
  5233  04A7                     
  5234                           	psect	text25
  5235  05A6                     __ptext25:	
  5236 ;; *************** function _go_close_alt *****************
  5237 ;; Defined at:
  5238 ;;		line 213 in file "main.c"
  5239 ;; Parameters:    Size  Location     Type
  5240 ;;		None
  5241 ;; Auto vars:     Size  Location     Type
  5242 ;;		None
  5243 ;; Return value:  Size  Location     Type
  5244 ;;                  1    wreg      void 
  5245 ;; Registers used:
  5246 ;;		None
  5247 ;; Tracked objects:
  5248 ;;		On entry : 0/0
  5249 ;;		On exit  : 0/0
  5250 ;;		Unchanged: 0/0
  5251 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5252 ;;      Params:         0       0       0       0
  5253 ;;      Locals:         0       0       0       0
  5254 ;;      Temps:          0       0       0       0
  5255 ;;      Totals:         0       0       0       0
  5256 ;;Total ram usage:        0 bytes
  5257 ;; Hardware stack levels used: 1
  5258 ;; Hardware stack levels required when called: 7
  5259 ;; This function calls:
  5260 ;;		Nothing
  5261 ;; This function is called by:
  5262 ;;		_close
  5263 ;; This function uses a non-reentrant model
  5264 ;;
  5265                           
  5266  05A6                     _go_close_alt:	
  5267                           ;psect for function _go_close_alt
  5268                           
  5269                           
  5270                           ;incstack = 0
  5271                           ; Regs used in _go_close_alt: []
  5272  05A6                     l1380:
  5273                           
  5274                           ;main.c: 215:     if ((!ff.bits.CLOSED && ff.bits.MOVING_ALLOWED) || ff.bits.ALARM_ON) {
  5275  05A6  1A7A               	btfsc	_ff+1,4
  5276  05A7  2DA9               	goto	u251
  5277  05A8  2DAA               	goto	u250
  5278  05A9                     u251:
  5279  05A9  2DB0               	goto	l338
  5280  05AA                     __ccov133_end_blk0:
  5281  05AA                     u250:
  5282  05AA                     __ccov134_start_blk1:
  5283  05AA                     l1382:
  5284  05AA  0020               	movlb	0	; select bank0
  5285  05AB  1730               	bsf	__ccovbit1_48/(0+8),__ccovbit1_48& (0+7)	;volatile
  5286  05AC  19FB               	btfsc	_ff+2,3
  5287  05AD  2DAF               	goto	u261
  5288  05AE  2DB0               	goto	u260
  5289  05AF                     u261:
  5290  05AF  2DB6               	goto	l336
  5291  05B0                     __ccov134_end_blk1:
  5292  05B0                     u260:
  5293  05B0                     __ccov135_start_blk2:
  5294  05B0                     l338:
  5295  05B0  0020               	movlb	0	; select bank0
  5296  05B1  16B0               	bsf	__ccovbit2_49/(0+8),__ccovbit2_49& (0+7)	;volatile
  5297  05B2  1C79               	btfss	_ff,0
  5298  05B3  2DB5               	goto	u271
  5299  05B4  2DB6               	goto	u270
  5300  05B5                     u271:
  5301  05B5  2DBB               	goto	l339
  5302  05B6                     __ccov135_end_blk2:
  5303  05B6                     u270:
  5304  05B6                     __ccov136_start_blk3:
  5305  05B6                     l336:
  5306  05B6  1630               	bsf	__ccovbit3_50/(0+8),__ccovbit3_50& (0+7)	;volatile
  5307                           
  5308                           ;main.c: 216:         ff.bits.OPENED = 0;
  5309  05B7  117A               	bcf	_ff+1,2
  5310                           
  5311                           ;main.c: 217:         ff.bits.CLOSED = 1;
  5312  05B8  167A               	bsf	_ff+1,4
  5313                           
  5314                           ;main.c: 219:         ff.bits.RELE_CONTROL_ON = 0;
  5315  05B9  137A               	bcf	_ff+1,6
  5316                           
  5317                           ;main.c: 220:         ff.bits.RELE_POWER_ON = 1;
  5318  05BA  16FA               	bsf	_ff+1,5
  5319  05BB                     __ccov136_end_blk3:
  5320  05BB                     __ccov137_start_blk5:
  5321  05BB                     l339:
  5322  05BB  15B0               	bsf	__ccovbit5_51/(0+8),__ccovbit5_51& (0+7)	;volatile
  5323  05BC  0008               	return
  5324  05BD                     __end_of_go_close_alt:
  5325  05BD                     
  5326                           	psect	text26
  5327  03EA                     __ptext26:	
  5328 ;; *************** function _go_close *****************
  5329 ;; Defined at:
  5330 ;;		line 159 in file "main.c"
  5331 ;; Parameters:    Size  Location     Type
  5332 ;;		None
  5333 ;; Auto vars:     Size  Location     Type
  5334 ;;		None
  5335 ;; Return value:  Size  Location     Type
  5336 ;;                  1    wreg      void 
  5337 ;; Registers used:
  5338 ;;		wreg
  5339 ;; Tracked objects:
  5340 ;;		On entry : 0/0
  5341 ;;		On exit  : 0/0
  5342 ;;		Unchanged: 0/0
  5343 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5344 ;;      Params:         0       0       0       0
  5345 ;;      Locals:         0       0       0       0
  5346 ;;      Temps:          0       0       0       0
  5347 ;;      Totals:         0       0       0       0
  5348 ;;Total ram usage:        0 bytes
  5349 ;; Hardware stack levels used: 1
  5350 ;; Hardware stack levels required when called: 7
  5351 ;; This function calls:
  5352 ;;		Nothing
  5353 ;; This function is called by:
  5354 ;;		_close
  5355 ;; This function uses a non-reentrant model
  5356 ;;
  5357                           
  5358  03EA                     _go_close:	
  5359                           ;psect for function _go_close
  5360                           
  5361                           
  5362                           ;incstack = 0
  5363                           ; Regs used in _go_close: [wreg]
  5364  03EA                     l2044:
  5365                           
  5366                           ;main.c: 161:     if (!ff.bits.CLOSING && !ff.bits.CLOSED && ff.bits.MOVING_ALLOWED) {
  5367  03EA  19FA               	btfsc	_ff+1,3
  5368  03EB  2BED               	goto	u1581
  5369  03EC  2BEE               	goto	u1580
  5370  03ED                     u1581:
  5371  03ED  2C11               	goto	l323
  5372  03EE                     __ccov115_end_blk0:
  5373  03EE                     u1580:
  5374  03EE                     __ccov116_start_blk1:
  5375  03EE                     l2046:
  5376  03EE  0020               	movlb	0	; select bank0
  5377  03EF  1532               	bsf	__ccovbit1_36/(0+8),__ccovbit1_36& (0+7)	;volatile
  5378  03F0  1A7A               	btfsc	_ff+1,4
  5379  03F1  2BF3               	goto	u1591
  5380  03F2  2BF4               	goto	u1590
  5381  03F3                     u1591:
  5382  03F3  2C11               	goto	l323
  5383  03F4                     __ccov116_end_blk1:
  5384  03F4                     u1590:
  5385  03F4                     __ccov117_start_blk2:
  5386  03F4                     l2048:
  5387  03F4  14B2               	bsf	__ccovbit2_37/(0+8),__ccovbit2_37& (0+7)	;volatile
  5388  03F5  1DFB               	btfss	_ff+2,3
  5389  03F6  2BF8               	goto	u1601
  5390  03F7  2BF9               	goto	u1600
  5391  03F8                     u1601:
  5392  03F8  2C11               	goto	l323
  5393  03F9                     __ccov117_end_blk2:
  5394  03F9                     u1600:
  5395  03F9                     __ccov118_start_blk3:
  5396  03F9                     l2050:
  5397                           
  5398                           ;main.c: 162:         ff.bits.CLOSING = 1;
  5399  03F9  15FA               	bsf	_ff+1,3
  5400                           
  5401                           ;main.c: 163:         ff.bits.OPENED = 0;
  5402  03FA  117A               	bcf	_ff+1,2
  5403                           
  5404                           ;main.c: 164:         ff.bits.OPENING = 0;
  5405  03FB  10FA               	bcf	_ff+1,1
  5406                           
  5407                           ;main.c: 166:         ff.bits.RELE_POWER_ON = 0;
  5408  03FC  12FA               	bcf	_ff+1,5
  5409                           
  5410                           ;main.c: 167:         ff.bits.RELE_CONTROL_ON = 1;
  5411  03FD  177A               	bsf	_ff+1,6
  5412  03FE                     __ccov118_end_blk3:
  5413  03FE                     __ccov119_start_blk4:
  5414  03FE                     l2052:
  5415  03FE  1432               	bsf	__ccovbit4_38/(0+8),__ccovbit4_38& (0+7)	;volatile
  5416                           
  5417                           ;main.c: 169:         time_rele_control = RELE_GAP + RELE_POWER_WORK_DELAY + RELE_GAP;
  5418  03FF  307A               	movlw	122
  5419  0400  00C3               	movwf	_time_rele_control
  5420  0401  3000               	movlw	0
  5421  0402  00C4               	movwf	_time_rele_control+1
  5422                           
  5423                           ;main.c: 170:         time_rele_power = RELE_POWER_WORK_DELAY;
  5424  0403  3078               	movlw	120
  5425  0404  00C5               	movwf	_time_rele_power
  5426  0405  3000               	movlw	0
  5427  0406  00C6               	movwf	_time_rele_power+1
  5428                           
  5429                           ;main.c: 171:         time_rele_gap = RELE_GAP;
  5430  0407  3001               	movlw	1
  5431  0408  00C1               	movwf	_time_rele_gap
  5432  0409  3000               	movlw	0
  5433  040A  00C2               	movwf	_time_rele_gap+1
  5434                           
  5435                           ;main.c: 173:         time_rotation = 0;
  5436  040B  3000               	movlw	0
  5437  040C  00B4               	movwf	_time_rotation
  5438  040D  3000               	movlw	0
  5439  040E  00B5               	movwf	_time_rotation+1
  5440  040F  3000               	movlw	0
  5441  0410  00B6               	movwf	_time_rotation+2
  5442  0411                     __ccov119_end_blk4:
  5443  0411                     __ccov120_start_blk6:
  5444  0411                     l323:
  5445  0411  0020               	movlb	0	; select bank0
  5446  0412  17B1               	bsf	__ccovbit6_39/(0+8),__ccovbit6_39& (0+7)	;volatile
  5447  0413  0008               	return
  5448  0414                     __end_of_go_close:
  5449  0414                     
  5450                           	psect	text27
  5451  018F                     __ptext27:	
  5452 ;; *************** function _autorotation_work *****************
  5453 ;; Defined at:
  5454 ;;		line 377 in file "main.c"
  5455 ;; Parameters:    Size  Location     Type
  5456 ;;		None
  5457 ;; Auto vars:     Size  Location     Type
  5458 ;;		None
  5459 ;; Return value:  Size  Location     Type
  5460 ;;                  1    wreg      void 
  5461 ;; Registers used:
  5462 ;;		wreg, status,2, status,0, pclath, cstack
  5463 ;; Tracked objects:
  5464 ;;		On entry : 0/0
  5465 ;;		On exit  : 0/0
  5466 ;;		Unchanged: 0/0
  5467 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5468 ;;      Params:         0       0       0       0
  5469 ;;      Locals:         0       0       0       0
  5470 ;;      Temps:          0       0       0       0
  5471 ;;      Totals:         0       0       0       0
  5472 ;;Total ram usage:        0 bytes
  5473 ;; Hardware stack levels used: 1
  5474 ;; Hardware stack levels required when called: 9
  5475 ;; This function calls:
  5476 ;;		_go_close_short
  5477 ;;		_open
  5478 ;; This function is called by:
  5479 ;;		_main
  5480 ;; This function uses a non-reentrant model
  5481 ;;
  5482                           
  5483  018F                     _autorotation_work:	
  5484                           ;psect for function _autorotation_work
  5485                           
  5486                           
  5487                           ;incstack = 0
  5488                           ; Regs used in _autorotation_work: [wreg+status,2+status,0+pclath+cstack]
  5489  018F                     l2316:
  5490                           
  5491                           ;main.c: 379:    if ((time_rotation > (AUTOROTATION_DELAY + RELE_POWER_AUTOROTATION_DELA
      +                          Y + RELE_GAP * 2)) &&
  5492  018F  3000               	movlw	0
  5493  0190  0020               	movlb	0	; select bank0
  5494  0191  0236               	subwf	_time_rotation+2,w
  5495  0192  1D03               	skipz
  5496  0193  299A               	goto	u2295
  5497  0194  3075               	movlw	117
  5498  0195  0235               	subwf	_time_rotation+1,w
  5499  0196  1D03               	skipz
  5500  0197  299A               	goto	u2295
  5501  0198  301C               	movlw	28
  5502  0199  0234               	subwf	_time_rotation,w
  5503  019A                     u2295:
  5504  019A  1C03               	skipc
  5505  019B  299D               	goto	u2291
  5506  019C  299E               	goto	u2290
  5507  019D                     u2291:
  5508  019D  29BF               	goto	l2332
  5509  019E                     __ccov214_end_blk0:
  5510  019E                     u2290:
  5511  019E                     __ccov215_start_blk1:
  5512  019E                     l2318:
  5513  019E  142A               	bsf	__ccovbit1_102/(0+8),__ccovbit1_102& (0+7)	;volatile
  5514  019F  197A               	btfsc	_ff+1,2
  5515  01A0  29A2               	goto	u2301
  5516  01A1  29A3               	goto	u2300
  5517  01A2                     u2301:
  5518  01A2  29BF               	goto	l2332
  5519  01A3                     __ccov215_end_blk1:
  5520  01A3                     u2300:
  5521  01A3                     __ccov216_start_blk2:
  5522  01A3                     l2320:
  5523  01A3  17A9               	bsf	__ccovbit2_103/(0+8),__ccovbit2_103& (0+7)	;volatile
  5524  01A4  18FA               	btfsc	_ff+1,1
  5525  01A5  29A7               	goto	u2311
  5526  01A6  29A8               	goto	u2310
  5527  01A7                     u2311:
  5528  01A7  29BF               	goto	l2332
  5529  01A8                     __ccov216_end_blk2:
  5530  01A8                     u2310:
  5531  01A8                     __ccov217_start_blk3:
  5532  01A8                     l2322:
  5533  01A8  1729               	bsf	__ccovbit3_104/(0+8),__ccovbit3_104& (0+7)	;volatile
  5534  01A9  1CF9               	btfss	_ff,1
  5535  01AA  29AC               	goto	u2321
  5536  01AB  29AD               	goto	u2320
  5537  01AC                     u2321:
  5538  01AC  29BF               	goto	l2332
  5539  01AD                     __ccov217_end_blk3:
  5540  01AD                     u2320:
  5541  01AD                     __ccov218_start_blk4:
  5542  01AD                     l2324:
  5543  01AD  16A9               	bsf	__ccovbit4_105/(0+8),__ccovbit4_105& (0+7)	;volatile
  5544  01AE  1E7B               	btfss	_ff+2,4
  5545  01AF  29B1               	goto	u2331
  5546  01B0  29B2               	goto	u2330
  5547  01B1                     u2331:
  5548  01B1  29BF               	goto	l2332
  5549  01B2                     __ccov218_end_blk4:
  5550  01B2                     u2330:
  5551  01B2                     __ccov219_start_blk5:
  5552  01B2                     l2326:
  5553                           
  5554                           ;main.c: 384:             ) {;main.c: 385:         open();
  5555  01B2  3184  24A7  3181   	fcall	_open
  5556  01B5                     __ccov219_end_blk5:
  5557  01B5                     __ccov220_start_blk6:
  5558  01B5                     l2328:
  5559                           
  5560                           ;main.c: 386:         beep_short_count=1;
  5561  01B5  01FD               	clrf	_beep_short_count
  5562  01B6  0AFD               	incf	_beep_short_count,f
  5563  01B7                     __ccov220_end_blk6:
  5564  01B7                     __ccov221_start_blk7:
  5565  01B7                     l2330:
  5566  01B7  0020               	movlb	0	; select bank0
  5567  01B8  1629               	bsf	__ccovbit7_106/(0+8),__ccovbit7_106& (0+7)	;volatile
  5568                           
  5569                           ;main.c: 388:         time_rotation = 0;
  5570  01B9  3000               	movlw	0
  5571  01BA  00B4               	movwf	_time_rotation
  5572  01BB  3000               	movlw	0
  5573  01BC  00B5               	movwf	_time_rotation+1
  5574  01BD  3000               	movlw	0
  5575  01BE  00B6               	movwf	_time_rotation+2
  5576  01BF                     __ccov221_end_blk7:
  5577  01BF                     __ccov222_start_blk9:
  5578  01BF                     l2332:
  5579                           
  5580                           ;main.c: 391:    if ((time_rotation > AUTOROTATION_DELAY) &&
  5581  01BF  3000               	movlw	0
  5582  01C0  0236               	subwf	_time_rotation+2,w
  5583  01C1  1D03               	skipz
  5584  01C2  29C9               	goto	u2345
  5585  01C3  3075               	movlw	117
  5586  01C4  0235               	subwf	_time_rotation+1,w
  5587  01C5  1D03               	skipz
  5588  01C6  29C9               	goto	u2345
  5589  01C7  3001               	movlw	1
  5590  01C8  0234               	subwf	_time_rotation,w
  5591  01C9                     u2345:
  5592  01C9  1C03               	skipc
  5593  01CA  29CC               	goto	u2341
  5594  01CB  29CD               	goto	u2340
  5595  01CC                     u2341:
  5596  01CC  29E7               	goto	l402
  5597  01CD                     __ccov222_end_blk9:
  5598  01CD                     u2340:
  5599  01CD                     __ccov223_start_blk10:
  5600  01CD                     l2334:
  5601  01CD  15A9               	bsf	__ccovbit10_107/(0+8),__ccovbit10_107& (0+7)	;volatile
  5602  01CE  1A7A               	btfsc	_ff+1,4
  5603  01CF  29D1               	goto	u2351
  5604  01D0  29D2               	goto	u2350
  5605  01D1                     u2351:
  5606  01D1  29E7               	goto	l402
  5607  01D2                     __ccov223_end_blk10:
  5608  01D2                     u2350:
  5609  01D2                     __ccov224_start_blk11:
  5610  01D2                     l2336:
  5611  01D2  1529               	bsf	__ccovbit11_108/(0+8),__ccovbit11_108& (0+7)	;volatile
  5612  01D3  19FA               	btfsc	_ff+1,3
  5613  01D4  29D6               	goto	u2361
  5614  01D5  29D7               	goto	u2360
  5615  01D6                     u2361:
  5616  01D6  29E7               	goto	l402
  5617  01D7                     __ccov224_end_blk11:
  5618  01D7                     u2360:
  5619  01D7                     __ccov225_start_blk12:
  5620  01D7                     l2338:
  5621  01D7  14A9               	bsf	__ccovbit12_109/(0+8),__ccovbit12_109& (0+7)	;volatile
  5622  01D8  1CF9               	btfss	_ff,1
  5623  01D9  29DB               	goto	u2371
  5624  01DA  29DC               	goto	u2370
  5625  01DB                     u2371:
  5626  01DB  29E7               	goto	l402
  5627  01DC                     __ccov225_end_blk12:
  5628  01DC                     u2370:
  5629  01DC                     __ccov226_start_blk13:
  5630  01DC                     l2340:
  5631  01DC  1429               	bsf	__ccovbit13_110/(0+8),__ccovbit13_110& (0+7)	;volatile
  5632  01DD  1E7B               	btfss	_ff+2,4
  5633  01DE  29E0               	goto	u2381
  5634  01DF  29E1               	goto	u2380
  5635  01E0                     u2381:
  5636  01E0  29E7               	goto	l402
  5637  01E1                     __ccov226_end_blk13:
  5638  01E1                     u2380:
  5639  01E1                     __ccov227_start_blk14:
  5640  01E1                     l2342:
  5641                           
  5642                           ;main.c: 396:             ) {;main.c: 398:               go_close_short();
  5643  01E1  3184  2462  3181   	fcall	_go_close_short
  5644  01E4                     __ccov227_end_blk14:
  5645  01E4                     __ccov228_start_blk15:
  5646  01E4                     l2344:
  5647  01E4  0020               	movlb	0	; select bank0
  5648  01E5  17A8               	bsf	__ccovbit15_111/(0+8),__ccovbit15_111& (0+7)	;volatile
  5649                           
  5650                           ;main.c: 399:               ff.bits.AUTOROTATION_WORK = 1;
  5651  01E6  147C               	bsf	_ff+3,0
  5652  01E7                     __ccov228_end_blk15:
  5653  01E7                     __ccov229_start_blk17:
  5654  01E7                     l402:
  5655  01E7  1728               	bsf	__ccovbit17_112/(0+8),__ccovbit17_112& (0+7)	;volatile
  5656  01E8  0008               	return
  5657  01E9                     __end_of_autorotation_work:
  5658  01E9                     
  5659                           	psect	text28
  5660  04A7                     __ptext28:	
  5661 ;; *************** function _open *****************
  5662 ;; Defined at:
  5663 ;;		line 261 in file "main.c"
  5664 ;; Parameters:    Size  Location     Type
  5665 ;;		None
  5666 ;; Auto vars:     Size  Location     Type
  5667 ;;		None
  5668 ;; Return value:  Size  Location     Type
  5669 ;;                  1    wreg      void 
  5670 ;; Registers used:
  5671 ;;		wreg, status,2, status,0, pclath, cstack
  5672 ;; Tracked objects:
  5673 ;;		On entry : 0/0
  5674 ;;		On exit  : 0/0
  5675 ;;		Unchanged: 0/0
  5676 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5677 ;;      Params:         0       0       0       0
  5678 ;;      Locals:         0       0       0       0
  5679 ;;      Temps:          0       0       0       0
  5680 ;;      Totals:         0       0       0       0
  5681 ;;Total ram usage:        0 bytes
  5682 ;; Hardware stack levels used: 1
  5683 ;; Hardware stack levels required when called: 8
  5684 ;; This function calls:
  5685 ;;		_go_open
  5686 ;;		_go_open_alt
  5687 ;;		_rele_off
  5688 ;; This function is called by:
  5689 ;;		_fun_work
  5690 ;;		_autorotation_work
  5691 ;; This function uses a non-reentrant model
  5692 ;;
  5693                           
  5694  04A7                     _open:	
  5695                           ;psect for function _open
  5696                           
  5697                           
  5698                           ;incstack = 0
  5699                           ; Regs used in _open: [wreg+status,2+status,0+pclath+cstack]
  5700  04A7                     l2198:
  5701                           
  5702                           ;main.c: 262:     if (ff.bits.CLOSING) {
  5703  04A7  1DFA               	btfss	_ff+1,3
  5704  04A8  2CAA               	goto	u2001
  5705  04A9  2CAB               	goto	u2000
  5706  04AA                     u2001:
  5707  04AA  2CB1               	goto	l359
  5708  04AB                     __ccov154_end_blk0:
  5709  04AB                     u2000:
  5710  04AB                     __ccov155_start_blk1:
  5711  04AB                     l2200:
  5712  04AB  0020               	movlb	0	; select bank0
  5713  04AC  17AE               	bsf	__ccovbit1_63/(0+8),__ccovbit1_63& (0+7)	;volatile
  5714                           
  5715                           ;main.c: 263:         rele_off();
  5716  04AD  3185  25BD  3184   	fcall	_rele_off
  5717                           
  5718                           ;main.c: 264:     } else {
  5719  04B0  2CC5               	goto	l364
  5720  04B1                     __ccov155_end_blk1:
  5721  04B1                     __ccov156_start_blk2:
  5722  04B1                     l359:
  5723                           
  5724                           ;main.c: 265:         if (ff.bits.NORMAL_WORK_MODE_ON) {
  5725  04B1  1E7B               	btfss	_ff+2,4
  5726  04B2  2CB4               	goto	u2011
  5727  04B3  2CB5               	goto	u2010
  5728  04B4                     u2011:
  5729  04B4  2CBB               	goto	l361
  5730  04B5                     __ccov156_end_blk2:
  5731  04B5                     u2010:
  5732  04B5                     __ccov157_start_blk3:
  5733  04B5                     l2202:
  5734  04B5  0020               	movlb	0	; select bank0
  5735  04B6  172E               	bsf	__ccovbit3_64/(0+8),__ccovbit3_64& (0+7)	;volatile
  5736                           
  5737                           ;main.c: 266:             go_open();
  5738  04B7  3184  24C8  3184   	fcall	_go_open
  5739                           
  5740                           ;main.c: 267:         } else if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  5741  04BA  2CC5               	goto	l364
  5742  04BB                     __ccov157_end_blk3:
  5743  04BB                     __ccov158_start_blk4:
  5744  04BB                     l361:
  5745  04BB  0020               	movlb	0	; select bank0
  5746  04BC  16AE               	bsf	__ccovbit4_65/(0+8),__ccovbit4_65& (0+7)	;volatile
  5747  04BD  1EFB               	btfss	_ff+2,5
  5748  04BE  2CC0               	goto	u2021
  5749  04BF  2CC1               	goto	u2020
  5750  04C0                     u2021:
  5751  04C0  2CC5               	goto	l364
  5752  04C1                     __ccov158_end_blk4:
  5753  04C1                     u2020:
  5754  04C1                     __ccov159_start_blk5:
  5755  04C1                     l2204:
  5756  04C1  162E               	bsf	__ccovbit5_66/(0+8),__ccovbit5_66& (0+7)	;volatile
  5757                           
  5758                           ;main.c: 268:             go_open_alt();
  5759  04C2  3185  25F9  3184   	fcall	_go_open_alt
  5760  04C5                     __ccov159_end_blk5:
  5761  04C5                     __ccov160_start_blk9:
  5762  04C5                     l364:
  5763  04C5  0020               	movlb	0	; select bank0
  5764  04C6  15AE               	bsf	__ccovbit9_67/(0+8),__ccovbit9_67& (0+7)	;volatile
  5765  04C7  0008               	return
  5766  04C8                     __end_of_open:
  5767  04C8                     
  5768                           	psect	text29
  5769  05BD                     __ptext29:	
  5770 ;; *************** function _rele_off *****************
  5771 ;; Defined at:
  5772 ;;		line 234 in file "main.c"
  5773 ;; Parameters:    Size  Location     Type
  5774 ;;		None
  5775 ;; Auto vars:     Size  Location     Type
  5776 ;;		None
  5777 ;; Return value:  Size  Location     Type
  5778 ;;                  1    wreg      void 
  5779 ;; Registers used:
  5780 ;;		None
  5781 ;; Tracked objects:
  5782 ;;		On entry : 0/0
  5783 ;;		On exit  : 0/0
  5784 ;;		Unchanged: 0/0
  5785 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5786 ;;      Params:         0       0       0       0
  5787 ;;      Locals:         0       0       0       0
  5788 ;;      Temps:          0       0       0       0
  5789 ;;      Totals:         0       0       0       0
  5790 ;;Total ram usage:        0 bytes
  5791 ;; Hardware stack levels used: 1
  5792 ;; Hardware stack levels required when called: 7
  5793 ;; This function calls:
  5794 ;;		Nothing
  5795 ;; This function is called by:
  5796 ;;		_close
  5797 ;;		_open
  5798 ;;		_switch_wm
  5799 ;; This function uses a non-reentrant model
  5800 ;;
  5801                           
  5802  05BD                     _rele_off:	
  5803                           ;psect for function _rele_off
  5804                           
  5805                           
  5806                           ;incstack = 0
  5807                           ; Regs used in _rele_off: []
  5808  05BD                     l2072:
  5809                           
  5810                           ;main.c: 235:     ff.bits.RELE_CONTROL_ON = 0;
  5811  05BD  137A               	bcf	_ff+1,6
  5812                           
  5813                           ;main.c: 236:     ff.bits.RELE_POWER_ON = 0;
  5814  05BE  12FA               	bcf	_ff+1,5
  5815                           
  5816                           ;main.c: 237:     ff.bits.CLOSING = 0;
  5817  05BF  11FA               	bcf	_ff+1,3
  5818                           
  5819                           ;main.c: 238:     ff.bits.OPENING = 0;
  5820  05C0  10FA               	bcf	_ff+1,1
  5821                           
  5822                           ;main.c: 239:     ff.bits.CLOSED = 0;
  5823  05C1  127A               	bcf	_ff+1,4
  5824                           
  5825                           ;main.c: 240:     if (ff.bits.UNIVERSAL_VORK_MODE_ON) {
  5826  05C2  1EFB               	btfss	_ff+2,5
  5827  05C3  2DC5               	goto	u1661
  5828  05C4  2DC6               	goto	u1660
  5829  05C5                     u1661:
  5830  05C5  2DCA               	goto	l346
  5831  05C6                     __ccov142_end_blk0:
  5832  05C6                     u1660:
  5833  05C6                     __ccov143_start_blk1:
  5834  05C6                     l2074:
  5835  05C6  0020               	movlb	0	; select bank0
  5836  05C7  17AF               	bsf	__ccovbit1_55/(0+8),__ccovbit1_55& (0+7)	;volatile
  5837                           
  5838                           ;main.c: 241:         ff.bits.OPENED = 1;
  5839  05C8  157A               	bsf	_ff+1,2
  5840                           
  5841                           ;main.c: 242:     } else {
  5842  05C9  2DCD               	goto	l347
  5843  05CA                     __ccov143_end_blk1:
  5844  05CA                     __ccov144_start_blk2:
  5845  05CA                     l346:
  5846  05CA  0020               	movlb	0	; select bank0
  5847  05CB  172F               	bsf	__ccovbit2_56/(0+8),__ccovbit2_56& (0+7)	;volatile
  5848                           
  5849                           ;main.c: 243:         ff.bits.OPENED = 0;
  5850  05CC  117A               	bcf	_ff+1,2
  5851  05CD                     __ccov144_end_blk2:
  5852  05CD                     __ccov145_start_blk3:
  5853  05CD                     l347:	
  5854                           ;main.c: 244:     }
  5855                           
  5856                           
  5857                           ;main.c: 245:     ff.bits.MOVING_ALLOWED = 0;
  5858  05CD  11FB               	bcf	_ff+2,3
  5859                           
  5860                           ;main.c: 246:     time_moving_wait = MOVING_WAIT_DELAY;
  5861  05CE  01D0               	clrf	_time_moving_wait
  5862  05CF  0AD0               	incf	_time_moving_wait,f
  5863  05D0                     __ccov145_end_blk3:
  5864  05D0                     __ccov146_start_blk4:
  5865  05D0                     l348:
  5866  05D0  16AF               	bsf	__ccovbit4_57/(0+8),__ccovbit4_57& (0+7)	;volatile
  5867  05D1  0008               	return
  5868  05D2                     __end_of_rele_off:
  5869  05D2                     
  5870                           	psect	text30
  5871  05F9                     __ptext30:	
  5872 ;; *************** function _go_open_alt *****************
  5873 ;; Defined at:
  5874 ;;		line 224 in file "main.c"
  5875 ;; Parameters:    Size  Location     Type
  5876 ;;		None
  5877 ;; Auto vars:     Size  Location     Type
  5878 ;;		None
  5879 ;; Return value:  Size  Location     Type
  5880 ;;                  1    wreg      void 
  5881 ;; Registers used:
  5882 ;;		None
  5883 ;; Tracked objects:
  5884 ;;		On entry : 0/0
  5885 ;;		On exit  : 0/0
  5886 ;;		Unchanged: 0/0
  5887 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5888 ;;      Params:         0       0       0       0
  5889 ;;      Locals:         0       0       0       0
  5890 ;;      Temps:          0       0       0       0
  5891 ;;      Totals:         0       0       0       0
  5892 ;;Total ram usage:        0 bytes
  5893 ;; Hardware stack levels used: 1
  5894 ;; Hardware stack levels required when called: 7
  5895 ;; This function calls:
  5896 ;;		Nothing
  5897 ;; This function is called by:
  5898 ;;		_open
  5899 ;; This function uses a non-reentrant model
  5900 ;;
  5901                           
  5902  05F9                     _go_open_alt:	
  5903                           ;psect for function _go_open_alt
  5904                           
  5905                           
  5906                           ;incstack = 0
  5907                           ; Regs used in _go_open_alt: []
  5908  05F9                     l2066:
  5909                           
  5910                           ;main.c: 225:     if (!ff.bits.OPENED && ff.bits.MOVING_ALLOWED) {
  5911  05F9  197A               	btfsc	_ff+1,2
  5912  05FA  2DFC               	goto	u1641
  5913  05FB  2DFD               	goto	u1640
  5914  05FC                     u1641:
  5915  05FC  2E08               	goto	l343
  5916  05FD                     __ccov138_end_blk0:
  5917  05FD                     u1640:
  5918  05FD                     __ccov139_start_blk1:
  5919  05FD                     l2068:
  5920  05FD  0020               	movlb	0	; select bank0
  5921  05FE  1530               	bsf	__ccovbit1_52/(0+8),__ccovbit1_52& (0+7)	;volatile
  5922  05FF  1DFB               	btfss	_ff+2,3
  5923  0600  2E02               	goto	u1651
  5924  0601  2E03               	goto	u1650
  5925  0602                     u1651:
  5926  0602  2E08               	goto	l343
  5927  0603                     __ccov139_end_blk1:
  5928  0603                     u1650:
  5929  0603                     __ccov140_start_blk2:
  5930  0603                     l2070:
  5931  0603  14B0               	bsf	__ccovbit2_53/(0+8),__ccovbit2_53& (0+7)	;volatile
  5932                           
  5933                           ;main.c: 226:         ff.bits.CLOSED = 0;
  5934  0604  127A               	bcf	_ff+1,4
  5935                           
  5936                           ;main.c: 227:         ff.bits.OPENED = 1;
  5937  0605  157A               	bsf	_ff+1,2
  5938                           
  5939                           ;main.c: 229:         ff.bits.RELE_CONTROL_ON = 0;
  5940  0606  137A               	bcf	_ff+1,6
  5941                           
  5942                           ;main.c: 230:         ff.bits.RELE_POWER_ON = 0;
  5943  0607  12FA               	bcf	_ff+1,5
  5944  0608                     __ccov140_end_blk2:
  5945  0608                     __ccov141_start_blk4:
  5946  0608                     l343:
  5947  0608  0020               	movlb	0	; select bank0
  5948  0609  1430               	bsf	__ccovbit4_54/(0+8),__ccovbit4_54& (0+7)	;volatile
  5949  060A  0008               	return
  5950  060B                     __end_of_go_open_alt:
  5951  060B                     
  5952                           	psect	text31
  5953  04C8                     __ptext31:	
  5954 ;; *************** function _go_open *****************
  5955 ;; Defined at:
  5956 ;;		line 197 in file "main.c"
  5957 ;; Parameters:    Size  Location     Type
  5958 ;;		None
  5959 ;; Auto vars:     Size  Location     Type
  5960 ;;		None
  5961 ;; Return value:  Size  Location     Type
  5962 ;;                  1    wreg      void 
  5963 ;; Registers used:
  5964 ;;		wreg
  5965 ;; Tracked objects:
  5966 ;;		On entry : 0/0
  5967 ;;		On exit  : 0/0
  5968 ;;		Unchanged: 0/0
  5969 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  5970 ;;      Params:         0       0       0       0
  5971 ;;      Locals:         0       0       0       0
  5972 ;;      Temps:          0       0       0       0
  5973 ;;      Totals:         0       0       0       0
  5974 ;;Total ram usage:        0 bytes
  5975 ;; Hardware stack levels used: 1
  5976 ;; Hardware stack levels required when called: 7
  5977 ;; This function calls:
  5978 ;;		Nothing
  5979 ;; This function is called by:
  5980 ;;		_open
  5981 ;; This function uses a non-reentrant model
  5982 ;;
  5983                           
  5984  04C8                     _go_open:	
  5985                           ;psect for function _go_open
  5986                           
  5987                           
  5988                           ;incstack = 0
  5989                           ; Regs used in _go_open: [wreg]
  5990  04C8                     l2054:
  5991                           
  5992                           ;main.c: 199:     if (!ff.bits.OPENED && !ff.bits.OPENING && ff.bits.MOVING_ALLOWED) {
  5993  04C8  197A               	btfsc	_ff+1,2
  5994  04C9  2CCB               	goto	u1611
  5995  04CA  2CCC               	goto	u1610
  5996  04CB                     u1611:
  5997  04CB  2CE1               	goto	l331
  5998  04CC                     __ccov127_end_blk0:
  5999  04CC                     u1610:
  6000  04CC                     __ccov128_start_blk1:
  6001  04CC                     l2056:
  6002  04CC  0020               	movlb	0	; select bank0
  6003  04CD  1531               	bsf	__ccovbit1_44/(0+8),__ccovbit1_44& (0+7)	;volatile
  6004  04CE  18FA               	btfsc	_ff+1,1
  6005  04CF  2CD1               	goto	u1621
  6006  04D0  2CD2               	goto	u1620
  6007  04D1                     u1621:
  6008  04D1  2CE1               	goto	l331
  6009  04D2                     __ccov128_end_blk1:
  6010  04D2                     u1620:
  6011  04D2                     __ccov129_start_blk2:
  6012  04D2                     l2058:
  6013  04D2  14B1               	bsf	__ccovbit2_45/(0+8),__ccovbit2_45& (0+7)	;volatile
  6014  04D3  1DFB               	btfss	_ff+2,3
  6015  04D4  2CD6               	goto	u1631
  6016  04D5  2CD7               	goto	u1630
  6017  04D6                     u1631:
  6018  04D6  2CE1               	goto	l331
  6019  04D7                     __ccov129_end_blk2:
  6020  04D7                     u1630:
  6021  04D7                     __ccov130_start_blk3:
  6022  04D7                     l2060:
  6023                           
  6024                           ;main.c: 200:         ff.bits.OPENING = 1;
  6025  04D7  14FA               	bsf	_ff+1,1
  6026                           
  6027                           ;main.c: 201:         ff.bits.CLOSED = 0;
  6028  04D8  127A               	bcf	_ff+1,4
  6029                           
  6030                           ;main.c: 202:         ff.bits.CLOSING = 0;
  6031  04D9  11FA               	bcf	_ff+1,3
  6032                           
  6033                           ;main.c: 205:         ff.bits.RELE_CONTROL_ON = 0;
  6034  04DA  137A               	bcf	_ff+1,6
  6035                           
  6036                           ;main.c: 206:         ff.bits.RELE_POWER_ON = 1;
  6037  04DB  16FA               	bsf	_ff+1,5
  6038  04DC                     __ccov130_end_blk3:
  6039  04DC                     __ccov131_start_blk4:
  6040  04DC                     l2062:
  6041  04DC  1431               	bsf	__ccovbit4_46/(0+8),__ccovbit4_46& (0+7)	;volatile
  6042                           
  6043                           ;main.c: 208:         time_rele_power = RELE_POWER_WORK_DELAY;
  6044  04DD  3078               	movlw	120
  6045  04DE  00C5               	movwf	_time_rele_power
  6046  04DF  3000               	movlw	0
  6047  04E0  00C6               	movwf	_time_rele_power+1
  6048  04E1                     __ccov131_end_blk4:
  6049  04E1                     __ccov132_start_blk7:
  6050  04E1                     l331:
  6051  04E1  0020               	movlb	0	; select bank0
  6052  04E2  17B0               	bsf	__ccovbit7_47/(0+8),__ccovbit7_47& (0+7)	;volatile
  6053  04E3  0008               	return
  6054  04E4                     __end_of_go_open:
  6055  04E4                     
  6056                           	psect	text32
  6057  0462                     __ptext32:	
  6058 ;; *************** function _go_close_short *****************
  6059 ;; Defined at:
  6060 ;;		line 178 in file "main.c"
  6061 ;; Parameters:    Size  Location     Type
  6062 ;;		None
  6063 ;; Auto vars:     Size  Location     Type
  6064 ;;		None
  6065 ;; Return value:  Size  Location     Type
  6066 ;;                  1    wreg      void 
  6067 ;; Registers used:
  6068 ;;		wreg
  6069 ;; Tracked objects:
  6070 ;;		On entry : 0/0
  6071 ;;		On exit  : 0/0
  6072 ;;		Unchanged: 0/0
  6073 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6074 ;;      Params:         0       0       0       0
  6075 ;;      Locals:         0       0       0       0
  6076 ;;      Temps:          0       0       0       0
  6077 ;;      Totals:         0       0       0       0
  6078 ;;Total ram usage:        0 bytes
  6079 ;; Hardware stack levels used: 1
  6080 ;; Hardware stack levels required when called: 7
  6081 ;; This function calls:
  6082 ;;		Nothing
  6083 ;; This function is called by:
  6084 ;;		_autorotation_work
  6085 ;; This function uses a non-reentrant model
  6086 ;;
  6087                           
  6088  0462                     _go_close_short:	
  6089                           ;psect for function _go_close_short
  6090                           
  6091                           
  6092                           ;incstack = 0
  6093                           ; Regs used in _go_close_short: [wreg]
  6094  0462                     l2180:
  6095                           
  6096                           ;main.c: 180:     if (!ff.bits.CLOSING && !ff.bits.CLOSED && ff.bits.MOVING_ALLOWED) {
  6097  0462  19FA               	btfsc	_ff+1,3
  6098  0463  2C65               	goto	u1941
  6099  0464  2C66               	goto	u1940
  6100  0465                     u1941:
  6101  0465  2C83               	goto	l327
  6102  0466                     __ccov121_end_blk0:
  6103  0466                     u1940:
  6104  0466                     __ccov122_start_blk1:
  6105  0466                     l2182:
  6106  0466  0020               	movlb	0	; select bank0
  6107  0467  1731               	bsf	__ccovbit1_40/(0+8),__ccovbit1_40& (0+7)	;volatile
  6108  0468  1A7A               	btfsc	_ff+1,4
  6109  0469  2C6B               	goto	u1951
  6110  046A  2C6C               	goto	u1950
  6111  046B                     u1951:
  6112  046B  2C83               	goto	l327
  6113  046C                     __ccov122_end_blk1:
  6114  046C                     u1950:
  6115  046C                     __ccov123_start_blk2:
  6116  046C                     l2184:
  6117  046C  16B1               	bsf	__ccovbit2_41/(0+8),__ccovbit2_41& (0+7)	;volatile
  6118  046D  1DFB               	btfss	_ff+2,3
  6119  046E  2C70               	goto	u1961
  6120  046F  2C71               	goto	u1960
  6121  0470                     u1961:
  6122  0470  2C83               	goto	l327
  6123  0471                     __ccov123_end_blk2:
  6124  0471                     u1960:
  6125  0471                     __ccov124_start_blk3:
  6126  0471                     l2186:
  6127                           
  6128                           ;main.c: 181:         ff.bits.CLOSING = 1;
  6129  0471  15FA               	bsf	_ff+1,3
  6130                           
  6131                           ;main.c: 182:         ff.bits.OPENED = 0;
  6132  0472  117A               	bcf	_ff+1,2
  6133                           
  6134                           ;main.c: 183:         ff.bits.OPENING = 0;
  6135  0473  10FA               	bcf	_ff+1,1
  6136                           
  6137                           ;main.c: 185:         ff.bits.RELE_POWER_ON = 0;
  6138  0474  12FA               	bcf	_ff+1,5
  6139                           
  6140                           ;main.c: 186:         ff.bits.RELE_CONTROL_ON = 1;
  6141  0475  177A               	bsf	_ff+1,6
  6142  0476                     __ccov124_end_blk3:
  6143  0476                     __ccov125_start_blk4:
  6144  0476                     l2188:
  6145  0476  1631               	bsf	__ccovbit4_42/(0+8),__ccovbit4_42& (0+7)	;volatile
  6146                           
  6147                           ;main.c: 188:         time_rele_control = RELE_GAP + RELE_POWER_AUTOROTATION_DELAY + REL
      +                          E_GAP;
  6148  0477  301B               	movlw	27
  6149  0478  00C3               	movwf	_time_rele_control
  6150  0479  3000               	movlw	0
  6151  047A  00C4               	movwf	_time_rele_control+1
  6152                           
  6153                           ;main.c: 189:         time_rele_power = RELE_POWER_AUTOROTATION_DELAY;
  6154  047B  3019               	movlw	25
  6155  047C  00C5               	movwf	_time_rele_power
  6156  047D  3000               	movlw	0
  6157  047E  00C6               	movwf	_time_rele_power+1
  6158                           
  6159                           ;main.c: 190:         time_rele_gap = RELE_GAP;
  6160  047F  3001               	movlw	1
  6161  0480  00C1               	movwf	_time_rele_gap
  6162  0481  3000               	movlw	0
  6163  0482  00C2               	movwf	_time_rele_gap+1
  6164  0483                     __ccov125_end_blk4:
  6165  0483                     __ccov126_start_blk6:
  6166  0483                     l327:
  6167  0483  0020               	movlb	0	; select bank0
  6168  0484  15B1               	bsf	__ccovbit6_43/(0+8),__ccovbit6_43& (0+7)	;volatile
  6169  0485  0008               	return
  6170  0486                     __end_of_go_close_short:
  6171  0486                     
  6172                           	psect	intentry
  6173  0004                     __pintentry:	
  6174 ;; *************** function _INTERRUPT_InterruptManager *****************
  6175 ;; Defined at:
  6176 ;;		line 52 in file "mcc_generated_files/interrupt_manager.c"
  6177 ;; Parameters:    Size  Location     Type
  6178 ;;		None
  6179 ;; Auto vars:     Size  Location     Type
  6180 ;;		None
  6181 ;; Return value:  Size  Location     Type
  6182 ;;                  1    wreg      void 
  6183 ;; Registers used:
  6184 ;;		wreg, status,2, status,0, pclath, cstack
  6185 ;; Tracked objects:
  6186 ;;		On entry : 0/0
  6187 ;;		On exit  : 0/0
  6188 ;;		Unchanged: 0/0
  6189 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6190 ;;      Params:         0       0       0       0
  6191 ;;      Locals:         0       0       0       0
  6192 ;;      Temps:          0       0       0       0
  6193 ;;      Totals:         0       0       0       0
  6194 ;;Total ram usage:        0 bytes
  6195 ;; Hardware stack levels used: 1
  6196 ;; Hardware stack levels required when called: 6
  6197 ;; This function calls:
  6198 ;;		_TMR0_ISR
  6199 ;;		_TMR2_ISR
  6200 ;; This function is called by:
  6201 ;;		Interrupt level 1
  6202 ;; This function uses a non-reentrant model
  6203 ;;
  6204                           
  6205  0004                     _INTERRUPT_InterruptManager:
  6206                           
  6207                           ;incstack = 0
  6208  0004  147E               	bsf	int$flags,0	;set compiler interrupt flag (level 1)
  6209                           
  6210                           ; Regs used in _INTERRUPT_InterruptManager: [wreg+status,2+status,0+pclath+cstack]
  6211  0005  3180               	pagesel	$
  6212  0006                     i1l2488:
  6213                           
  6214                           ;mcc_generated_files/interrupt_manager.c: 55:     if(INTCONbits.TMR0IE == 1 && INTCONbit
      +                          s.TMR0IF == 1)
  6215  0006  1E8B               	btfss	11,5	;volatile
  6216  0007  2809               	goto	u252_21
  6217  0008  280A               	goto	u252_20
  6218  0009                     u252_21:
  6219  0009  2814               	goto	i1l110
  6220  000A                     u252_20:
  6221  000A                     __ccov39_end_blk0:
  6222  000A                     __ccov40_start_blk1:
  6223  000A                     i1l2490:
  6224  000A  1472               	bsf	__ccovbit1_7/(0+8),__ccovbit1_7& (0+7)	;volatile
  6225  000B  1D0B               	btfss	11,2	;volatile
  6226  000C  280E               	goto	u253_21
  6227  000D  280F               	goto	u253_20
  6228  000E                     u253_21:
  6229  000E  2814               	goto	i1l110
  6230  000F                     u253_20:
  6231  000F                     __ccov40_end_blk1:
  6232  000F                     __ccov41_start_blk2:
  6233  000F                     i1l2492:
  6234  000F  17F1               	bsf	__ccovbit2_8/(0+8),__ccovbit2_8& (0+7)	;volatile
  6235                           
  6236                           ;mcc_generated_files/interrupt_manager.c: 56:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 57:         TMR0_ISR();
  6237  0010  3186  261D  3180   	fcall	_TMR0_ISR
  6238                           
  6239                           ;mcc_generated_files/interrupt_manager.c: 58:     }
  6240  0013  282A               	goto	i1l116
  6241  0014                     __ccov41_end_blk2:
  6242  0014                     __ccov42_start_blk3:
  6243  0014                     i1l110:	
  6244                           ;mcc_generated_files/interrupt_manager.c: 59:     else if(INTCONbits.PEIE == 1)
  6245                           
  6246  0014  1771               	bsf	__ccovbit3_9/(0+8),__ccovbit3_9& (0+7)	;volatile
  6247  0015  1F0B               	btfss	11,6	;volatile
  6248  0016  2818               	goto	u254_21
  6249  0017  2819               	goto	u254_20
  6250  0018                     u254_21:
  6251  0018  282A               	goto	i1l116
  6252  0019                     u254_20:
  6253  0019                     __ccov42_end_blk3:
  6254  0019                     __ccov43_start_blk4:
  6255  0019                     i1l2494:
  6256                           
  6257                           ;mcc_generated_files/interrupt_manager.c: 60:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 61:         if(PIE1bits.TMR2IE == 1 && PIR1bits.TMR2IF == 1)
  6258  0019  0021               	movlb	1	; select bank1
  6259  001A  1C91               	btfss	17,1	;volatile
  6260  001B  281D               	goto	u255_21
  6261  001C  281E               	goto	u255_20
  6262  001D                     u255_21:
  6263  001D  2829               	goto	i1l115
  6264  001E                     u255_20:
  6265  001E                     __ccov43_end_blk4:
  6266  001E                     __ccov44_start_blk5:
  6267  001E                     i1l2496:
  6268  001E  16F1               	bsf	__ccovbit5_10/(0+8),__ccovbit5_10& (0+7)	;volatile
  6269  001F  0020               	movlb	0	; select bank0
  6270  0020  1C91               	btfss	17,1	;volatile
  6271  0021  2823               	goto	u256_21
  6272  0022  2824               	goto	u256_20
  6273  0023                     u256_21:
  6274  0023  2829               	goto	i1l115
  6275  0024                     u256_20:
  6276  0024                     __ccov44_end_blk5:
  6277  0024                     __ccov45_start_blk6:
  6278  0024                     i1l2498:
  6279  0024  1671               	bsf	__ccovbit6_11/(0+8),__ccovbit6_11& (0+7)	;volatile
  6280                           
  6281                           ;mcc_generated_files/interrupt_manager.c: 62:         {;mcc_generated_files/interrupt_ma
      +                          nager.c: 63:             TMR2_ISR();
  6282  0025  3186  262F  3180   	fcall	_TMR2_ISR
  6283                           
  6284                           ;mcc_generated_files/interrupt_manager.c: 64:         }
  6285  0028  282A               	goto	i1l116
  6286  0029                     __ccov45_end_blk6:
  6287  0029                     __ccov46_start_blk10:
  6288  0029                     i1l115:	
  6289                           ;mcc_generated_files/interrupt_manager.c: 71:     {;mcc_generated_files/interrupt_manage
      +                          r.c: 73:     }
  6290                           
  6291  0029  15F1               	bsf	__ccovbit10_12/(0+8),__ccovbit10_12& (0+7)	;volatile
  6292  002A                     __ccov46_end_blk10:
  6293  002A                     __ccov47_start_blk12:
  6294  002A                     i1l116:
  6295  002A  1571               	bsf	__ccovbit12_13/(0+8),__ccovbit12_13& (0+7)	;volatile
  6296  002B  107E               	bcf	int$flags,0	;clear compiler interrupt flag (level 1)
  6297  002C  0009               	retfie
  6298  002D                     __end_of_INTERRUPT_InterruptManager:
  6299  002D                     
  6300                           	psect	text34
  6301  062F                     __ptext34:	
  6302 ;; *************** function _TMR2_ISR *****************
  6303 ;; Defined at:
  6304 ;;		line 119 in file "mcc_generated_files/tmr2.c"
  6305 ;; Parameters:    Size  Location     Type
  6306 ;;		None
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;		None
  6309 ;; Return value:  Size  Location     Type
  6310 ;;                  1    wreg      void 
  6311 ;; Registers used:
  6312 ;;		wreg, status,2, status,0, pclath, cstack
  6313 ;; Tracked objects:
  6314 ;;		On entry : 0/0
  6315 ;;		On exit  : 0/0
  6316 ;;		Unchanged: 0/0
  6317 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6318 ;;      Params:         0       0       0       0
  6319 ;;      Locals:         0       0       0       0
  6320 ;;      Temps:          0       0       0       0
  6321 ;;      Totals:         0       0       0       0
  6322 ;;Total ram usage:        0 bytes
  6323 ;; Hardware stack levels used: 1
  6324 ;; Hardware stack levels required when called: 5
  6325 ;; This function calls:
  6326 ;;		Absolute function
  6327 ;;		_TMR2_DefaultInterruptHandler
  6328 ;;		_ms_tick
  6329 ;; This function is called by:
  6330 ;;		_INTERRUPT_InterruptManager
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334  062F                     _TMR2_ISR:	
  6335                           ;psect for function _TMR2_ISR
  6336                           
  6337                           
  6338                           ;incstack = 0
  6339                           ; Regs used in _TMR2_ISR: [wreg+status,2+status,0+pclath+cstack]
  6340  062F                     i1l2258:
  6341                           
  6342                           ;mcc_generated_files/tmr2.c: 123:     PIR1bits.TMR2IF = 0;
  6343  062F  0020               	movlb	0	; select bank0
  6344  0630  1091               	bcf	17,1	;volatile
  6345  0631                     __ccov65_end_blk0:
  6346  0631                     __ccov66_start_blk1:
  6347  0631                     i1l2260:
  6348                           
  6349                           ;mcc_generated_files/tmr2.c: 125:     if(TMR2_InterruptHandler)
  6350  0631  0855               	movf	_TMR2_InterruptHandler,w
  6351  0632  0456               	iorwf	_TMR2_InterruptHandler+1,w
  6352  0633  1903               	btfsc	3,2
  6353  0634  2E36               	goto	u211_21
  6354  0635  2E37               	goto	u211_20
  6355  0636                     u211_21:
  6356  0636  2E3D               	goto	i1l156
  6357  0637                     __ccov66_end_blk1:
  6358  0637                     u211_20:
  6359  0637                     __ccov67_start_blk2:
  6360  0637                     i1l2262:
  6361  0637  17F0               	bsf	__ccovbit2_16/(0+8),__ccovbit2_16& (0+7)	;volatile
  6362                           
  6363                           ;mcc_generated_files/tmr2.c: 126:     {;mcc_generated_files/tmr2.c: 127:         TMR2_In
      +                          terruptHandler();
  6364  0638  0856               	movf	_TMR2_InterruptHandler+1,w
  6365  0639  008A               	movwf	10
  6366  063A  0855               	movf	_TMR2_InterruptHandler,w
  6367  063B  000A               	callw
  6368  063C  3186               	pagesel	$
  6369  063D                     __ccov67_end_blk2:
  6370  063D                     __ccov68_start_blk4:
  6371  063D                     i1l156:
  6372  063D  1770               	bsf	__ccovbit4_17/(0+8),__ccovbit4_17& (0+7)	;volatile
  6373  063E  0008               	return
  6374  063F                     __end_of_TMR2_ISR:
  6375  063F                     
  6376                           	psect	text35
  6377  06C6                     __ptext35:	
  6378 ;; *************** function _TMR2_DefaultInterruptHandler *****************
  6379 ;; Defined at:
  6380 ;;		line 136 in file "mcc_generated_files/tmr2.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;		None
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;		None
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  1    wreg      void 
  6387 ;; Registers used:
  6388 ;;		None
  6389 ;; Tracked objects:
  6390 ;;		On entry : 0/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6394 ;;      Params:         0       0       0       0
  6395 ;;      Locals:         0       0       0       0
  6396 ;;      Temps:          0       0       0       0
  6397 ;;      Totals:         0       0       0       0
  6398 ;;Total ram usage:        0 bytes
  6399 ;; Hardware stack levels used: 1
  6400 ;; This function calls:
  6401 ;;		Nothing
  6402 ;; This function is called by:
  6403 ;;		_TMR2_Initialize
  6404 ;;		_TMR2_ISR
  6405 ;; This function uses a non-reentrant model
  6406 ;;
  6407                           
  6408  06C6                     _TMR2_DefaultInterruptHandler:	
  6409                           ;psect for function _TMR2_DefaultInterruptHandler
  6410                           
  6411                           
  6412                           ;incstack = 0
  6413                           ; Regs used in _TMR2_DefaultInterruptHandler: []
  6414  06C6                     i1l162:
  6415  06C6  1670               	bsf	__ccovbit0_19/(0+8),__ccovbit0_19& (0+7)	;volatile
  6416  06C7  0008               	return
  6417  06C8                     __end_of_TMR2_DefaultInterruptHandler:
  6418  06C8                     
  6419                           	psect	text36
  6420  02C6                     __ptext36:	
  6421 ;; *************** function _ms_tick *****************
  6422 ;; Defined at:
  6423 ;;		line 523 in file "main.c"
  6424 ;; Parameters:    Size  Location     Type
  6425 ;;		None
  6426 ;; Auto vars:     Size  Location     Type
  6427 ;;		None
  6428 ;; Return value:  Size  Location     Type
  6429 ;;                  1    wreg      void 
  6430 ;; Registers used:
  6431 ;;		wreg, status,2, status,0, pclath, cstack
  6432 ;; Tracked objects:
  6433 ;;		On entry : 0/0
  6434 ;;		On exit  : 0/0
  6435 ;;		Unchanged: 0/0
  6436 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6437 ;;      Params:         0       0       0       0
  6438 ;;      Locals:         0       0       0       0
  6439 ;;      Temps:          0       0       0       0
  6440 ;;      Totals:         0       0       0       0
  6441 ;;Total ram usage:        0 bytes
  6442 ;; Hardware stack levels used: 1
  6443 ;; Hardware stack levels required when called: 4
  6444 ;; This function calls:
  6445 ;;		_ms_100_work
  6446 ;;		_ms_200_work
  6447 ;;		_sec_work
  6448 ;;		_stop_tone
  6449 ;; This function is called by:
  6450 ;;		_start_setup
  6451 ;;		_TMR2_ISR
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455  02C6                     _ms_tick:	
  6456                           ;psect for function _ms_tick
  6457                           
  6458                           
  6459                           ;incstack = 0
  6460                           ; Regs used in _ms_tick: [wreg+status,2+status,0+pclath+cstack]
  6461  02C6                     i1l2212:
  6462                           
  6463                           ;main.c: 524:     static unsigned ms_count = 0;;main.c: 525:     static unsigned s_count
      +                           = 0;;main.c: 526:     ms_count++;
  6464  02C6  3001               	movlw	1
  6465  02C7  0020               	movlb	0	; select bank0
  6466  02C8  07B9               	addwf	ms_tick@ms_count,f
  6467  02C9  3000               	movlw	0
  6468  02CA  3DBA               	addwfc	ms_tick@ms_count+1,f
  6469  02CB                     __ccov280_end_blk0:
  6470  02CB                     __ccov281_start_blk1:
  6471  02CB                     i1l2214:
  6472                           
  6473                           ;main.c: 527:     if (time_tone > 0) {
  6474  02CB  083F               	movf	_time_tone,w
  6475  02CC  0440               	iorwf	_time_tone+1,w
  6476  02CD  1903               	btfsc	3,2
  6477  02CE  2AD0               	goto	u203_21
  6478  02CF  2AD1               	goto	u203_20
  6479  02D0                     u203_21:
  6480  02D0  2AE0               	goto	i1l2222
  6481  02D1                     __ccov281_end_blk1:
  6482  02D1                     u203_20:
  6483  02D1                     __ccov282_start_blk2:
  6484  02D1                     i1l2216:
  6485                           
  6486                           ;main.c: 528:         time_tone--;
  6487  02D1  3001               	movlw	1
  6488  02D2  02BF               	subwf	_time_tone,f
  6489  02D3  3000               	movlw	0
  6490  02D4  3BC0               	subwfb	_time_tone+1,f
  6491  02D5                     __ccov282_end_blk2:
  6492  02D5                     __ccov283_start_blk3:
  6493  02D5                     i1l2218:
  6494  02D5  16A4               	bsf	__ccovbit3_145/(0+8),__ccovbit3_145& (0+7)	;volatile
  6495                           
  6496                           ;main.c: 529:         if (time_tone == 0) {
  6497  02D6  083F               	movf	_time_tone,w
  6498  02D7  0440               	iorwf	_time_tone+1,w
  6499  02D8  1D03               	btfss	3,2
  6500  02D9  2ADB               	goto	u204_21
  6501  02DA  2ADC               	goto	u204_20
  6502  02DB                     u204_21:
  6503  02DB  2AE0               	goto	i1l2222
  6504  02DC                     __ccov283_end_blk3:
  6505  02DC                     u204_20:
  6506  02DC                     __ccov284_start_blk4:
  6507  02DC                     i1l2220:
  6508  02DC  1624               	bsf	__ccovbit4_146/(0+8),__ccovbit4_146& (0+7)	;volatile
  6509                           
  6510                           ;main.c: 530:             stop_tone();
  6511  02DD  3186  269A  3182   	fcall	_stop_tone
  6512  02E0                     __ccov284_end_blk4:
  6513  02E0                     __ccov285_start_blk7:
  6514  02E0                     i1l2222:
  6515                           
  6516                           ;main.c: 534:     ff.bits.ALLOW_FUN = 1;
  6517  02E0  16F9               	bsf	_ff,5
  6518  02E1                     __ccov285_end_blk7:
  6519  02E1                     __ccov286_start_blk8:
  6520  02E1                     i1l2224:
  6521                           
  6522                           ;main.c: 535:     ff.bits.ALLOW_JUMP = 1;
  6523  02E1  1779               	bsf	_ff,6
  6524  02E2                     __ccov286_end_blk8:
  6525  02E2                     __ccov287_start_blk9:
  6526  02E2                     i1l2226:
  6527                           
  6528                           ;main.c: 537:     if (ms_count == 100) {
  6529  02E2  3064               	movlw	100
  6530  02E3  0020               	movlb	0	; select bank0
  6531  02E4  0639               	xorwf	ms_tick@ms_count,w
  6532  02E5  043A               	iorwf	ms_tick@ms_count+1,w
  6533  02E6  1D03               	btfss	3,2
  6534  02E7  2AE9               	goto	u205_21
  6535  02E8  2AEA               	goto	u205_20
  6536  02E9                     u205_21:
  6537  02E9  2AF8               	goto	i1l2236
  6538  02EA                     __ccov287_end_blk9:
  6539  02EA                     u205_20:
  6540  02EA                     __ccov288_start_blk10:
  6541  02EA                     i1l2228:
  6542                           
  6543                           ;main.c: 538:         ms_100_work();
  6544  02EA  3186  264F  3182   	fcall	_ms_100_work
  6545  02ED                     __ccov288_end_blk10:
  6546  02ED                     __ccov289_start_blk11:
  6547  02ED                     i1l2230:
  6548                           
  6549                           ;main.c: 539:         ms_200_work();
  6550  02ED  3182  2283  3182   	fcall	_ms_200_work
  6551                           
  6552                           ;main.c: 540:         s_count++;
  6553  02F0  3001               	movlw	1
  6554  02F1  0020               	movlb	0	; select bank0
  6555  02F2  07B7               	addwf	ms_tick@s_count,f
  6556  02F3  3000               	movlw	0
  6557  02F4  3DB8               	addwfc	ms_tick@s_count+1,f
  6558  02F5                     __ccov289_end_blk11:
  6559  02F5                     __ccov290_start_blk12:
  6560  02F5                     i1l2232:
  6561  02F5  15A4               	bsf	__ccovbit12_147/(0+8),__ccovbit12_147& (0+7)	;volatile
  6562                           
  6563                           ;main.c: 541:         ms_count = 0;
  6564  02F6  01B9               	clrf	ms_tick@ms_count
  6565  02F7  01BA               	clrf	ms_tick@ms_count+1
  6566  02F8                     __ccov290_end_blk12:
  6567  02F8                     __ccov291_start_blk16:
  6568  02F8                     i1l2236:
  6569                           
  6570                           ;main.c: 549:     if (s_count == 10) {
  6571  02F8  300A               	movlw	10
  6572  02F9  0637               	xorwf	ms_tick@s_count,w
  6573  02FA  0438               	iorwf	ms_tick@s_count+1,w
  6574  02FB  1D03               	btfss	3,2
  6575  02FC  2AFE               	goto	u206_21
  6576  02FD  2AFF               	goto	u206_20
  6577  02FE                     u206_21:
  6578  02FE  2B06               	goto	i1l462
  6579  02FF                     __ccov291_end_blk16:
  6580  02FF                     u206_20:
  6581  02FF                     __ccov292_start_blk17:
  6582  02FF                     i1l2238:
  6583                           
  6584                           ;main.c: 550:         sec_work();
  6585  02FF  3180  204B  3182   	fcall	_sec_work
  6586  0302                     __ccov292_end_blk17:
  6587  0302                     __ccov293_start_blk18:
  6588  0302                     i1l2240:
  6589  0302  0020               	movlb	0	; select bank0
  6590  0303  1524               	bsf	__ccovbit18_148/(0+8),__ccovbit18_148& (0+7)	;volatile
  6591                           
  6592                           ;main.c: 551:         s_count = 0;
  6593  0304  01B7               	clrf	ms_tick@s_count
  6594  0305  01B8               	clrf	ms_tick@s_count+1
  6595  0306                     __ccov293_end_blk18:
  6596  0306                     __ccov294_start_blk20:
  6597  0306                     i1l462:
  6598  0306  14A4               	bsf	__ccovbit20_149/(0+8),__ccovbit20_149& (0+7)	;volatile
  6599  0307  0008               	return
  6600  0308                     __end_of_ms_tick:
  6601  0308                     
  6602                           	psect	text37
  6603  069A                     __ptext37:	
  6604 ;; *************** function _stop_tone *****************
  6605 ;; Defined at:
  6606 ;;		line 127 in file "main.c"
  6607 ;; Parameters:    Size  Location     Type
  6608 ;;		None
  6609 ;; Auto vars:     Size  Location     Type
  6610 ;;		None
  6611 ;; Return value:  Size  Location     Type
  6612 ;;                  1    wreg      void 
  6613 ;; Registers used:
  6614 ;;		None
  6615 ;; Tracked objects:
  6616 ;;		On entry : 0/0
  6617 ;;		On exit  : 0/0
  6618 ;;		Unchanged: 0/0
  6619 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6620 ;;      Params:         0       0       0       0
  6621 ;;      Locals:         0       0       0       0
  6622 ;;      Temps:          0       0       0       0
  6623 ;;      Totals:         0       0       0       0
  6624 ;;Total ram usage:        0 bytes
  6625 ;; Hardware stack levels used: 1
  6626 ;; This function calls:
  6627 ;;		Nothing
  6628 ;; This function is called by:
  6629 ;;		_ms_tick
  6630 ;; This function uses a non-reentrant model
  6631 ;;
  6632                           
  6633  069A                     _stop_tone:	
  6634                           ;psect for function _stop_tone
  6635                           
  6636                           
  6637                           ;incstack = 0
  6638                           ; Regs used in _stop_tone: []
  6639  069A                     i1l2042:
  6640                           
  6641                           ;main.c: 128:     ff.bits.ZUM_BUSY = 0;
  6642  069A  117B               	bcf	_ff+2,2
  6643                           
  6644                           ;main.c: 129:     ff.bits.TONE_ON = 0;
  6645  069B  13FA               	bcf	_ff+1,7
  6646                           
  6647                           ;main.c: 130:     ff.bits.TONE_OFF = 1;
  6648  069C  147B               	bsf	_ff+2,0
  6649  069D                     __ccov95_end_blk0:
  6650  069D                     __ccov96_start_blk1:
  6651  069D                     i1l304:
  6652  069D  0020               	movlb	0	; select bank0
  6653  069E  1633               	bsf	__ccovbit1_26/(0+8),__ccovbit1_26& (0+7)	;volatile
  6654  069F  0008               	return
  6655  06A0                     __end_of_stop_tone:
  6656  06A0                     
  6657                           	psect	text38
  6658  004B                     __ptext38:	
  6659 ;; *************** function _sec_work *****************
  6660 ;; Defined at:
  6661 ;;		line 441 in file "main.c"
  6662 ;; Parameters:    Size  Location     Type
  6663 ;;		None
  6664 ;; Auto vars:     Size  Location     Type
  6665 ;;		None
  6666 ;; Return value:  Size  Location     Type
  6667 ;;                  1    wreg      void 
  6668 ;; Registers used:
  6669 ;;		wreg, status,2, status,0, pclath, cstack
  6670 ;; Tracked objects:
  6671 ;;		On entry : 0/0
  6672 ;;		On exit  : 0/0
  6673 ;;		Unchanged: 0/0
  6674 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6675 ;;      Params:         0       0       0       0
  6676 ;;      Locals:         0       0       0       0
  6677 ;;      Temps:          1       0       0       0
  6678 ;;      Totals:         1       0       0       0
  6679 ;;Total ram usage:        1 bytes
  6680 ;; Hardware stack levels used: 1
  6681 ;; Hardware stack levels required when called: 1
  6682 ;; This function calls:
  6683 ;;		_minute_tick
  6684 ;;		_rele_tick
  6685 ;;		_sec_30_work
  6686 ;; This function is called by:
  6687 ;;		_ms_tick
  6688 ;; This function uses a non-reentrant model
  6689 ;;
  6690                           
  6691  004B                     _sec_work:	
  6692                           ;psect for function _sec_work
  6693                           
  6694                           
  6695                           ;incstack = 0
  6696                           ; Regs used in _sec_work: [wreg+status,2+status,0+pclath+cstack]
  6697  004B                     i1l2076:
  6698                           
  6699                           ;main.c: 449:     sec_count++;
  6700  004B  3001               	movlw	1
  6701  004C  00F4               	movwf	??_sec_work
  6702  004D  0874               	movf	??_sec_work,w
  6703  004E  0020               	movlb	0	; select bank0
  6704  004F  07D2               	addwf	_sec_count,f
  6705  0050                     __ccov240_end_blk0:
  6706  0050                     __ccov241_start_blk1:
  6707  0050                     i1l2078:
  6708                           
  6709                           ;main.c: 450:     if (!ff.bits.MOVING_ALLOWED) {
  6710  0050  19FB               	btfsc	_ff+2,3
  6711  0051  2853               	goto	u167_21
  6712  0052  2854               	goto	u167_20
  6713  0053                     u167_21:
  6714  0053  285F               	goto	i1l416
  6715  0054                     __ccov241_end_blk1:
  6716  0054                     u167_20:
  6717  0054                     __ccov242_start_blk2:
  6718  0054                     i1l2080:
  6719                           
  6720                           ;main.c: 451:         if (time_moving_wait > 0) {
  6721  0054  0850               	movf	_time_moving_wait,w
  6722  0055  1903               	btfsc	3,2
  6723  0056  2858               	goto	u168_21
  6724  0057  2859               	goto	u168_20
  6725  0058                     u168_21:
  6726  0058  285D               	goto	i1l417
  6727  0059                     __ccov242_end_blk2:
  6728  0059                     u168_20:
  6729  0059                     __ccov243_start_blk3:
  6730  0059                     i1l2082:
  6731  0059  1727               	bsf	__ccovbit3_120/(0+8),__ccovbit3_120& (0+7)	;volatile
  6732                           
  6733                           ;main.c: 452:             time_moving_wait--;
  6734  005A  3001               	movlw	1
  6735  005B  02D0               	subwf	_time_moving_wait,f
  6736                           
  6737                           ;main.c: 453:         } else {
  6738  005C  285F               	goto	i1l416
  6739  005D                     __ccov243_end_blk3:
  6740  005D                     __ccov244_start_blk4:
  6741  005D                     i1l417:
  6742  005D  16A7               	bsf	__ccovbit4_121/(0+8),__ccovbit4_121& (0+7)	;volatile
  6743                           
  6744                           ;main.c: 454:             ff.bits.MOVING_ALLOWED = 1;
  6745  005E  15FB               	bsf	_ff+2,3
  6746  005F                     __ccov244_end_blk4:
  6747  005F                     __ccov245_start_blk6:
  6748  005F                     i1l416:	
  6749                           ;main.c: 456:     }
  6750                           
  6751                           
  6752                           ;main.c: 457:     if (ff.bits.NORMAL_WORK_MODE_ON) {
  6753  005F  1E7B               	btfss	_ff+2,4
  6754  0060  2862               	goto	u169_21
  6755  0061  2863               	goto	u169_20
  6756  0062                     u169_21:
  6757  0062  2876               	goto	i1l2090
  6758  0063                     __ccov245_end_blk6:
  6759  0063                     u169_20:
  6760  0063                     __ccov246_start_blk7:
  6761  0063                     i1l2084:
  6762                           
  6763                           ;main.c: 458:         if (!ff.bits.CLOSED){
  6764  0063  1A7A               	btfsc	_ff+1,4
  6765  0064  2866               	goto	u170_21
  6766  0065  2867               	goto	u170_20
  6767  0066                     u170_21:
  6768  0066  2872               	goto	i1l2088
  6769  0067                     __ccov246_end_blk7:
  6770  0067                     u170_20:
  6771  0067                     __ccov247_start_blk8:
  6772  0067                     i1l2086:
  6773  0067  1627               	bsf	__ccovbit8_122/(0+8),__ccovbit8_122& (0+7)	;volatile
  6774                           
  6775                           ;main.c: 459:             time_rotation++;
  6776  0068  3001               	movlw	1
  6777  0069  07B4               	addwf	_time_rotation,f
  6778  006A  3000               	movlw	0
  6779  006B  1803               	skipnc
  6780  006C  3001               	movlw	1
  6781  006D  07B5               	addwf	_time_rotation+1,f
  6782  006E  3000               	movlw	0
  6783  006F  1803               	skipnc
  6784  0070  3001               	movlw	1
  6785  0071  07B6               	addwf	_time_rotation+2,f
  6786  0072                     __ccov247_end_blk8:
  6787  0072                     __ccov248_start_blk10:
  6788  0072                     i1l2088:
  6789  0072  15A7               	bsf	__ccovbit10_123/(0+8),__ccovbit10_123& (0+7)	;volatile
  6790                           
  6791                           ;main.c: 461:         rele_tick();
  6792  0073  3181  212F  3180   	fcall	_rele_tick
  6793  0076                     __ccov248_end_blk10:
  6794  0076                     __ccov249_start_blk12:
  6795  0076                     i1l2090:
  6796                           
  6797                           ;main.c: 464:     if (ff.bits.ALARM_ON) {
  6798  0076  1C79               	btfss	_ff,0
  6799  0077  2879               	goto	u171_21
  6800  0078  287A               	goto	u171_20
  6801  0079                     u171_21:
  6802  0079  289D               	goto	i1l421
  6803  007A                     __ccov249_end_blk12:
  6804  007A                     u171_20:
  6805  007A                     __ccov250_start_blk13:
  6806  007A                     i1l2092:
  6807                           
  6808                           ;main.c: 466:         if (sec_count == 30|| sec_count==60) {
  6809  007A  301E               	movlw	30
  6810  007B  0020               	movlb	0	; select bank0
  6811  007C  0652               	xorwf	_sec_count,w
  6812  007D  1903               	btfsc	3,2
  6813  007E  2880               	goto	u172_21
  6814  007F  2881               	goto	u172_20
  6815  0080                     u172_21:
  6816  0080  2888               	goto	i1l2096
  6817  0081                     __ccov250_end_blk13:
  6818  0081                     u172_20:
  6819  0081                     __ccov251_start_blk14:
  6820  0081                     i1l2094:
  6821  0081  1527               	bsf	__ccovbit14_124/(0+8),__ccovbit14_124& (0+7)	;volatile
  6822  0082  303C               	movlw	60
  6823  0083  0652               	xorwf	_sec_count,w
  6824  0084  1D03               	btfss	3,2
  6825  0085  2887               	goto	u173_21
  6826  0086  2888               	goto	u173_20
  6827  0087                     u173_21:
  6828  0087  288C               	goto	i1l2098
  6829  0088                     __ccov251_end_blk14:
  6830  0088                     u173_20:
  6831  0088                     __ccov252_start_blk16:
  6832  0088                     i1l2096:
  6833  0088  14A7               	bsf	__ccovbit16_125/(0+8),__ccovbit16_125& (0+7)	;volatile
  6834                           
  6835                           ;main.c: 467:             sec_30_work();
  6836  0089  3186  263F  3180   	fcall	_sec_30_work
  6837  008C                     __ccov252_end_blk16:
  6838  008C                     __ccov253_start_blk18:
  6839  008C                     i1l2098:
  6840  008C  0020               	movlb	0	; select bank0
  6841  008D  1427               	bsf	__ccovbit18_126/(0+8),__ccovbit18_126& (0+7)	;volatile
  6842                           
  6843                           ;main.c: 470:         ff.bits.LED_ON = !ff.bits.LED_ON;
  6844  008E  1003               	clrc
  6845  008F  1F7B               	btfss	_ff+2,6
  6846  0090  1403               	setc
  6847  0091  3000               	movlw	0
  6848  0092  3D09               	addwfc	9,w
  6849  0093  00F4               	movwf	??_sec_work
  6850  0094  0EF4               	swapf	??_sec_work,f
  6851  0095  0DF4               	rlf	??_sec_work,f
  6852  0096  0DF4               	rlf	??_sec_work,f
  6853  0097  087B               	movf	_ff+2,w
  6854  0098  0674               	xorwf	??_sec_work,w
  6855  0099  39BF               	andlw	-65
  6856  009A  0674               	xorwf	??_sec_work,w
  6857  009B  00FB               	movwf	_ff+2
  6858                           
  6859                           ;main.c: 472:     } else if (ff.bits.ALARM_OFF) {
  6860  009C  28BE               	goto	i1l2108
  6861  009D                     __ccov253_end_blk18:
  6862  009D                     __ccov254_start_blk19:
  6863  009D                     i1l421:
  6864  009D  0020               	movlb	0	; select bank0
  6865  009E  17A6               	bsf	__ccovbit19_127/(0+8),__ccovbit19_127& (0+7)	;volatile
  6866  009F  1CF9               	btfss	_ff,1
  6867  00A0  28A2               	goto	u174_21
  6868  00A1  28A3               	goto	u174_20
  6869  00A2                     u174_21:
  6870  00A2  28BE               	goto	i1l2108
  6871  00A3                     __ccov254_end_blk19:
  6872  00A3                     u174_20:
  6873  00A3                     __ccov255_start_blk20:
  6874  00A3                     i1l2100:
  6875                           
  6876                           ;main.c: 474:         static char iled;;main.c: 475:         iled++;
  6877  00A3  3001               	movlw	1
  6878  00A4  00F4               	movwf	??_sec_work
  6879  00A5  0874               	movf	??_sec_work,w
  6880  00A6  07CC               	addwf	sec_work@iled,f
  6881  00A7                     __ccov255_end_blk20:
  6882  00A7                     __ccov256_start_blk21:
  6883  00A7                     i1l2102:
  6884  00A7  1726               	bsf	__ccovbit21_128/(0+8),__ccovbit21_128& (0+7)	;volatile
  6885                           
  6886                           ;main.c: 476:         if (iled > 2) {
  6887  00A8  3003               	movlw	3
  6888  00A9  024C               	subwf	sec_work@iled,w
  6889  00AA  1C03               	skipc
  6890  00AB  28AD               	goto	u175_21
  6891  00AC  28AE               	goto	u175_20
  6892  00AD                     u175_21:
  6893  00AD  28BE               	goto	i1l2108
  6894  00AE                     __ccov256_end_blk21:
  6895  00AE                     u175_20:
  6896  00AE                     __ccov257_start_blk22:
  6897  00AE                     i1l2104:
  6898                           
  6899                           ;main.c: 477:             ff.bits.LED_ON = !ff.bits.LED_ON;
  6900  00AE  1003               	clrc
  6901  00AF  1F7B               	btfss	_ff+2,6
  6902  00B0  1403               	setc
  6903  00B1  3000               	movlw	0
  6904  00B2  3D09               	addwfc	9,w
  6905  00B3  00F4               	movwf	??_sec_work
  6906  00B4  0EF4               	swapf	??_sec_work,f
  6907  00B5  0DF4               	rlf	??_sec_work,f
  6908  00B6  0DF4               	rlf	??_sec_work,f
  6909  00B7  087B               	movf	_ff+2,w
  6910  00B8  0674               	xorwf	??_sec_work,w
  6911  00B9  39BF               	andlw	-65
  6912  00BA  0674               	xorwf	??_sec_work,w
  6913  00BB  00FB               	movwf	_ff+2
  6914  00BC                     __ccov257_end_blk22:
  6915  00BC                     __ccov258_start_blk23:
  6916  00BC                     i1l2106:
  6917  00BC  16A6               	bsf	__ccovbit23_129/(0+8),__ccovbit23_129& (0+7)	;volatile
  6918                           
  6919                           ;main.c: 478:             iled = 0;
  6920  00BD  01CC               	clrf	sec_work@iled
  6921  00BE                     __ccov258_end_blk23:
  6922  00BE                     __ccov259_start_blk27:
  6923  00BE                     i1l2108:
  6924                           
  6925                           ;main.c: 484:     if (sec_count == 60) {
  6926  00BE  303C               	movlw	60
  6927  00BF  0652               	xorwf	_sec_count,w
  6928  00C0  1D03               	btfss	3,2
  6929  00C1  28C3               	goto	u176_21
  6930  00C2  28C4               	goto	u176_20
  6931  00C3                     u176_21:
  6932  00C3  28CA               	goto	i1l431
  6933  00C4                     __ccov259_end_blk27:
  6934  00C4                     u176_20:
  6935  00C4                     __ccov260_start_blk28:
  6936  00C4                     i1l2110:
  6937                           
  6938                           ;main.c: 485:         minute_tick();
  6939  00C4  3185  2549  3180   	fcall	_minute_tick
  6940  00C7                     __ccov260_end_blk28:
  6941  00C7                     __ccov261_start_blk29:
  6942  00C7                     i1l2112:
  6943  00C7  0020               	movlb	0	; select bank0
  6944  00C8  1626               	bsf	__ccovbit29_130/(0+8),__ccovbit29_130& (0+7)	;volatile
  6945                           
  6946                           ;main.c: 486:         sec_count = 0;
  6947  00C9  01D2               	clrf	_sec_count
  6948  00CA                     __ccov261_end_blk29:
  6949  00CA                     __ccov262_start_blk31:
  6950  00CA                     i1l431:
  6951  00CA  15A6               	bsf	__ccovbit31_131/(0+8),__ccovbit31_131& (0+7)	;volatile
  6952  00CB  0008               	return
  6953  00CC                     __end_of_sec_work:
  6954  00CC                     
  6955                           	psect	text39
  6956  063F                     __ptext39:	
  6957 ;; *************** function _sec_30_work *****************
  6958 ;; Defined at:
  6959 ;;		line 433 in file "main.c"
  6960 ;; Parameters:    Size  Location     Type
  6961 ;;		None
  6962 ;; Auto vars:     Size  Location     Type
  6963 ;;		None
  6964 ;; Return value:  Size  Location     Type
  6965 ;;                  1    wreg      void 
  6966 ;; Registers used:
  6967 ;;		wreg
  6968 ;; Tracked objects:
  6969 ;;		On entry : 0/0
  6970 ;;		On exit  : 0/0
  6971 ;;		Unchanged: 0/0
  6972 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  6973 ;;      Params:         0       0       0       0
  6974 ;;      Locals:         0       0       0       0
  6975 ;;      Temps:          1       0       0       0
  6976 ;;      Totals:         1       0       0       0
  6977 ;;Total ram usage:        1 bytes
  6978 ;; Hardware stack levels used: 1
  6979 ;; This function calls:
  6980 ;;		Nothing
  6981 ;; This function is called by:
  6982 ;;		_sec_work
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986  063F                     _sec_30_work:	
  6987                           ;psect for function _sec_30_work
  6988                           
  6989                           
  6990                           ;incstack = 0
  6991                           ; Regs used in _sec_30_work: [wreg]
  6992  063F                     i1l1986:
  6993                           
  6994                           ;main.c: 434:     if (ff.bits.SIREN) {
  6995  063F  1CFB               	btfss	_ff+2,1
  6996  0640  2E42               	goto	u157_21
  6997  0641  2E43               	goto	u157_20
  6998  0642                     u157_21:
  6999  0642  2E47               	goto	i1l1990
  7000  0643                     __ccov236_end_blk0:
  7001  0643                     u157_20:
  7002  0643                     __ccov237_start_blk1:
  7003  0643                     i1l1988:
  7004  0643  0020               	movlb	0	; select bank0
  7005  0644  14A8               	bsf	__ccovbit1_117/(0+8),__ccovbit1_117& (0+7)	;volatile
  7006                           
  7007                           ;main.c: 435:         ff.bits.SIREN = 0;
  7008  0645  10FB               	bcf	_ff+2,1
  7009                           
  7010                           ;main.c: 436:     } else {
  7011  0646  2E4D               	goto	i1l413
  7012  0647                     __ccov237_end_blk1:
  7013  0647                     __ccov238_start_blk3:
  7014  0647                     i1l1990:
  7015  0647  0020               	movlb	0	; select bank0
  7016  0648  1428               	bsf	__ccovbit3_118/(0+8),__ccovbit3_118& (0+7)	;volatile
  7017                           
  7018                           ;main.c: 437:         beep_short_count = 3;
  7019  0649  3003               	movlw	3
  7020  064A  00F3               	movwf	??_sec_30_work
  7021  064B  0873               	movf	??_sec_30_work,w
  7022  064C  00FD               	movwf	_beep_short_count
  7023  064D                     __ccov238_end_blk3:
  7024  064D                     __ccov239_start_blk5:
  7025  064D                     i1l413:
  7026  064D  17A7               	bsf	__ccovbit5_119/(0+8),__ccovbit5_119& (0+7)	;volatile
  7027  064E  0008               	return
  7028  064F                     __end_of_sec_30_work:
  7029  064F                     
  7030                           	psect	text40
  7031  012F                     __ptext40:	
  7032 ;; *************** function _rele_tick *****************
  7033 ;; Defined at:
  7034 ;;		line 273 in file "main.c"
  7035 ;; Parameters:    Size  Location     Type
  7036 ;;		None
  7037 ;; Auto vars:     Size  Location     Type
  7038 ;;		None
  7039 ;; Return value:  Size  Location     Type
  7040 ;;                  1    wreg      void 
  7041 ;; Registers used:
  7042 ;;		wreg, status,2, status,0
  7043 ;; Tracked objects:
  7044 ;;		On entry : 0/0
  7045 ;;		On exit  : 0/0
  7046 ;;		Unchanged: 0/0
  7047 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7048 ;;      Params:         0       0       0       0
  7049 ;;      Locals:         0       0       0       0
  7050 ;;      Temps:          0       0       0       0
  7051 ;;      Totals:         0       0       0       0
  7052 ;;Total ram usage:        0 bytes
  7053 ;; Hardware stack levels used: 1
  7054 ;; This function calls:
  7055 ;;		Nothing
  7056 ;; This function is called by:
  7057 ;;		_sec_work
  7058 ;; This function uses a non-reentrant model
  7059 ;;
  7060                           
  7061  012F                     _rele_tick:	
  7062                           ;psect for function _rele_tick
  7063                           
  7064                           
  7065                           ;incstack = 0
  7066                           ; Regs used in _rele_tick: [wreg+status,2+status,0]
  7067  012F                     i1l1944:
  7068                           
  7069                           ;main.c: 275:     if (ff.bits.OPENING && ff.bits.CLOSING) {
  7070  012F  1CFA               	btfss	_ff+1,1
  7071  0130  2932               	goto	u145_21
  7072  0131  2933               	goto	u145_20
  7073  0132                     u145_21:
  7074  0132  293A               	goto	i1l367
  7075  0133                     __ccov161_end_blk0:
  7076  0133                     u145_20:
  7077  0133                     __ccov162_start_blk1:
  7078  0133                     i1l1946:
  7079  0133  0020               	movlb	0	; select bank0
  7080  0134  152E               	bsf	__ccovbit1_68/(0+8),__ccovbit1_68& (0+7)	;volatile
  7081  0135  1DFA               	btfss	_ff+1,3
  7082  0136  2938               	goto	u146_21
  7083  0137  2939               	goto	u146_20
  7084  0138                     u146_21:
  7085  0138  293A               	goto	i1l367
  7086  0139                     u146_20:
  7087  0139  298D               	goto	i1l368
  7088  013A                     __ccov162_end_blk1:
  7089  013A                     __ccov163_start_blk3:
  7090  013A                     i1l367:	
  7091                           ;main.c: 277:     }
  7092                           
  7093                           
  7094                           ;main.c: 280:     if (ff.bits.OPENING) {
  7095  013A  1CFA               	btfss	_ff+1,1
  7096  013B  293D               	goto	u147_21
  7097  013C  293E               	goto	u147_20
  7098  013D                     u147_21:
  7099  013D  2956               	goto	i1l369
  7100  013E                     __ccov163_end_blk3:
  7101  013E                     u147_20:
  7102  013E                     __ccov164_start_blk4:
  7103  013E                     i1l1950:
  7104  013E  0020               	movlb	0	; select bank0
  7105  013F  14AE               	bsf	__ccovbit4_69/(0+8),__ccovbit4_69& (0+7)	;volatile
  7106                           
  7107                           ;main.c: 281:         if (time_rele_power > 0) {
  7108  0140  0845               	movf	_time_rele_power,w
  7109  0141  0446               	iorwf	_time_rele_power+1,w
  7110  0142  1903               	btfsc	3,2
  7111  0143  2945               	goto	u148_21
  7112  0144  2946               	goto	u148_20
  7113  0145                     u148_21:
  7114  0145  2956               	goto	i1l369
  7115  0146                     __ccov164_end_blk4:
  7116  0146                     u148_20:
  7117  0146                     __ccov165_start_blk5:
  7118  0146                     i1l1952:
  7119                           
  7120                           ;main.c: 282:             time_rele_power--;
  7121  0146  3001               	movlw	1
  7122  0147  02C5               	subwf	_time_rele_power,f
  7123  0148  3000               	movlw	0
  7124  0149  3BC6               	subwfb	_time_rele_power+1,f
  7125  014A                     __ccov165_end_blk5:
  7126  014A                     __ccov166_start_blk6:
  7127  014A                     i1l1954:
  7128  014A  142E               	bsf	__ccovbit6_70/(0+8),__ccovbit6_70& (0+7)	;volatile
  7129                           
  7130                           ;main.c: 283:             if (time_rele_power == 0) {
  7131  014B  0845               	movf	_time_rele_power,w
  7132  014C  0446               	iorwf	_time_rele_power+1,w
  7133  014D  1D03               	btfss	3,2
  7134  014E  2950               	goto	u149_21
  7135  014F  2951               	goto	u149_20
  7136  0150                     u149_21:
  7137  0150  2956               	goto	i1l369
  7138  0151                     __ccov166_end_blk6:
  7139  0151                     u149_20:
  7140  0151                     __ccov167_start_blk7:
  7141  0151                     i1l1956:
  7142  0151  17AD               	bsf	__ccovbit7_71/(0+8),__ccovbit7_71& (0+7)	;volatile
  7143                           
  7144                           ;main.c: 284:                 ff.bits.RELE_POWER_ON = 0;
  7145  0152  12FA               	bcf	_ff+1,5
  7146                           
  7147                           ;main.c: 285:                 ff.bits.OPENED = 1;
  7148  0153  157A               	bsf	_ff+1,2
  7149                           
  7150                           ;main.c: 286:                 ff.bits.OPENING = 0;
  7151  0154  10FA               	bcf	_ff+1,1
  7152                           
  7153                           ;main.c: 287:                  ff.bits.AUTOROTATION_WORK = 0;
  7154  0155  107C               	bcf	_ff+3,0
  7155  0156                     __ccov167_end_blk7:
  7156  0156                     __ccov168_start_blk10:
  7157  0156                     i1l369:	
  7158                           ;main.c: 290:     }
  7159                           
  7160  0156  0020               	movlb	0	; select bank0
  7161  0157  172D               	bsf	__ccovbit10_72/(0+8),__ccovbit10_72& (0+7)	;volatile
  7162                           
  7163                           ;main.c: 293:     if (ff.bits.CLOSING) {
  7164  0158  1DFA               	btfss	_ff+1,3
  7165  0159  295B               	goto	u150_21
  7166  015A  295C               	goto	u150_20
  7167  015B                     u150_21:
  7168  015B  298D               	goto	i1l368
  7169  015C                     __ccov168_end_blk10:
  7170  015C                     u150_20:
  7171  015C                     __ccov169_start_blk11:
  7172  015C                     i1l1958:
  7173                           
  7174                           ;main.c: 295:         if (time_rele_gap == 0) {
  7175  015C  0841               	movf	_time_rele_gap,w
  7176  015D  0442               	iorwf	_time_rele_gap+1,w
  7177  015E  1D03               	btfss	3,2
  7178  015F  2961               	goto	u151_21
  7179  0160  2962               	goto	u151_20
  7180  0161                     u151_21:
  7181  0161  2972               	goto	i1l1966
  7182  0162                     __ccov169_end_blk11:
  7183  0162                     u151_20:
  7184  0162                     __ccov170_start_blk12:
  7185  0162                     i1l1960:
  7186                           
  7187                           ;main.c: 296:             if (time_rele_power > 0) {
  7188  0162  0845               	movf	_time_rele_power,w
  7189  0163  0446               	iorwf	_time_rele_power+1,w
  7190  0164  1903               	btfsc	3,2
  7191  0165  2967               	goto	u152_21
  7192  0166  2968               	goto	u152_20
  7193  0167                     u152_21:
  7194  0167  296F               	goto	i1l374
  7195  0168                     __ccov170_end_blk12:
  7196  0168                     u152_20:
  7197  0168                     __ccov171_start_blk13:
  7198  0168                     i1l1962:
  7199                           
  7200                           ;main.c: 297:                 ff.bits.RELE_POWER_ON = 1;
  7201  0168  16FA               	bsf	_ff+1,5
  7202  0169                     __ccov171_end_blk13:
  7203  0169                     __ccov172_start_blk14:
  7204  0169                     i1l1964:
  7205  0169  16AD               	bsf	__ccovbit14_73/(0+8),__ccovbit14_73& (0+7)	;volatile
  7206                           
  7207                           ;main.c: 298:                 time_rele_power--;
  7208  016A  3001               	movlw	1
  7209  016B  02C5               	subwf	_time_rele_power,f
  7210  016C  3000               	movlw	0
  7211  016D  3BC6               	subwfb	_time_rele_power+1,f
  7212                           
  7213                           ;main.c: 299:             } else {
  7214  016E  2977               	goto	i1l1968
  7215  016F                     __ccov172_end_blk14:
  7216  016F                     __ccov173_start_blk15:
  7217  016F                     i1l374:
  7218  016F  162D               	bsf	__ccovbit15_74/(0+8),__ccovbit15_74& (0+7)	;volatile
  7219                           
  7220                           ;main.c: 300:                 ff.bits.RELE_POWER_ON = 0;
  7221  0170  12FA               	bcf	_ff+1,5
  7222  0171  2977               	goto	i1l1968
  7223  0172                     __ccov173_end_blk15:
  7224  0172                     __ccov174_start_blk18:
  7225  0172                     i1l1966:
  7226  0172  15AD               	bsf	__ccovbit18_75/(0+8),__ccovbit18_75& (0+7)	;volatile
  7227                           
  7228                           ;main.c: 303:             time_rele_gap--;
  7229  0173  3001               	movlw	1
  7230  0174  02C1               	subwf	_time_rele_gap,f
  7231  0175  3000               	movlw	0
  7232  0176  3BC2               	subwfb	_time_rele_gap+1,f
  7233  0177                     __ccov174_end_blk18:
  7234  0177                     __ccov175_start_blk20:
  7235  0177                     i1l1968:
  7236  0177  152D               	bsf	__ccovbit20_76/(0+8),__ccovbit20_76& (0+7)	;volatile
  7237                           
  7238                           ;main.c: 306:         if (time_rele_control > 0) {
  7239  0178  0843               	movf	_time_rele_control,w
  7240  0179  0444               	iorwf	_time_rele_control+1,w
  7241  017A  1903               	btfsc	3,2
  7242  017B  297D               	goto	u153_21
  7243  017C  297E               	goto	u153_20
  7244  017D                     u153_21:
  7245  017D  298D               	goto	i1l368
  7246  017E                     __ccov175_end_blk20:
  7247  017E                     u153_20:
  7248  017E                     __ccov176_start_blk21:
  7249  017E                     i1l1970:
  7250                           
  7251                           ;main.c: 307:             time_rele_control--;
  7252  017E  3001               	movlw	1
  7253  017F  02C3               	subwf	_time_rele_control,f
  7254  0180  3000               	movlw	0
  7255  0181  3BC4               	subwfb	_time_rele_control+1,f
  7256  0182                     __ccov176_end_blk21:
  7257  0182                     __ccov177_start_blk22:
  7258  0182                     i1l1972:
  7259  0182  14AD               	bsf	__ccovbit22_77/(0+8),__ccovbit22_77& (0+7)	;volatile
  7260                           
  7261                           ;main.c: 308:             if (time_rele_control == 0) {
  7262  0183  0843               	movf	_time_rele_control,w
  7263  0184  0444               	iorwf	_time_rele_control+1,w
  7264  0185  1D03               	btfss	3,2
  7265  0186  2988               	goto	u154_21
  7266  0187  2989               	goto	u154_20
  7267  0188                     u154_21:
  7268  0188  298D               	goto	i1l368
  7269  0189                     __ccov177_end_blk22:
  7270  0189                     u154_20:
  7271  0189                     __ccov178_start_blk23:
  7272  0189                     i1l1974:
  7273  0189  142D               	bsf	__ccovbit23_78/(0+8),__ccovbit23_78& (0+7)	;volatile
  7274                           
  7275                           ;main.c: 309:                 ff.bits.RELE_CONTROL_ON = 0;
  7276  018A  137A               	bcf	_ff+1,6
  7277                           
  7278                           ;main.c: 310:                 ff.bits.CLOSED = 1;
  7279  018B  167A               	bsf	_ff+1,4
  7280                           
  7281                           ;main.c: 311:                 ff.bits.CLOSING = 0;
  7282  018C  11FA               	bcf	_ff+1,3
  7283  018D                     __ccov178_end_blk23:
  7284  018D                     __ccov179_start_blk27:
  7285  018D                     i1l368:
  7286  018D  17AC               	bsf	__ccovbit27_79/(0+8),__ccovbit27_79& (0+7)	;volatile
  7287  018E  0008               	return
  7288  018F                     __end_of_rele_tick:
  7289  018F                     
  7290                           	psect	text41
  7291  0549                     __ptext41:	
  7292 ;; *************** function _minute_tick *****************
  7293 ;; Defined at:
  7294 ;;		line 412 in file "main.c"
  7295 ;; Parameters:    Size  Location     Type
  7296 ;;		None
  7297 ;; Auto vars:     Size  Location     Type
  7298 ;;		None
  7299 ;; Return value:  Size  Location     Type
  7300 ;;                  1    wreg      void 
  7301 ;; Registers used:
  7302 ;;		wreg, status,2, status,0
  7303 ;; Tracked objects:
  7304 ;;		On entry : 0/0
  7305 ;;		On exit  : 0/0
  7306 ;;		Unchanged: 0/0
  7307 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7308 ;;      Params:         0       0       0       0
  7309 ;;      Locals:         0       0       0       0
  7310 ;;      Temps:          1       0       0       0
  7311 ;;      Totals:         1       0       0       0
  7312 ;;Total ram usage:        1 bytes
  7313 ;; Hardware stack levels used: 1
  7314 ;; This function calls:
  7315 ;;		Nothing
  7316 ;; This function is called by:
  7317 ;;		_sec_work
  7318 ;; This function uses a non-reentrant model
  7319 ;;
  7320                           
  7321  0549                     _minute_tick:	
  7322                           ;psect for function _minute_tick
  7323                           
  7324                           
  7325                           ;incstack = 0
  7326                           ; Regs used in _minute_tick: [wreg+status,2+status,0]
  7327  0549                     i1l1976:
  7328                           
  7329                           ;main.c: 416:     if (time_melody > 0) {
  7330  0549  0020               	movlb	0	; select bank0
  7331  054A  0851               	movf	_time_melody,w
  7332  054B  1903               	btfsc	3,2
  7333  054C  2D4E               	goto	u155_21
  7334  054D  2D4F               	goto	u155_20
  7335  054E                     u155_21:
  7336  054E  2D53               	goto	i1l1980
  7337  054F                     __ccov230_end_blk0:
  7338  054F                     u155_20:
  7339  054F                     __ccov231_start_blk1:
  7340  054F                     i1l1978:
  7341  054F  16A8               	bsf	__ccovbit1_113/(0+8),__ccovbit1_113& (0+7)	;volatile
  7342                           
  7343                           ;main.c: 417:        time_melody--;
  7344  0550  3001               	movlw	1
  7345  0551  02D1               	subwf	_time_melody,f
  7346                           
  7347                           ;main.c: 418:     } else {
  7348  0552  2D5F               	goto	i1l408
  7349  0553                     __ccov231_end_blk1:
  7350  0553                     __ccov232_start_blk3:
  7351  0553                     i1l1980:
  7352  0553  1628               	bsf	__ccovbit3_114/(0+8),__ccovbit3_114& (0+7)	;volatile
  7353                           
  7354                           ;main.c: 419:         if (time_melody == 0) {
  7355  0554  0851               	movf	_time_melody,w
  7356  0555  1D03               	btfss	3,2
  7357  0556  2D58               	goto	u156_21
  7358  0557  2D59               	goto	u156_20
  7359  0558                     u156_21:
  7360  0558  2D5F               	goto	i1l408
  7361  0559                     __ccov232_end_blk3:
  7362  0559                     u156_20:
  7363  0559                     __ccov233_start_blk4:
  7364  0559                     i1l1982:
  7365                           
  7366                           ;main.c: 420:             ff.bits.SIREN = 1;
  7367  0559  14FB               	bsf	_ff+2,1
  7368  055A                     __ccov233_end_blk4:
  7369  055A                     __ccov234_start_blk5:
  7370  055A                     i1l1984:
  7371  055A  15A8               	bsf	__ccovbit5_115/(0+8),__ccovbit5_115& (0+7)	;volatile
  7372                           
  7373                           ;main.c: 421:             time_melody = MELODY_REPEAT_DELAY;
  7374  055B  301E               	movlw	30
  7375  055C  00F3               	movwf	??_minute_tick
  7376  055D  0873               	movf	??_minute_tick,w
  7377  055E  00D1               	movwf	_time_melody
  7378  055F                     __ccov234_end_blk5:
  7379  055F                     __ccov235_start_blk8:
  7380  055F                     i1l408:
  7381  055F  1528               	bsf	__ccovbit8_116/(0+8),__ccovbit8_116& (0+7)	;volatile
  7382  0560  0008               	return
  7383  0561                     __end_of_minute_tick:
  7384  0561                     
  7385                           	psect	text42
  7386  0283                     __ptext42:	
  7387 ;; *************** function _ms_200_work *****************
  7388 ;; Defined at:
  7389 ;;		line 491 in file "main.c"
  7390 ;; Parameters:    Size  Location     Type
  7391 ;;		None
  7392 ;; Auto vars:     Size  Location     Type
  7393 ;;		None
  7394 ;; Return value:  Size  Location     Type
  7395 ;;                  1    wreg      void 
  7396 ;; Registers used:
  7397 ;;		wreg, status,2, status,0, pclath, cstack
  7398 ;; Tracked objects:
  7399 ;;		On entry : 0/0
  7400 ;;		On exit  : 0/0
  7401 ;;		Unchanged: 0/0
  7402 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7403 ;;      Params:         0       0       0       0
  7404 ;;      Locals:         0       0       0       0
  7405 ;;      Temps:          0       0       0       0
  7406 ;;      Totals:         0       0       0       0
  7407 ;;Total ram usage:        0 bytes
  7408 ;; Hardware stack levels used: 1
  7409 ;; Hardware stack levels required when called: 3
  7410 ;; This function calls:
  7411 ;;		_beep_double
  7412 ;;		_beep_long
  7413 ;;		_beep_short
  7414 ;; This function is called by:
  7415 ;;		_ms_tick
  7416 ;; This function uses a non-reentrant model
  7417 ;;
  7418                           
  7419  0283                     _ms_200_work:	
  7420                           ;psect for function _ms_200_work
  7421                           
  7422                           
  7423                           ;incstack = 0
  7424                           ; Regs used in _ms_200_work: [wreg+status,2+status,0+pclath+cstack]
  7425  0283                     i1l2114:
  7426                           
  7427                           ;main.c: 492:     if (ff.bits.ALARM_ON) {
  7428  0283  1C79               	btfss	_ff,0
  7429  0284  2A86               	goto	u177_21
  7430  0285  2A87               	goto	u177_20
  7431  0286                     u177_21:
  7432  0286  2A9D               	goto	i1l434
  7433  0287                     __ccov263_end_blk0:
  7434  0287                     u177_20:
  7435  0287                     __ccov264_start_blk1:
  7436  0287                     i1l2116:
  7437  0287  0020               	movlb	0	; select bank0
  7438  0288  1526               	bsf	__ccovbit1_132/(0+8),__ccovbit1_132& (0+7)	;volatile
  7439                           
  7440                           ;main.c: 493:         if (ff.bits.SIREN) {
  7441  0289  1CFB               	btfss	_ff+2,1
  7442  028A  2A8C               	goto	u178_21
  7443  028B  2A8D               	goto	u178_20
  7444  028C                     u178_21:
  7445  028C  2A92               	goto	i1l2120
  7446  028D                     __ccov264_end_blk1:
  7447  028D                     u178_20:
  7448  028D                     __ccov265_start_blk2:
  7449  028D                     i1l2118:
  7450  028D  14A6               	bsf	__ccovbit2_133/(0+8),__ccovbit2_133& (0+7)	;volatile
  7451                           
  7452                           ;main.c: 494:             beep_double();
  7453  028E  3186  260B  3182   	fcall	_beep_double
  7454                           
  7455                           ;main.c: 495:         } else {
  7456  0291  2AC3               	goto	i1l444
  7457  0292                     __ccov265_end_blk2:
  7458  0292                     __ccov266_start_blk4:
  7459  0292                     i1l2120:
  7460  0292  1426               	bsf	__ccovbit4_134/(0+8),__ccovbit4_134& (0+7)	;volatile
  7461                           
  7462                           ;main.c: 496:             if (beep_short_count > 0) {
  7463  0293  087D               	movf	_beep_short_count,w
  7464  0294  1903               	btfsc	3,2
  7465  0295  2A97               	goto	u179_21
  7466  0296  2A98               	goto	u179_20
  7467  0297                     u179_21:
  7468  0297  2AC3               	goto	i1l444
  7469  0298                     __ccov266_end_blk4:
  7470  0298                     u179_20:
  7471  0298                     __ccov267_start_blk5:
  7472  0298                     i1l2122:
  7473  0298  17A5               	bsf	__ccovbit5_135/(0+8),__ccovbit5_135& (0+7)	;volatile
  7474                           
  7475                           ;main.c: 497:                 beep_short();
  7476  0299  3184  24E4  3182   	fcall	_beep_short
  7477  029C  2AC3               	goto	i1l444
  7478  029D                     __ccov267_end_blk5:
  7479  029D                     __ccov268_start_blk8:
  7480  029D                     i1l434:
  7481  029D  0020               	movlb	0	; select bank0
  7482  029E  1725               	bsf	__ccovbit8_136/(0+8),__ccovbit8_136& (0+7)	;volatile
  7483  029F  1CF9               	btfss	_ff,1
  7484  02A0  2AA2               	goto	u180_21
  7485  02A1  2AA3               	goto	u180_20
  7486  02A2                     u180_21:
  7487  02A2  2AC3               	goto	i1l444
  7488  02A3                     __ccov268_end_blk8:
  7489  02A3                     u180_20:
  7490  02A3                     __ccov269_start_blk9:
  7491  02A3                     i1l2124:
  7492                           
  7493                           ;main.c: 503:         if ((beep_short_count > 0) && (beep_long_count > 0)) {
  7494  02A3  087D               	movf	_beep_short_count,w
  7495  02A4  1903               	btfsc	3,2
  7496  02A5  2AA7               	goto	u181_21
  7497  02A6  2AA8               	goto	u181_20
  7498  02A7                     u181_21:
  7499  02A7  2AAF               	goto	i1l2130
  7500  02A8                     __ccov269_end_blk9:
  7501  02A8                     u181_20:
  7502  02A8                     __ccov270_start_blk10:
  7503  02A8                     i1l2126:
  7504  02A8  16A5               	bsf	__ccovbit10_137/(0+8),__ccovbit10_137& (0+7)	;volatile
  7505  02A9  084E               	movf	_beep_long_count,w
  7506  02AA  1903               	btfsc	3,2
  7507  02AB  2AAD               	goto	u182_21
  7508  02AC  2AAE               	goto	u182_20
  7509  02AD                     u182_21:
  7510  02AD  2AAF               	goto	i1l2130
  7511  02AE                     u182_20:
  7512  02AE  2A8D               	goto	i1l2118
  7513  02AF                     __ccov270_end_blk10:
  7514  02AF                     __ccov271_start_blk13:
  7515  02AF                     i1l2130:
  7516                           
  7517                           ;main.c: 506:             if (beep_short_count > 0) {
  7518  02AF  087D               	movf	_beep_short_count,w
  7519  02B0  1903               	btfsc	3,2
  7520  02B1  2AB3               	goto	u183_21
  7521  02B2  2AB4               	goto	u183_20
  7522  02B3                     u183_21:
  7523  02B3  2AB8               	goto	i1l2134
  7524  02B4                     __ccov271_end_blk13:
  7525  02B4                     u183_20:
  7526  02B4                     __ccov272_start_blk14:
  7527  02B4                     i1l2132:
  7528  02B4  1625               	bsf	__ccovbit14_138/(0+8),__ccovbit14_138& (0+7)	;volatile
  7529                           
  7530                           ;main.c: 507:                 beep_short();
  7531  02B5  3184  24E4  3182   	fcall	_beep_short
  7532  02B8                     __ccov272_end_blk14:
  7533  02B8                     __ccov273_start_blk16:
  7534  02B8                     i1l2134:
  7535  02B8  0020               	movlb	0	; select bank0
  7536  02B9  15A5               	bsf	__ccovbit16_139/(0+8),__ccovbit16_139& (0+7)	;volatile
  7537                           
  7538                           ;main.c: 509:             if (beep_long_count > 0) {
  7539  02BA  084E               	movf	_beep_long_count,w
  7540  02BB  1903               	btfsc	3,2
  7541  02BC  2ABE               	goto	u184_21
  7542  02BD  2ABF               	goto	u184_20
  7543  02BE                     u184_21:
  7544  02BE  2AC3               	goto	i1l444
  7545  02BF                     __ccov273_end_blk16:
  7546  02BF                     u184_20:
  7547  02BF                     __ccov274_start_blk17:
  7548  02BF                     i1l2136:
  7549  02BF  1525               	bsf	__ccovbit17_140/(0+8),__ccovbit17_140& (0+7)	;volatile
  7550                           
  7551                           ;main.c: 510:                 beep_long();
  7552  02C0  3185  2530  3182   	fcall	_beep_long
  7553  02C3                     __ccov274_end_blk17:
  7554  02C3                     __ccov275_start_blk22:
  7555  02C3                     i1l444:
  7556  02C3  0020               	movlb	0	; select bank0
  7557  02C4  14A5               	bsf	__ccovbit22_141/(0+8),__ccovbit22_141& (0+7)	;volatile
  7558  02C5  0008               	return
  7559  02C6                     __end_of_ms_200_work:
  7560  02C6                     
  7561                           	psect	text43
  7562  060B                     __ptext43:	
  7563 ;; *************** function _beep_double *****************
  7564 ;; Defined at:
  7565 ;;		line 151 in file "main.c"
  7566 ;; Parameters:    Size  Location     Type
  7567 ;;		None
  7568 ;; Auto vars:     Size  Location     Type
  7569 ;;		None
  7570 ;; Return value:  Size  Location     Type
  7571 ;;                  1    wreg      void 
  7572 ;; Registers used:
  7573 ;;		wreg, status,2, status,0, pclath, cstack
  7574 ;; Tracked objects:
  7575 ;;		On entry : 0/0
  7576 ;;		On exit  : 0/0
  7577 ;;		Unchanged: 0/0
  7578 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7579 ;;      Params:         0       0       0       0
  7580 ;;      Locals:         0       0       0       0
  7581 ;;      Temps:          0       0       0       0
  7582 ;;      Totals:         0       0       0       0
  7583 ;;Total ram usage:        0 bytes
  7584 ;; Hardware stack levels used: 1
  7585 ;; Hardware stack levels required when called: 2
  7586 ;; This function calls:
  7587 ;;		_beep_long
  7588 ;;		_beep_short
  7589 ;; This function is called by:
  7590 ;;		_ms_200_work
  7591 ;; This function uses a non-reentrant model
  7592 ;;
  7593                           
  7594  060B                     _beep_double:	
  7595                           ;psect for function _beep_double
  7596                           
  7597                           
  7598                           ;incstack = 0
  7599                           ; Regs used in _beep_double: [wreg+status,2+status,0+pclath+cstack]
  7600  060B                     i1l1938:
  7601                           
  7602                           ;main.c: 152:     if (ff.bits.LAST_BEEP_LONG) {
  7603  060B  1D7C               	btfss	_ff+3,2
  7604  060C  2E0E               	goto	u144_21
  7605  060D  2E0F               	goto	u144_20
  7606  060E                     u144_21:
  7607  060E  2E15               	goto	i1l1942
  7608  060F                     __ccov111_end_blk0:
  7609  060F                     u144_20:
  7610  060F                     __ccov112_start_blk1:
  7611  060F                     i1l1940:
  7612  060F  0020               	movlb	0	; select bank0
  7613  0610  16B2               	bsf	__ccovbit1_33/(0+8),__ccovbit1_33& (0+7)	;volatile
  7614                           
  7615                           ;main.c: 153:         beep_short();
  7616  0611  3184  24E4  3186   	fcall	_beep_short
  7617                           
  7618                           ;main.c: 154:     } else {
  7619  0614  2E1A               	goto	i1l319
  7620  0615                     __ccov112_end_blk1:
  7621  0615                     __ccov113_start_blk3:
  7622  0615                     i1l1942:
  7623  0615  0020               	movlb	0	; select bank0
  7624  0616  1632               	bsf	__ccovbit3_34/(0+8),__ccovbit3_34& (0+7)	;volatile
  7625                           
  7626                           ;main.c: 155:         beep_long();
  7627  0617  3185  2530  3186   	fcall	_beep_long
  7628  061A                     __ccov113_end_blk3:
  7629  061A                     __ccov114_start_blk5:
  7630  061A                     i1l319:
  7631  061A  0020               	movlb	0	; select bank0
  7632  061B  15B2               	bsf	__ccovbit5_35/(0+8),__ccovbit5_35& (0+7)	;volatile
  7633  061C  0008               	return
  7634  061D                     __end_of_beep_double:
  7635  061D                     
  7636                           	psect	text44
  7637  04E4                     __ptext44:	
  7638 ;; *************** function _beep_short *****************
  7639 ;; Defined at:
  7640 ;;		line 133 in file "main.c"
  7641 ;; Parameters:    Size  Location     Type
  7642 ;;		None
  7643 ;; Auto vars:     Size  Location     Type
  7644 ;;		None
  7645 ;; Return value:  Size  Location     Type
  7646 ;;                  1    wreg      void 
  7647 ;; Registers used:
  7648 ;;		wreg, status,2, status,0, pclath, cstack
  7649 ;; Tracked objects:
  7650 ;;		On entry : 0/0
  7651 ;;		On exit  : 0/0
  7652 ;;		Unchanged: 0/0
  7653 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7654 ;;      Params:         0       0       0       0
  7655 ;;      Locals:         0       0       0       0
  7656 ;;      Temps:          0       0       0       0
  7657 ;;      Totals:         0       0       0       0
  7658 ;;Total ram usage:        0 bytes
  7659 ;; Hardware stack levels used: 1
  7660 ;; Hardware stack levels required when called: 1
  7661 ;; This function calls:
  7662 ;;		_start_tone
  7663 ;; This function is called by:
  7664 ;;		_beep_double
  7665 ;;		_ms_200_work
  7666 ;; This function uses a non-reentrant model
  7667 ;;
  7668                           
  7669  04E4                     _beep_short:	
  7670                           ;psect for function _beep_short
  7671                           
  7672                           
  7673                           ;incstack = 0
  7674                           ; Regs used in _beep_short: [wreg+status,2+status,0+pclath+cstack]
  7675  04E4                     i1l1910:
  7676                           
  7677                           ;main.c: 134:     if (!ff.bits.ZUM_BUSY) {
  7678  04E4  197B               	btfsc	_ff+2,2
  7679  04E5  2CE7               	goto	u140_21
  7680  04E6  2CE8               	goto	u140_20
  7681  04E7                     u140_21:
  7682  04E7  2CFB               	goto	i1l309
  7683  04E8                     __ccov97_end_blk0:
  7684  04E8                     u140_20:
  7685  04E8                     __ccov98_start_blk1:
  7686  04E8                     i1l1912:
  7687                           
  7688                           ;main.c: 135:         if (beep_short_count > 0) beep_short_count--;
  7689  04E8  087D               	movf	_beep_short_count,w
  7690  04E9  1903               	btfsc	3,2
  7691  04EA  2CEC               	goto	u141_21
  7692  04EB  2CED               	goto	u141_20
  7693  04EC                     u141_21:
  7694  04EC  2CF1               	goto	i1l1916
  7695  04ED                     __ccov98_end_blk1:
  7696  04ED                     u141_20:
  7697  04ED                     __ccov99_start_blk2:
  7698  04ED                     i1l1914:
  7699  04ED  0020               	movlb	0	; select bank0
  7700  04EE  15B3               	bsf	__ccovbit2_27/(0+8),__ccovbit2_27& (0+7)	;volatile
  7701  04EF  3001               	movlw	1
  7702  04F0  02FD               	subwf	_beep_short_count,f
  7703  04F1                     __ccov99_end_blk2:
  7704  04F1                     __ccov100_start_blk4:
  7705  04F1                     i1l1916:
  7706                           
  7707                           ;main.c: 136:         time_tone = SHORT_ZUMMER_DELAY;
  7708  04F1  301E               	movlw	30
  7709  04F2  0020               	movlb	0	; select bank0
  7710  04F3  00BF               	movwf	_time_tone
  7711  04F4  3000               	movlw	0
  7712  04F5  00C0               	movwf	_time_tone+1
  7713  04F6                     __ccov100_end_blk4:
  7714  04F6                     __ccov101_start_blk5:
  7715  04F6                     i1l1918:
  7716                           
  7717                           ;main.c: 137:         ff.bits.LAST_BEEP_LONG = 0;
  7718  04F6  117C               	bcf	_ff+3,2
  7719  04F7                     __ccov101_end_blk5:
  7720  04F7                     __ccov102_start_blk6:
  7721  04F7                     i1l1920:
  7722  04F7  1533               	bsf	__ccovbit6_28/(0+8),__ccovbit6_28& (0+7)	;volatile
  7723                           
  7724                           ;main.c: 138:         start_tone();
  7725  04F8  3186  26A0  3184   	fcall	_start_tone
  7726  04FB                     __ccov102_end_blk6:
  7727  04FB                     __ccov103_start_blk8:
  7728  04FB                     i1l309:
  7729  04FB  0020               	movlb	0	; select bank0
  7730  04FC  14B3               	bsf	__ccovbit8_29/(0+8),__ccovbit8_29& (0+7)	;volatile
  7731  04FD  0008               	return
  7732  04FE                     __end_of_beep_short:
  7733  04FE                     
  7734                           	psect	text45
  7735  0530                     __ptext45:	
  7736 ;; *************** function _beep_long *****************
  7737 ;; Defined at:
  7738 ;;		line 142 in file "main.c"
  7739 ;; Parameters:    Size  Location     Type
  7740 ;;		None
  7741 ;; Auto vars:     Size  Location     Type
  7742 ;;		None
  7743 ;; Return value:  Size  Location     Type
  7744 ;;                  1    wreg      void 
  7745 ;; Registers used:
  7746 ;;		wreg, status,2, status,0, pclath, cstack
  7747 ;; Tracked objects:
  7748 ;;		On entry : 0/0
  7749 ;;		On exit  : 0/0
  7750 ;;		Unchanged: 0/0
  7751 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7752 ;;      Params:         0       0       0       0
  7753 ;;      Locals:         0       0       0       0
  7754 ;;      Temps:          0       0       0       0
  7755 ;;      Totals:         0       0       0       0
  7756 ;;Total ram usage:        0 bytes
  7757 ;; Hardware stack levels used: 1
  7758 ;; Hardware stack levels required when called: 1
  7759 ;; This function calls:
  7760 ;;		_start_tone
  7761 ;; This function is called by:
  7762 ;;		_beep_double
  7763 ;;		_ms_200_work
  7764 ;; This function uses a non-reentrant model
  7765 ;;
  7766                           
  7767  0530                     _beep_long:	
  7768                           ;psect for function _beep_long
  7769                           
  7770                           
  7771                           ;incstack = 0
  7772                           ; Regs used in _beep_long: [wreg+status,2+status,0+pclath+cstack]
  7773  0530                     i1l1922:
  7774                           
  7775                           ;main.c: 143:     if (!ff.bits.ZUM_BUSY) {
  7776  0530  197B               	btfsc	_ff+2,2
  7777  0531  2D33               	goto	u142_21
  7778  0532  2D34               	goto	u142_20
  7779  0533                     u142_21:
  7780  0533  2D46               	goto	i1l314
  7781  0534                     __ccov104_end_blk0:
  7782  0534                     u142_20:
  7783  0534                     __ccov105_start_blk1:
  7784  0534                     i1l1924:
  7785                           
  7786                           ;main.c: 144:         if (beep_long_count > 0) beep_long_count--;
  7787  0534  0020               	movlb	0	; select bank0
  7788  0535  084E               	movf	_beep_long_count,w
  7789  0536  1903               	btfsc	3,2
  7790  0537  2D39               	goto	u143_21
  7791  0538  2D3A               	goto	u143_20
  7792  0539                     u143_21:
  7793  0539  2D3D               	goto	i1l1928
  7794  053A                     __ccov105_end_blk1:
  7795  053A                     u143_20:
  7796  053A                     __ccov106_start_blk2:
  7797  053A                     i1l1926:
  7798  053A  1433               	bsf	__ccovbit2_30/(0+8),__ccovbit2_30& (0+7)	;volatile
  7799  053B  3001               	movlw	1
  7800  053C  02CE               	subwf	_beep_long_count,f
  7801  053D                     __ccov106_end_blk2:
  7802  053D                     __ccov107_start_blk4:
  7803  053D                     i1l1928:
  7804                           
  7805                           ;main.c: 145:         time_tone = LONG_ZUMMER_DELAY;
  7806  053D  3082               	movlw	130
  7807  053E  00BF               	movwf	_time_tone
  7808  053F  3000               	movlw	0
  7809  0540  00C0               	movwf	_time_tone+1
  7810  0541                     __ccov107_end_blk4:
  7811  0541                     __ccov108_start_blk5:
  7812  0541                     i1l1930:
  7813                           
  7814                           ;main.c: 146:         ff.bits.LAST_BEEP_LONG = 1;
  7815  0541  157C               	bsf	_ff+3,2
  7816  0542                     __ccov108_end_blk5:
  7817  0542                     __ccov109_start_blk6:
  7818  0542                     i1l1932:
  7819  0542  17B2               	bsf	__ccovbit6_31/(0+8),__ccovbit6_31& (0+7)	;volatile
  7820                           
  7821                           ;main.c: 147:         start_tone();
  7822  0543  3186  26A0  3185   	fcall	_start_tone
  7823  0546                     __ccov109_end_blk6:
  7824  0546                     __ccov110_start_blk8:
  7825  0546                     i1l314:
  7826  0546  0020               	movlb	0	; select bank0
  7827  0547  1732               	bsf	__ccovbit8_32/(0+8),__ccovbit8_32& (0+7)	;volatile
  7828  0548  0008               	return
  7829  0549                     __end_of_beep_long:
  7830  0549                     
  7831                           	psect	text46
  7832  06A0                     __ptext46:	
  7833 ;; *************** function _start_tone *****************
  7834 ;; Defined at:
  7835 ;;		line 121 in file "main.c"
  7836 ;; Parameters:    Size  Location     Type
  7837 ;;		None
  7838 ;; Auto vars:     Size  Location     Type
  7839 ;;		None
  7840 ;; Return value:  Size  Location     Type
  7841 ;;                  1    wreg      void 
  7842 ;; Registers used:
  7843 ;;		None
  7844 ;; Tracked objects:
  7845 ;;		On entry : 0/0
  7846 ;;		On exit  : 0/0
  7847 ;;		Unchanged: 0/0
  7848 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7849 ;;      Params:         0       0       0       0
  7850 ;;      Locals:         0       0       0       0
  7851 ;;      Temps:          0       0       0       0
  7852 ;;      Totals:         0       0       0       0
  7853 ;;Total ram usage:        0 bytes
  7854 ;; Hardware stack levels used: 1
  7855 ;; This function calls:
  7856 ;;		Nothing
  7857 ;; This function is called by:
  7858 ;;		_beep_short
  7859 ;;		_beep_long
  7860 ;; This function uses a non-reentrant model
  7861 ;;
  7862                           
  7863  06A0                     _start_tone:	
  7864                           ;psect for function _start_tone
  7865                           
  7866                           
  7867                           ;incstack = 0
  7868                           ; Regs used in _start_tone: []
  7869  06A0                     i1l1908:
  7870                           
  7871                           ;main.c: 122:     ff.bits.ZUM_BUSY = 1;
  7872  06A0  157B               	bsf	_ff+2,2
  7873                           
  7874                           ;main.c: 123:     ff.bits.TONE_ON = 1;
  7875  06A1  17FA               	bsf	_ff+1,7
  7876                           
  7877                           ;main.c: 124:     ff.bits.TONE_OFF = 0;
  7878  06A2  107B               	bcf	_ff+2,0
  7879  06A3                     __ccov93_end_blk0:
  7880  06A3                     __ccov94_start_blk1:
  7881  06A3                     i1l301:
  7882  06A3  0020               	movlb	0	; select bank0
  7883  06A4  16B3               	bsf	__ccovbit1_25/(0+8),__ccovbit1_25& (0+7)	;volatile
  7884  06A5  0008               	return
  7885  06A6                     __end_of_start_tone:
  7886  06A6                     
  7887                           	psect	text47
  7888  064F                     __ptext47:	
  7889 ;; *************** function _ms_100_work *****************
  7890 ;; Defined at:
  7891 ;;		line 517 in file "main.c"
  7892 ;; Parameters:    Size  Location     Type
  7893 ;;		None
  7894 ;; Auto vars:     Size  Location     Type
  7895 ;;		None
  7896 ;; Return value:  Size  Location     Type
  7897 ;;                  1    wreg      void 
  7898 ;; Registers used:
  7899 ;;		None
  7900 ;; Tracked objects:
  7901 ;;		On entry : 0/0
  7902 ;;		On exit  : 0/0
  7903 ;;		Unchanged: 0/0
  7904 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7905 ;;      Params:         0       0       0       0
  7906 ;;      Locals:         0       0       0       0
  7907 ;;      Temps:          0       0       0       0
  7908 ;;      Totals:         0       0       0       0
  7909 ;;Total ram usage:        0 bytes
  7910 ;; Hardware stack levels used: 1
  7911 ;; This function calls:
  7912 ;;		Nothing
  7913 ;; This function is called by:
  7914 ;;		_ms_tick
  7915 ;; This function uses a non-reentrant model
  7916 ;;
  7917                           
  7918  064F                     _ms_100_work:	
  7919                           ;psect for function _ms_100_work
  7920                           
  7921                           
  7922                           ;incstack = 0
  7923                           ; Regs used in _ms_100_work: []
  7924  064F                     i1l2138:
  7925                           
  7926                           ;main.c: 518:     if (ff.bits.NORMAL_WORK_MODE_ON || ff.bits.UNIVERSAL_VORK_MODE_ON) {
  7927  064F  1A7B               	btfsc	_ff+2,4
  7928  0650  2E52               	goto	u185_21
  7929  0651  2E53               	goto	u185_20
  7930  0652                     u185_21:
  7931  0652  2E59               	goto	i1l449
  7932  0653                     __ccov276_end_blk0:
  7933  0653                     u185_20:
  7934  0653                     __ccov277_start_blk1:
  7935  0653                     i1l2140:
  7936  0653  0020               	movlb	0	; select bank0
  7937  0654  1425               	bsf	__ccovbit1_142/(0+8),__ccovbit1_142& (0+7)	;volatile
  7938  0655  1EFB               	btfss	_ff+2,5
  7939  0656  2E58               	goto	u186_21
  7940  0657  2E59               	goto	u186_20
  7941  0658                     u186_21:
  7942  0658  2E5C               	goto	i1l450
  7943  0659                     __ccov277_end_blk1:
  7944  0659                     u186_20:
  7945  0659                     __ccov278_start_blk2:
  7946  0659                     i1l449:
  7947  0659  0020               	movlb	0	; select bank0
  7948  065A  17A4               	bsf	__ccovbit2_143/(0+8),__ccovbit2_143& (0+7)	;volatile
  7949                           
  7950                           ;main.c: 519:         ff.bits.ALLOW_MEASURE = 1;
  7951  065B  1679               	bsf	_ff,4
  7952  065C                     __ccov278_end_blk2:
  7953  065C                     __ccov279_start_blk4:
  7954  065C                     i1l450:
  7955  065C  1724               	bsf	__ccovbit4_144/(0+8),__ccovbit4_144& (0+7)	;volatile
  7956  065D  0008               	return
  7957  065E                     __end_of_ms_100_work:
  7958  065E                     
  7959                           	psect	text48
  7960  061D                     __ptext48:	
  7961 ;; *************** function _TMR0_ISR *****************
  7962 ;; Defined at:
  7963 ;;		line 108 in file "mcc_generated_files/tmr0.c"
  7964 ;; Parameters:    Size  Location     Type
  7965 ;;		None
  7966 ;; Auto vars:     Size  Location     Type
  7967 ;;		None
  7968 ;; Return value:  Size  Location     Type
  7969 ;;                  1    wreg      void 
  7970 ;; Registers used:
  7971 ;;		wreg, status,2, status,0, pclath, cstack
  7972 ;; Tracked objects:
  7973 ;;		On entry : 0/0
  7974 ;;		On exit  : 0/0
  7975 ;;		Unchanged: 0/0
  7976 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  7977 ;;      Params:         0       0       0       0
  7978 ;;      Locals:         0       0       0       0
  7979 ;;      Temps:          0       0       0       0
  7980 ;;      Totals:         0       0       0       0
  7981 ;;Total ram usage:        0 bytes
  7982 ;; Hardware stack levels used: 1
  7983 ;; Hardware stack levels required when called: 1
  7984 ;; This function calls:
  7985 ;;		Absolute function
  7986 ;;		_TMR0_DefaultInterruptHandler
  7987 ;;		_zummer_switch
  7988 ;; This function is called by:
  7989 ;;		_INTERRUPT_InterruptManager
  7990 ;; This function uses a non-reentrant model
  7991 ;;
  7992                           
  7993  061D                     _TMR0_ISR:	
  7994                           ;psect for function _TMR0_ISR
  7995                           
  7996                           
  7997                           ;incstack = 0
  7998                           ; Regs used in _TMR0_ISR: [wreg+status,2+status,0+pclath+cstack]
  7999  061D                     i1l2250:
  8000                           
  8001                           ;mcc_generated_files/tmr0.c: 112:     INTCONbits.TMR0IF = 0;
  8002  061D  110B               	bcf	11,2	;volatile
  8003  061E                     __ccov85_end_blk0:
  8004  061E                     __ccov86_start_blk1:
  8005  061E                     i1l2252:
  8006                           
  8007                           ;mcc_generated_files/tmr0.c: 114:     TMR0 = timer0ReloadVal;
  8008  061E  0020               	movlb	0	; select bank0
  8009  061F  0857               	movf	_timer0ReloadVal,w	;volatile
  8010  0620  0095               	movwf	21	;volatile
  8011  0621                     __ccov86_end_blk1:
  8012  0621                     __ccov87_start_blk2:
  8013  0621                     i1l2254:
  8014                           
  8015                           ;mcc_generated_files/tmr0.c: 116:     if(TMR0_InterruptHandler)
  8016  0621  0853               	movf	_TMR0_InterruptHandler,w
  8017  0622  0454               	iorwf	_TMR0_InterruptHandler+1,w
  8018  0623  1903               	btfsc	3,2
  8019  0624  2E26               	goto	u210_21
  8020  0625  2E27               	goto	u210_20
  8021  0626                     u210_21:
  8022  0626  2E2D               	goto	i1l192
  8023  0627                     __ccov87_end_blk2:
  8024  0627                     u210_20:
  8025  0627                     __ccov88_start_blk3:
  8026  0627                     i1l2256:
  8027  0627  1570               	bsf	__ccovbit3_21/(0+8),__ccovbit3_21& (0+7)	;volatile
  8028                           
  8029                           ;mcc_generated_files/tmr0.c: 117:     {;mcc_generated_files/tmr0.c: 118:         TMR0_In
      +                          terruptHandler();
  8030  0628  0854               	movf	_TMR0_InterruptHandler+1,w
  8031  0629  008A               	movwf	10
  8032  062A  0853               	movf	_TMR0_InterruptHandler,w
  8033  062B  000A               	callw
  8034  062C  3186               	pagesel	$
  8035  062D                     __ccov88_end_blk3:
  8036  062D                     __ccov89_start_blk5:
  8037  062D                     i1l192:
  8038  062D  14F0               	bsf	__ccovbit5_22/(0+8),__ccovbit5_22& (0+7)	;volatile
  8039  062E  0008               	return
  8040  062F                     __end_of_TMR0_ISR:
  8041  062F                     
  8042                           	psect	text49
  8043  06B7                     __ptext49:	
  8044 ;; *************** function _TMR0_DefaultInterruptHandler *****************
  8045 ;; Defined at:
  8046 ;;		line 129 in file "mcc_generated_files/tmr0.c"
  8047 ;; Parameters:    Size  Location     Type
  8048 ;;		None
  8049 ;; Auto vars:     Size  Location     Type
  8050 ;;		None
  8051 ;; Return value:  Size  Location     Type
  8052 ;;                  1    wreg      void 
  8053 ;; Registers used:
  8054 ;;		None
  8055 ;; Tracked objects:
  8056 ;;		On entry : 0/0
  8057 ;;		On exit  : 0/0
  8058 ;;		Unchanged: 0/0
  8059 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8060 ;;      Params:         0       0       0       0
  8061 ;;      Locals:         0       0       0       0
  8062 ;;      Temps:          0       0       0       0
  8063 ;;      Totals:         0       0       0       0
  8064 ;;Total ram usage:        0 bytes
  8065 ;; Hardware stack levels used: 1
  8066 ;; This function calls:
  8067 ;;		Nothing
  8068 ;; This function is called by:
  8069 ;;		_TMR0_Initialize
  8070 ;;		_TMR0_ISR
  8071 ;; This function uses a non-reentrant model
  8072 ;;
  8073                           
  8074  06B7                     _TMR0_DefaultInterruptHandler:	
  8075                           ;psect for function _TMR0_DefaultInterruptHandler
  8076                           
  8077                           
  8078                           ;incstack = 0
  8079                           ; Regs used in _TMR0_DefaultInterruptHandler: []
  8080  06B7                     i1l198:
  8081  06B7  0020               	movlb	0	; select bank0
  8082  06B8  1733               	bsf	__ccovbit0_24/(0+8),__ccovbit0_24& (0+7)	;volatile
  8083  06B9  0008               	return
  8084  06BA                     __end_of_TMR0_DefaultInterruptHandler:
  8085  06BA                     
  8086                           	psect	text50
  8087  065E                     __ptext50:	
  8088 ;; *************** function _zummer_switch *****************
  8089 ;; Defined at:
  8090 ;;		line 584 in file "main.c"
  8091 ;; Parameters:    Size  Location     Type
  8092 ;;		None
  8093 ;; Auto vars:     Size  Location     Type
  8094 ;;		None
  8095 ;; Return value:  Size  Location     Type
  8096 ;;                  1    wreg      void 
  8097 ;; Registers used:
  8098 ;;		status,0
  8099 ;; Tracked objects:
  8100 ;;		On entry : 0/0
  8101 ;;		On exit  : 0/0
  8102 ;;		Unchanged: 0/0
  8103 ;; Data sizes:     COMMON   BANK0   BANK1   BANK2
  8104 ;;      Params:         0       0       0       0
  8105 ;;      Locals:         0       0       0       0
  8106 ;;      Temps:          0       0       0       0
  8107 ;;      Totals:         0       0       0       0
  8108 ;;Total ram usage:        0 bytes
  8109 ;; Hardware stack levels used: 1
  8110 ;; This function calls:
  8111 ;;		Nothing
  8112 ;; This function is called by:
  8113 ;;		_start_setup
  8114 ;;		_TMR0_ISR
  8115 ;; This function uses a non-reentrant model
  8116 ;;
  8117                           
  8118  065E                     _zummer_switch:	
  8119                           ;psect for function _zummer_switch
  8120                           
  8121  065E                     i1l476:	
  8122                           ;incstack = 0
  8123                           ; Regs used in _zummer_switch: [status,0]
  8124                           ;main.c: 589:     do { LATAbits.LATA5 = ~LATAbits.LATA5; } while(0);
  8125                           
  8126  065E                     i1l2248:
  8127  065E  1003               	clrc
  8128  065F  0022               	movlb	2	; select bank2
  8129  0660  1E8C               	btfss	12,5	;volatile
  8130  0661  1403               	setc
  8131  0662  1803               	btfsc	3,0
  8132  0663  2E65               	goto	u208_21
  8133  0664  2E68               	goto	u208_20
  8134  0665                     u208_21:
  8135  0665  0022               	movlb	2	; select bank2
  8136  0666  168C               	bsf	12,5	;volatile
  8137  0667  2E6A               	goto	u209_24
  8138  0668                     u208_20:
  8139  0668  0022               	movlb	2	; select bank2
  8140  0669  128C               	bcf	12,5	;volatile
  8141  066A                     __ccov306_end_blk1:
  8142  066A                     u209_24:
  8143  066A                     __ccov307_start_blk3:
  8144  066A                     i1l478:
  8145  066A  0020               	movlb	0	; select bank0
  8146  066B  15A3               	bsf	__ccovbit3_155/(0+8),__ccovbit3_155& (0+7)	;volatile
  8147  066C  0008               	return
  8148  066D                     __end_of_zummer_switch:
  8149  066D                     
  8150                           	psect	codecov_info_hdr
  8151  0000                     __pcodecov_info_hdr:	
  8152                           ;
  8153                           ; Code-coverage Info Header
  8154                           ;
  8155                           
  8156  0000  0010               	db	16	; SIZE
  8157  0001  00000001           	ddw	1	; VERSION
  8158  0005  0001               	db	1	; POINTSIZE
  8159  0006  0008               	db	8	; UNITSIZE
  8160  0007  0001               	db	1	; FLAGS=SET
  8161  0008  00000000           	ddw	0	; Reserved
  8162  000C  00000000           	ddw	0	; Reserved
  8163                           
  8164                           	psect	codecov_info
  8165  0000                     __pcodecov_info:	
  8166                           ;
  8167                           ; Code-coverage Info
  8168                           ;
  8169                           
  8170                           
  8171                           ; Function: SYSTEM_Initialize, coverage: 1,0
  8172  0000  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8173  0004  00000072           	ddw	__ccovbit1_1/(0+8)	; CC_ADDR
  8174  0008  00000001           	ddw	1	; NUM_POINTS
  8175  000C  00000006           	ddw	__ccovbit1_1& (0+7)	; OFFSET
  8176  0010  00000000           	ddw	0	; Reserved
  8177  0014  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8178  0018  00000002           	ddw	2	; NUM_RANGES
  8179  001C  000005E4           	ddw	__ccov2_start_blk1	; block 1 START_ADDR
  8180  0020  000005E6           	ddw	__end_of_SYSTEM_Initialize	; block 1 END_ADDR
  8181  0024  000005D2           	ddw	_SYSTEM_Initialize	; block 0 START_ADDR
  8182  0028  000005E4           	ddw	__ccov1_end_blk0	; block 0 END_ADDR
  8183                           
  8184                           ; Function: OSCILLATOR_Initialize, coverage: 3,2,1,0
  8185  002C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8186  0030  00000072           	ddw	__ccovbit3_2/(0+8)	; CC_ADDR
  8187  0034  00000001           	ddw	1	; NUM_POINTS
  8188  0038  00000005           	ddw	__ccovbit3_2& (0+7)	; OFFSET
  8189  003C  00000000           	ddw	0	; Reserved
  8190  0040  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8191  0044  00000004           	ddw	4	; NUM_RANGES
  8192  0048  0000067C           	ddw	__ccov6_start_blk3	; block 3 START_ADDR
  8193  004C  0000067E           	ddw	__end_of_OSCILLATOR_Initialize	; block 3 END_ADDR
  8194  0050  0000067A           	ddw	__ccov5_start_blk2	; block 2 START_ADDR
  8195  0054  0000067C           	ddw	__ccov5_end_blk2	; block 2 END_ADDR
  8196  0058  00000679           	ddw	__ccov4_start_blk1	; block 1 START_ADDR
  8197  005C  0000067A           	ddw	__ccov4_end_blk1	; block 1 END_ADDR
  8198  0060  00000676           	ddw	_OSCILLATOR_Initialize	; block 0 START_ADDR
  8199  0064  00000679           	ddw	__ccov3_end_blk0	; block 0 END_ADDR
  8200                           
  8201                           ; Function: WDT_Initialize, coverage: 1,0
  8202  0068  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8203  006C  00000072           	ddw	__ccovbit1_3/(0+8)	; CC_ADDR
  8204  0070  00000001           	ddw	1	; NUM_POINTS
  8205  0074  00000004           	ddw	__ccovbit1_3& (0+7)	; OFFSET
  8206  0078  00000000           	ddw	0	; Reserved
  8207  007C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8208  0080  00000002           	ddw	2	; NUM_RANGES
  8209  0084  000006A9           	ddw	__ccov8_start_blk1	; block 1 START_ADDR
  8210  0088  000006AB           	ddw	__end_of_WDT_Initialize	; block 1 END_ADDR
  8211  008C  000006A6           	ddw	_WDT_Initialize	; block 0 START_ADDR
  8212  0090  000006A9           	ddw	__ccov7_end_blk0	; block 0 END_ADDR
  8213                           
  8214                           ; Function: ADC_Initialize, coverage: 3,2,1,0
  8215  0094  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8216  0098  00000072           	ddw	__ccovbit3_4/(0+8)	; CC_ADDR
  8217  009C  00000001           	ddw	1	; NUM_POINTS
  8218  00A0  00000003           	ddw	__ccovbit3_4& (0+7)	; OFFSET
  8219  00A4  00000000           	ddw	0	; Reserved
  8220  00A8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8221  00AC  00000004           	ddw	4	; NUM_RANGES
  8222  00B0  00000674           	ddw	__ccov12_start_blk3	; block 3 START_ADDR
  8223  00B4  00000676           	ddw	__end_of_ADC_Initialize	; block 3 END_ADDR
  8224  00B8  00000671           	ddw	__ccov11_start_blk2	; block 2 START_ADDR
  8225  00BC  00000674           	ddw	__ccov11_end_blk2	; block 2 END_ADDR
  8226  00C0  00000670           	ddw	__ccov10_start_blk1	; block 1 START_ADDR
  8227  00C4  00000671           	ddw	__ccov10_end_blk1	; block 1 END_ADDR
  8228  00C8  0000066D           	ddw	_ADC_Initialize	; block 0 START_ADDR
  8229  00CC  00000670           	ddw	__ccov9_end_blk0	; block 0 END_ADDR
  8230                           
  8231                           ; Function: ADC_GetConversion, coverage: 9,7,5,3,2,1,0
  8232  00D0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8233  00D4  00000072           	ddw	__ccovbit9_5/(0+8)	; CC_ADDR
  8234  00D8  00000001           	ddw	1	; NUM_POINTS
  8235  00DC  00000002           	ddw	__ccovbit9_5& (0+7)	; OFFSET
  8236  00E0  00000000           	ddw	0	; Reserved
  8237  00E4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8238  00E8  00000007           	ddw	7	; NUM_RANGES
  8239  00EC  0000052E           	ddw	__ccov28_start_blk9	; block 9 START_ADDR
  8240  00F0  00000530           	ddw	__end_of_ADC_GetConversion	; block 9 END_ADDR
  8241  00F4  0000052D           	ddw	__ccov27_start_blk7	; block 7 START_ADDR
  8242  00F8  0000052E           	ddw	__ccov27_end_blk7	; block 7 END_ADDR
  8243  00FC  00000529           	ddw	__ccov26_start_blk5	; block 5 START_ADDR
  8244  0100  0000052D           	ddw	__ccov26_end_blk5	; block 5 END_ADDR
  8245  0104  00000527           	ddw	__ccov25_start_blk3	; block 3 START_ADDR
  8246  0108  00000529           	ddw	__ccov25_end_blk3	; block 3 END_ADDR
  8247  010C  00000523           	ddw	__ccov24_start_blk2	; block 2 START_ADDR
  8248  0110  00000527           	ddw	__ccov24_end_blk2	; block 2 END_ADDR
  8249  0114  00000522           	ddw	__ccov23_start_blk1	; block 1 START_ADDR
  8250  0118  00000523           	ddw	__ccov23_end_blk1	; block 1 END_ADDR
  8251  011C  00000517           	ddw	_ADC_GetConversion	; block 0 START_ADDR
  8252  0120  00000522           	ddw	__ccov22_end_blk0	; block 0 END_ADDR
  8253                           
  8254                           ; Function: PIN_MANAGER_Initialize, coverage: 6,5,4,3,2,1,0
  8255  0124  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8256  0128  00000072           	ddw	__ccovbit6_6/(0+8)	; CC_ADDR
  8257  012C  00000001           	ddw	1	; NUM_POINTS
  8258  0130  00000001           	ddw	__ccovbit6_6& (0+7)	; OFFSET
  8259  0134  00000000           	ddw	0	; Reserved
  8260  0138  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8261  013C  00000007           	ddw	7	; NUM_RANGES
  8262  0140  000005A4           	ddw	__ccov37_start_blk6	; block 6 START_ADDR
  8263  0144  000005A6           	ddw	__end_of_PIN_MANAGER_Initialize	; block 6 END_ADDR
  8264  0148  0000059F           	ddw	__ccov36_start_blk5	; block 5 START_ADDR
  8265  014C  000005A4           	ddw	__ccov36_end_blk5	; block 5 END_ADDR
  8266  0150  0000059A           	ddw	__ccov35_start_blk4	; block 4 START_ADDR
  8267  0154  0000059F           	ddw	__ccov35_end_blk4	; block 4 END_ADDR
  8268  0158  00000597           	ddw	__ccov34_start_blk3	; block 3 START_ADDR
  8269  015C  0000059A           	ddw	__ccov34_end_blk3	; block 3 END_ADDR
  8270  0160  00000595           	ddw	__ccov33_start_blk2	; block 2 START_ADDR
  8271  0164  00000597           	ddw	__ccov33_end_blk2	; block 2 END_ADDR
  8272  0168  00000592           	ddw	__ccov32_start_blk1	; block 1 START_ADDR
  8273  016C  00000595           	ddw	__ccov32_end_blk1	; block 1 END_ADDR
  8274  0170  0000058F           	ddw	_PIN_MANAGER_Initialize	; block 0 START_ADDR
  8275  0174  00000592           	ddw	__ccov31_end_blk0	; block 0 END_ADDR
  8276                           
  8277                           ; Function: INTERRUPT_InterruptManager, coverage: 1,0
  8278  0178  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8279  017C  00000072           	ddw	__ccovbit1_7/(0+8)	; CC_ADDR
  8280  0180  00000001           	ddw	1	; NUM_POINTS
  8281  0184  00000000           	ddw	__ccovbit1_7& (0+7)	; OFFSET
  8282  0188  00000000           	ddw	0	; Reserved
  8283  018C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8284  0190  00000002           	ddw	2	; NUM_RANGES
  8285  0194  0000000A           	ddw	__ccov40_start_blk1	; block 1 START_ADDR
  8286  0198  0000000F           	ddw	__ccov40_end_blk1	; block 1 END_ADDR
  8287  019C  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8288  01A0  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8289                           
  8290                           ; Function: INTERRUPT_InterruptManager, coverage: 2,1,0
  8291  01A4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8292  01A8  00000071           	ddw	__ccovbit2_8/(0+8)	; CC_ADDR
  8293  01AC  00000001           	ddw	1	; NUM_POINTS
  8294  01B0  00000007           	ddw	__ccovbit2_8& (0+7)	; OFFSET
  8295  01B4  00000000           	ddw	0	; Reserved
  8296  01B8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8297  01BC  00000003           	ddw	3	; NUM_RANGES
  8298  01C0  0000000F           	ddw	__ccov41_start_blk2	; block 2 START_ADDR
  8299  01C4  00000014           	ddw	__ccov41_end_blk2	; block 2 END_ADDR
  8300  01C8  0000000A           	ddw	__ccov40_start_blk1	; block 1 START_ADDR
  8301  01CC  0000000F           	ddw	__ccov40_end_blk1	; block 1 END_ADDR
  8302  01D0  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8303  01D4  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8304                           
  8305                           ; Function: INTERRUPT_InterruptManager, coverage: 3,0
  8306  01D8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8307  01DC  00000071           	ddw	__ccovbit3_9/(0+8)	; CC_ADDR
  8308  01E0  00000001           	ddw	1	; NUM_POINTS
  8309  01E4  00000006           	ddw	__ccovbit3_9& (0+7)	; OFFSET
  8310  01E8  00000000           	ddw	0	; Reserved
  8311  01EC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8312  01F0  00000002           	ddw	2	; NUM_RANGES
  8313  01F4  00000014           	ddw	__ccov42_start_blk3	; block 3 START_ADDR
  8314  01F8  00000019           	ddw	__ccov42_end_blk3	; block 3 END_ADDR
  8315  01FC  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8316  0200  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8317                           
  8318                           ; Function: INTERRUPT_InterruptManager, coverage: 5,4,3,0
  8319  0204  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8320  0208  00000071           	ddw	__ccovbit5_10/(0+8)	; CC_ADDR
  8321  020C  00000001           	ddw	1	; NUM_POINTS
  8322  0210  00000005           	ddw	__ccovbit5_10& (0+7)	; OFFSET
  8323  0214  00000000           	ddw	0	; Reserved
  8324  0218  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8325  021C  00000004           	ddw	4	; NUM_RANGES
  8326  0220  0000001E           	ddw	__ccov44_start_blk5	; block 5 START_ADDR
  8327  0224  00000024           	ddw	__ccov44_end_blk5	; block 5 END_ADDR
  8328  0228  00000019           	ddw	__ccov43_start_blk4	; block 4 START_ADDR
  8329  022C  0000001E           	ddw	__ccov43_end_blk4	; block 4 END_ADDR
  8330  0230  00000014           	ddw	__ccov42_start_blk3	; block 3 START_ADDR
  8331  0234  00000019           	ddw	__ccov42_end_blk3	; block 3 END_ADDR
  8332  0238  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8333  023C  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8334                           
  8335                           ; Function: INTERRUPT_InterruptManager, coverage: 6,5,4,3,0
  8336  0240  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8337  0244  00000071           	ddw	__ccovbit6_11/(0+8)	; CC_ADDR
  8338  0248  00000001           	ddw	1	; NUM_POINTS
  8339  024C  00000004           	ddw	__ccovbit6_11& (0+7)	; OFFSET
  8340  0250  00000000           	ddw	0	; Reserved
  8341  0254  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8342  0258  00000005           	ddw	5	; NUM_RANGES
  8343  025C  00000024           	ddw	__ccov45_start_blk6	; block 6 START_ADDR
  8344  0260  00000029           	ddw	__ccov45_end_blk6	; block 6 END_ADDR
  8345  0264  0000001E           	ddw	__ccov44_start_blk5	; block 5 START_ADDR
  8346  0268  00000024           	ddw	__ccov44_end_blk5	; block 5 END_ADDR
  8347  026C  00000019           	ddw	__ccov43_start_blk4	; block 4 START_ADDR
  8348  0270  0000001E           	ddw	__ccov43_end_blk4	; block 4 END_ADDR
  8349  0274  00000014           	ddw	__ccov42_start_blk3	; block 3 START_ADDR
  8350  0278  00000019           	ddw	__ccov42_end_blk3	; block 3 END_ADDR
  8351  027C  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8352  0280  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8353                           
  8354                           ; Function: INTERRUPT_InterruptManager, coverage: 10,4,3,0
  8355  0284  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8356  0288  00000071           	ddw	__ccovbit10_12/(0+8)	; CC_ADDR
  8357  028C  00000001           	ddw	1	; NUM_POINTS
  8358  0290  00000003           	ddw	__ccovbit10_12& (0+7)	; OFFSET
  8359  0294  00000000           	ddw	0	; Reserved
  8360  0298  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8361  029C  00000004           	ddw	4	; NUM_RANGES
  8362  02A0  00000029           	ddw	__ccov46_start_blk10	; block 10 START_ADDR
  8363  02A4  0000002A           	ddw	__ccov46_end_blk10	; block 10 END_ADDR
  8364  02A8  00000019           	ddw	__ccov43_start_blk4	; block 4 START_ADDR
  8365  02AC  0000001E           	ddw	__ccov43_end_blk4	; block 4 END_ADDR
  8366  02B0  00000014           	ddw	__ccov42_start_blk3	; block 3 START_ADDR
  8367  02B4  00000019           	ddw	__ccov42_end_blk3	; block 3 END_ADDR
  8368  02B8  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8369  02BC  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8370                           
  8371                           ; Function: INTERRUPT_InterruptManager, coverage: 12,0
  8372  02C0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8373  02C4  00000071           	ddw	__ccovbit12_13/(0+8)	; CC_ADDR
  8374  02C8  00000001           	ddw	1	; NUM_POINTS
  8375  02CC  00000002           	ddw	__ccovbit12_13& (0+7)	; OFFSET
  8376  02D0  00000000           	ddw	0	; Reserved
  8377  02D4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8378  02D8  00000002           	ddw	2	; NUM_RANGES
  8379  02DC  0000002A           	ddw	__ccov47_start_blk12	; block 12 START_ADDR
  8380  02E0  0000002D           	ddw	__end_of_INTERRUPT_InterruptManager	; block 12 END_ADDR
  8381  02E4  00000004           	ddw	_INTERRUPT_InterruptManager	; block 0 START_ADDR
  8382  02E8  0000000A           	ddw	__ccov39_end_blk0	; block 0 END_ADDR
  8383                           
  8384                           ; Function: TMR2_Initialize, coverage: 6,5,4,3,2,1,0
  8385  02EC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8386  02F0  00000071           	ddw	__ccovbit6_14/(0+8)	; CC_ADDR
  8387  02F4  00000001           	ddw	1	; NUM_POINTS
  8388  02F8  00000001           	ddw	__ccovbit6_14& (0+7)	; OFFSET
  8389  02FC  00000000           	ddw	0	; Reserved
  8390  0300  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8391  0304  00000007           	ddw	7	; NUM_RANGES
  8392  0308  000005F7           	ddw	__ccov54_start_blk6	; block 6 START_ADDR
  8393  030C  000005F9           	ddw	__end_of_TMR2_Initialize	; block 6 END_ADDR
  8394  0310  000005F4           	ddw	__ccov53_start_blk5	; block 5 START_ADDR
  8395  0314  000005F7           	ddw	__ccov53_end_blk5	; block 5 END_ADDR
  8396  0318  000005ED           	ddw	__ccov52_start_blk4	; block 4 START_ADDR
  8397  031C  000005F4           	ddw	__ccov52_end_blk4	; block 4 END_ADDR
  8398  0320  000005EB           	ddw	__ccov51_start_blk3	; block 3 START_ADDR
  8399  0324  000005ED           	ddw	__ccov51_end_blk3	; block 3 END_ADDR
  8400  0328  000005EA           	ddw	__ccov50_start_blk2	; block 2 START_ADDR
  8401  032C  000005EB           	ddw	__ccov50_end_blk2	; block 2 END_ADDR
  8402  0330  000005E9           	ddw	__ccov49_start_blk1	; block 1 START_ADDR
  8403  0334  000005EA           	ddw	__ccov49_end_blk1	; block 1 END_ADDR
  8404  0338  000005E6           	ddw	_TMR2_Initialize	; block 0 START_ADDR
  8405  033C  000005E9           	ddw	__ccov48_end_blk0	; block 0 END_ADDR
  8406                           
  8407                           ; Function: TMR2_StartTimer, coverage: 1,0
  8408  0340  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8409  0344  00000071           	ddw	__ccovbit1_15/(0+8)	; CC_ADDR
  8410  0348  00000001           	ddw	1	; NUM_POINTS
  8411  034C  00000000           	ddw	__ccovbit1_15& (0+7)	; OFFSET
  8412  0350  00000000           	ddw	0	; Reserved
  8413  0354  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8414  0358  00000002           	ddw	2	; NUM_RANGES
  8415  035C  000006B2           	ddw	__ccov56_start_blk1	; block 1 START_ADDR
  8416  0360  000006B4           	ddw	__end_of_TMR2_StartTimer	; block 1 END_ADDR
  8417  0364  000006B0           	ddw	_TMR2_StartTimer	; block 0 START_ADDR
  8418  0368  000006B2           	ddw	__ccov55_end_blk0	; block 0 END_ADDR
  8419                           
  8420                           ; Function: TMR2_ISR, coverage: 2,1,0
  8421  036C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8422  0370  00000070           	ddw	__ccovbit2_16/(0+8)	; CC_ADDR
  8423  0374  00000001           	ddw	1	; NUM_POINTS
  8424  0378  00000007           	ddw	__ccovbit2_16& (0+7)	; OFFSET
  8425  037C  00000000           	ddw	0	; Reserved
  8426  0380  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8427  0384  00000003           	ddw	3	; NUM_RANGES
  8428  0388  00000637           	ddw	__ccov67_start_blk2	; block 2 START_ADDR
  8429  038C  0000063D           	ddw	__ccov67_end_blk2	; block 2 END_ADDR
  8430  0390  00000631           	ddw	__ccov66_start_blk1	; block 1 START_ADDR
  8431  0394  00000637           	ddw	__ccov66_end_blk1	; block 1 END_ADDR
  8432  0398  0000062F           	ddw	_TMR2_ISR	; block 0 START_ADDR
  8433  039C  00000631           	ddw	__ccov65_end_blk0	; block 0 END_ADDR
  8434                           
  8435                           ; Function: TMR2_ISR, coverage: 4,1,0
  8436  03A0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8437  03A4  00000070           	ddw	__ccovbit4_17/(0+8)	; CC_ADDR
  8438  03A8  00000001           	ddw	1	; NUM_POINTS
  8439  03AC  00000006           	ddw	__ccovbit4_17& (0+7)	; OFFSET
  8440  03B0  00000000           	ddw	0	; Reserved
  8441  03B4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8442  03B8  00000003           	ddw	3	; NUM_RANGES
  8443  03BC  0000063D           	ddw	__ccov68_start_blk4	; block 4 START_ADDR
  8444  03C0  0000063F           	ddw	__end_of_TMR2_ISR	; block 4 END_ADDR
  8445  03C4  00000631           	ddw	__ccov66_start_blk1	; block 1 START_ADDR
  8446  03C8  00000637           	ddw	__ccov66_end_blk1	; block 1 END_ADDR
  8447  03CC  0000062F           	ddw	_TMR2_ISR	; block 0 START_ADDR
  8448  03D0  00000631           	ddw	__ccov65_end_blk0	; block 0 END_ADDR
  8449                           
  8450                           ; Function: TMR2_SetInterruptHandler, coverage: 1,0
  8451  03D4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8452  03D8  00000070           	ddw	__ccovbit1_18/(0+8)	; CC_ADDR
  8453  03DC  00000001           	ddw	1	; NUM_POINTS
  8454  03E0  00000005           	ddw	__ccovbit1_18& (0+7)	; OFFSET
  8455  03E4  00000000           	ddw	0	; Reserved
  8456  03E8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8457  03EC  00000002           	ddw	2	; NUM_RANGES
  8458  03F0  0000068B           	ddw	__ccov70_start_blk1	; block 1 START_ADDR
  8459  03F4  0000068D           	ddw	__end_of_TMR2_SetInterruptHandler	; block 1 END_ADDR
  8460  03F8  00000686           	ddw	_TMR2_SetInterruptHandler	; block 0 START_ADDR
  8461  03FC  0000068B           	ddw	__ccov69_end_blk0	; block 0 END_ADDR
  8462                           
  8463                           ; Function: TMR2_DefaultInterruptHandler, coverage: 0
  8464  0400  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8465  0404  00000070           	ddw	__ccovbit0_19/(0+8)	; CC_ADDR
  8466  0408  00000001           	ddw	1	; NUM_POINTS
  8467  040C  00000004           	ddw	__ccovbit0_19& (0+7)	; OFFSET
  8468  0410  00000000           	ddw	0	; Reserved
  8469  0414  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8470  0418  00000001           	ddw	1	; NUM_RANGES
  8471  041C  000006C6           	ddw	_TMR2_DefaultInterruptHandler	; block 0 START_ADDR
  8472  0420  000006C8           	ddw	__end_of_TMR2_DefaultInterruptHandler	; block 0 END_ADDR
  8473                           
  8474                           ; Function: TMR0_Initialize, coverage: 6,5,4,3,2,1,0
  8475  0424  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8476  0428  00000070           	ddw	__ccovbit6_20/(0+8)	; CC_ADDR
  8477  042C  00000001           	ddw	1	; NUM_POINTS
  8478  0430  00000003           	ddw	__ccovbit6_20& (0+7)	; OFFSET
  8479  0434  00000000           	ddw	0	; Reserved
  8480  0438  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8481  043C  00000007           	ddw	7	; NUM_RANGES
  8482  0440  0000058D           	ddw	__ccov78_start_blk6	; block 6 START_ADDR
  8483  0444  0000058F           	ddw	__end_of_TMR0_Initialize	; block 6 END_ADDR
  8484  0448  00000586           	ddw	__ccov77_start_blk5	; block 5 START_ADDR
  8485  044C  0000058D           	ddw	__ccov77_end_blk5	; block 5 END_ADDR
  8486  0450  00000585           	ddw	__ccov76_start_blk4	; block 4 START_ADDR
  8487  0454  00000586           	ddw	__ccov76_end_blk4	; block 4 END_ADDR
  8488  0458  00000584           	ddw	__ccov75_start_blk3	; block 3 START_ADDR
  8489  045C  00000585           	ddw	__ccov75_end_blk3	; block 3 END_ADDR
  8490  0460  00000580           	ddw	__ccov74_start_blk2	; block 2 START_ADDR
  8491  0464  00000584           	ddw	__ccov74_end_blk2	; block 2 END_ADDR
  8492  0468  0000057D           	ddw	__ccov73_start_blk1	; block 1 START_ADDR
  8493  046C  00000580           	ddw	__ccov73_end_blk1	; block 1 END_ADDR
  8494  0470  00000578           	ddw	_TMR0_Initialize	; block 0 START_ADDR
  8495  0474  0000057D           	ddw	__ccov72_end_blk0	; block 0 END_ADDR
  8496                           
  8497                           ; Function: TMR0_ISR, coverage: 3,2,1,0
  8498  0478  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8499  047C  00000070           	ddw	__ccovbit3_21/(0+8)	; CC_ADDR
  8500  0480  00000001           	ddw	1	; NUM_POINTS
  8501  0484  00000002           	ddw	__ccovbit3_21& (0+7)	; OFFSET
  8502  0488  00000000           	ddw	0	; Reserved
  8503  048C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8504  0490  00000004           	ddw	4	; NUM_RANGES
  8505  0494  00000627           	ddw	__ccov88_start_blk3	; block 3 START_ADDR
  8506  0498  0000062D           	ddw	__ccov88_end_blk3	; block 3 END_ADDR
  8507  049C  00000621           	ddw	__ccov87_start_blk2	; block 2 START_ADDR
  8508  04A0  00000627           	ddw	__ccov87_end_blk2	; block 2 END_ADDR
  8509  04A4  0000061E           	ddw	__ccov86_start_blk1	; block 1 START_ADDR
  8510  04A8  00000621           	ddw	__ccov86_end_blk1	; block 1 END_ADDR
  8511  04AC  0000061D           	ddw	_TMR0_ISR	; block 0 START_ADDR
  8512  04B0  0000061E           	ddw	__ccov85_end_blk0	; block 0 END_ADDR
  8513                           
  8514                           ; Function: TMR0_ISR, coverage: 5,2,1,0
  8515  04B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8516  04B8  00000070           	ddw	__ccovbit5_22/(0+8)	; CC_ADDR
  8517  04BC  00000001           	ddw	1	; NUM_POINTS
  8518  04C0  00000001           	ddw	__ccovbit5_22& (0+7)	; OFFSET
  8519  04C4  00000000           	ddw	0	; Reserved
  8520  04C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8521  04CC  00000004           	ddw	4	; NUM_RANGES
  8522  04D0  0000062D           	ddw	__ccov89_start_blk5	; block 5 START_ADDR
  8523  04D4  0000062F           	ddw	__end_of_TMR0_ISR	; block 5 END_ADDR
  8524  04D8  00000621           	ddw	__ccov87_start_blk2	; block 2 START_ADDR
  8525  04DC  00000627           	ddw	__ccov87_end_blk2	; block 2 END_ADDR
  8526  04E0  0000061E           	ddw	__ccov86_start_blk1	; block 1 START_ADDR
  8527  04E4  00000621           	ddw	__ccov86_end_blk1	; block 1 END_ADDR
  8528  04E8  0000061D           	ddw	_TMR0_ISR	; block 0 START_ADDR
  8529  04EC  0000061E           	ddw	__ccov85_end_blk0	; block 0 END_ADDR
  8530                           
  8531                           ; Function: TMR0_SetInterruptHandler, coverage: 1,0
  8532  04F0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8533  04F4  00000070           	ddw	__ccovbit1_23/(0+8)	; CC_ADDR
  8534  04F8  00000001           	ddw	1	; NUM_POINTS
  8535  04FC  00000000           	ddw	__ccovbit1_23& (0+7)	; OFFSET
  8536  0500  00000000           	ddw	0	; Reserved
  8537  0504  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8538  0508  00000002           	ddw	2	; NUM_RANGES
  8539  050C  00000692           	ddw	__ccov91_start_blk1	; block 1 START_ADDR
  8540  0510  00000694           	ddw	__end_of_TMR0_SetInterruptHandler	; block 1 END_ADDR
  8541  0514  0000068D           	ddw	_TMR0_SetInterruptHandler	; block 0 START_ADDR
  8542  0518  00000692           	ddw	__ccov90_end_blk0	; block 0 END_ADDR
  8543                           
  8544                           ; Function: TMR0_DefaultInterruptHandler, coverage: 0
  8545  051C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8546  0520  00000033           	ddw	__ccovbit0_24/(0+8)	; CC_ADDR
  8547  0524  00000001           	ddw	1	; NUM_POINTS
  8548  0528  00000006           	ddw	__ccovbit0_24& (0+7)	; OFFSET
  8549  052C  00000000           	ddw	0	; Reserved
  8550  0530  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8551  0534  00000001           	ddw	1	; NUM_RANGES
  8552  0538  000006B7           	ddw	_TMR0_DefaultInterruptHandler	; block 0 START_ADDR
  8553  053C  000006BA           	ddw	__end_of_TMR0_DefaultInterruptHandler	; block 0 END_ADDR
  8554                           
  8555                           ; Function: start_tone, coverage: 1,0
  8556  0540  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8557  0544  00000033           	ddw	__ccovbit1_25/(0+8)	; CC_ADDR
  8558  0548  00000001           	ddw	1	; NUM_POINTS
  8559  054C  00000005           	ddw	__ccovbit1_25& (0+7)	; OFFSET
  8560  0550  00000000           	ddw	0	; Reserved
  8561  0554  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8562  0558  00000002           	ddw	2	; NUM_RANGES
  8563  055C  000006A3           	ddw	__ccov94_start_blk1	; block 1 START_ADDR
  8564  0560  000006A6           	ddw	__end_of_start_tone	; block 1 END_ADDR
  8565  0564  000006A0           	ddw	_start_tone	; block 0 START_ADDR
  8566  0568  000006A3           	ddw	__ccov93_end_blk0	; block 0 END_ADDR
  8567                           
  8568                           ; Function: stop_tone, coverage: 1,0
  8569  056C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8570  0570  00000033           	ddw	__ccovbit1_26/(0+8)	; CC_ADDR
  8571  0574  00000001           	ddw	1	; NUM_POINTS
  8572  0578  00000004           	ddw	__ccovbit1_26& (0+7)	; OFFSET
  8573  057C  00000000           	ddw	0	; Reserved
  8574  0580  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8575  0584  00000002           	ddw	2	; NUM_RANGES
  8576  0588  0000069D           	ddw	__ccov96_start_blk1	; block 1 START_ADDR
  8577  058C  000006A0           	ddw	__end_of_stop_tone	; block 1 END_ADDR
  8578  0590  0000069A           	ddw	_stop_tone	; block 0 START_ADDR
  8579  0594  0000069D           	ddw	__ccov95_end_blk0	; block 0 END_ADDR
  8580                           
  8581                           ; Function: beep_short, coverage: 2,1,0
  8582  0598  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8583  059C  00000033           	ddw	__ccovbit2_27/(0+8)	; CC_ADDR
  8584  05A0  00000001           	ddw	1	; NUM_POINTS
  8585  05A4  00000003           	ddw	__ccovbit2_27& (0+7)	; OFFSET
  8586  05A8  00000000           	ddw	0	; Reserved
  8587  05AC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8588  05B0  00000003           	ddw	3	; NUM_RANGES
  8589  05B4  000004ED           	ddw	__ccov99_start_blk2	; block 2 START_ADDR
  8590  05B8  000004F1           	ddw	__ccov99_end_blk2	; block 2 END_ADDR
  8591  05BC  000004E8           	ddw	__ccov98_start_blk1	; block 1 START_ADDR
  8592  05C0  000004ED           	ddw	__ccov98_end_blk1	; block 1 END_ADDR
  8593  05C4  000004E4           	ddw	_beep_short	; block 0 START_ADDR
  8594  05C8  000004E8           	ddw	__ccov97_end_blk0	; block 0 END_ADDR
  8595                           
  8596                           ; Function: beep_short, coverage: 6,5,4,1,0
  8597  05CC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8598  05D0  00000033           	ddw	__ccovbit6_28/(0+8)	; CC_ADDR
  8599  05D4  00000001           	ddw	1	; NUM_POINTS
  8600  05D8  00000002           	ddw	__ccovbit6_28& (0+7)	; OFFSET
  8601  05DC  00000000           	ddw	0	; Reserved
  8602  05E0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8603  05E4  00000005           	ddw	5	; NUM_RANGES
  8604  05E8  000004F7           	ddw	__ccov102_start_blk6	; block 6 START_ADDR
  8605  05EC  000004FB           	ddw	__ccov102_end_blk6	; block 6 END_ADDR
  8606  05F0  000004F6           	ddw	__ccov101_start_blk5	; block 5 START_ADDR
  8607  05F4  000004F7           	ddw	__ccov101_end_blk5	; block 5 END_ADDR
  8608  05F8  000004F1           	ddw	__ccov100_start_blk4	; block 4 START_ADDR
  8609  05FC  000004F6           	ddw	__ccov100_end_blk4	; block 4 END_ADDR
  8610  0600  000004E8           	ddw	__ccov98_start_blk1	; block 1 START_ADDR
  8611  0604  000004ED           	ddw	__ccov98_end_blk1	; block 1 END_ADDR
  8612  0608  000004E4           	ddw	_beep_short	; block 0 START_ADDR
  8613  060C  000004E8           	ddw	__ccov97_end_blk0	; block 0 END_ADDR
  8614                           
  8615                           ; Function: beep_short, coverage: 8,0
  8616  0610  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8617  0614  00000033           	ddw	__ccovbit8_29/(0+8)	; CC_ADDR
  8618  0618  00000001           	ddw	1	; NUM_POINTS
  8619  061C  00000001           	ddw	__ccovbit8_29& (0+7)	; OFFSET
  8620  0620  00000000           	ddw	0	; Reserved
  8621  0624  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8622  0628  00000002           	ddw	2	; NUM_RANGES
  8623  062C  000004FB           	ddw	__ccov103_start_blk8	; block 8 START_ADDR
  8624  0630  000004FE           	ddw	__end_of_beep_short	; block 8 END_ADDR
  8625  0634  000004E4           	ddw	_beep_short	; block 0 START_ADDR
  8626  0638  000004E8           	ddw	__ccov97_end_blk0	; block 0 END_ADDR
  8627                           
  8628                           ; Function: beep_long, coverage: 2,1,0
  8629  063C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8630  0640  00000033           	ddw	__ccovbit2_30/(0+8)	; CC_ADDR
  8631  0644  00000001           	ddw	1	; NUM_POINTS
  8632  0648  00000000           	ddw	__ccovbit2_30& (0+7)	; OFFSET
  8633  064C  00000000           	ddw	0	; Reserved
  8634  0650  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8635  0654  00000003           	ddw	3	; NUM_RANGES
  8636  0658  0000053A           	ddw	__ccov106_start_blk2	; block 2 START_ADDR
  8637  065C  0000053D           	ddw	__ccov106_end_blk2	; block 2 END_ADDR
  8638  0660  00000534           	ddw	__ccov105_start_blk1	; block 1 START_ADDR
  8639  0664  0000053A           	ddw	__ccov105_end_blk1	; block 1 END_ADDR
  8640  0668  00000530           	ddw	_beep_long	; block 0 START_ADDR
  8641  066C  00000534           	ddw	__ccov104_end_blk0	; block 0 END_ADDR
  8642                           
  8643                           ; Function: beep_long, coverage: 6,5,4,1,0
  8644  0670  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8645  0674  00000032           	ddw	__ccovbit6_31/(0+8)	; CC_ADDR
  8646  0678  00000001           	ddw	1	; NUM_POINTS
  8647  067C  00000007           	ddw	__ccovbit6_31& (0+7)	; OFFSET
  8648  0680  00000000           	ddw	0	; Reserved
  8649  0684  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8650  0688  00000005           	ddw	5	; NUM_RANGES
  8651  068C  00000542           	ddw	__ccov109_start_blk6	; block 6 START_ADDR
  8652  0690  00000546           	ddw	__ccov109_end_blk6	; block 6 END_ADDR
  8653  0694  00000541           	ddw	__ccov108_start_blk5	; block 5 START_ADDR
  8654  0698  00000542           	ddw	__ccov108_end_blk5	; block 5 END_ADDR
  8655  069C  0000053D           	ddw	__ccov107_start_blk4	; block 4 START_ADDR
  8656  06A0  00000541           	ddw	__ccov107_end_blk4	; block 4 END_ADDR
  8657  06A4  00000534           	ddw	__ccov105_start_blk1	; block 1 START_ADDR
  8658  06A8  0000053A           	ddw	__ccov105_end_blk1	; block 1 END_ADDR
  8659  06AC  00000530           	ddw	_beep_long	; block 0 START_ADDR
  8660  06B0  00000534           	ddw	__ccov104_end_blk0	; block 0 END_ADDR
  8661                           
  8662                           ; Function: beep_long, coverage: 8,0
  8663  06B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8664  06B8  00000032           	ddw	__ccovbit8_32/(0+8)	; CC_ADDR
  8665  06BC  00000001           	ddw	1	; NUM_POINTS
  8666  06C0  00000006           	ddw	__ccovbit8_32& (0+7)	; OFFSET
  8667  06C4  00000000           	ddw	0	; Reserved
  8668  06C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8669  06CC  00000002           	ddw	2	; NUM_RANGES
  8670  06D0  00000546           	ddw	__ccov110_start_blk8	; block 8 START_ADDR
  8671  06D4  00000549           	ddw	__end_of_beep_long	; block 8 END_ADDR
  8672  06D8  00000530           	ddw	_beep_long	; block 0 START_ADDR
  8673  06DC  00000534           	ddw	__ccov104_end_blk0	; block 0 END_ADDR
  8674                           
  8675                           ; Function: beep_double, coverage: 1,0
  8676  06E0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8677  06E4  00000032           	ddw	__ccovbit1_33/(0+8)	; CC_ADDR
  8678  06E8  00000001           	ddw	1	; NUM_POINTS
  8679  06EC  00000005           	ddw	__ccovbit1_33& (0+7)	; OFFSET
  8680  06F0  00000000           	ddw	0	; Reserved
  8681  06F4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8682  06F8  00000002           	ddw	2	; NUM_RANGES
  8683  06FC  0000060F           	ddw	__ccov112_start_blk1	; block 1 START_ADDR
  8684  0700  00000615           	ddw	__ccov112_end_blk1	; block 1 END_ADDR
  8685  0704  0000060B           	ddw	_beep_double	; block 0 START_ADDR
  8686  0708  0000060F           	ddw	__ccov111_end_blk0	; block 0 END_ADDR
  8687                           
  8688                           ; Function: beep_double, coverage: 3,0
  8689  070C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8690  0710  00000032           	ddw	__ccovbit3_34/(0+8)	; CC_ADDR
  8691  0714  00000001           	ddw	1	; NUM_POINTS
  8692  0718  00000004           	ddw	__ccovbit3_34& (0+7)	; OFFSET
  8693  071C  00000000           	ddw	0	; Reserved
  8694  0720  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8695  0724  00000002           	ddw	2	; NUM_RANGES
  8696  0728  00000615           	ddw	__ccov113_start_blk3	; block 3 START_ADDR
  8697  072C  0000061A           	ddw	__ccov113_end_blk3	; block 3 END_ADDR
  8698  0730  0000060B           	ddw	_beep_double	; block 0 START_ADDR
  8699  0734  0000060F           	ddw	__ccov111_end_blk0	; block 0 END_ADDR
  8700                           
  8701                           ; Function: beep_double, coverage: 5,0
  8702  0738  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8703  073C  00000032           	ddw	__ccovbit5_35/(0+8)	; CC_ADDR
  8704  0740  00000001           	ddw	1	; NUM_POINTS
  8705  0744  00000003           	ddw	__ccovbit5_35& (0+7)	; OFFSET
  8706  0748  00000000           	ddw	0	; Reserved
  8707  074C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8708  0750  00000002           	ddw	2	; NUM_RANGES
  8709  0754  0000061A           	ddw	__ccov114_start_blk5	; block 5 START_ADDR
  8710  0758  0000061D           	ddw	__end_of_beep_double	; block 5 END_ADDR
  8711  075C  0000060B           	ddw	_beep_double	; block 0 START_ADDR
  8712  0760  0000060F           	ddw	__ccov111_end_blk0	; block 0 END_ADDR
  8713                           
  8714                           ; Function: go_close, coverage: 1,0
  8715  0764  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8716  0768  00000032           	ddw	__ccovbit1_36/(0+8)	; CC_ADDR
  8717  076C  00000001           	ddw	1	; NUM_POINTS
  8718  0770  00000002           	ddw	__ccovbit1_36& (0+7)	; OFFSET
  8719  0774  00000000           	ddw	0	; Reserved
  8720  0778  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8721  077C  00000002           	ddw	2	; NUM_RANGES
  8722  0780  000003EE           	ddw	__ccov116_start_blk1	; block 1 START_ADDR
  8723  0784  000003F4           	ddw	__ccov116_end_blk1	; block 1 END_ADDR
  8724  0788  000003EA           	ddw	_go_close	; block 0 START_ADDR
  8725  078C  000003EE           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  8726                           
  8727                           ; Function: go_close, coverage: 2,1,0
  8728  0790  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8729  0794  00000032           	ddw	__ccovbit2_37/(0+8)	; CC_ADDR
  8730  0798  00000001           	ddw	1	; NUM_POINTS
  8731  079C  00000001           	ddw	__ccovbit2_37& (0+7)	; OFFSET
  8732  07A0  00000000           	ddw	0	; Reserved
  8733  07A4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8734  07A8  00000003           	ddw	3	; NUM_RANGES
  8735  07AC  000003F4           	ddw	__ccov117_start_blk2	; block 2 START_ADDR
  8736  07B0  000003F9           	ddw	__ccov117_end_blk2	; block 2 END_ADDR
  8737  07B4  000003EE           	ddw	__ccov116_start_blk1	; block 1 START_ADDR
  8738  07B8  000003F4           	ddw	__ccov116_end_blk1	; block 1 END_ADDR
  8739  07BC  000003EA           	ddw	_go_close	; block 0 START_ADDR
  8740  07C0  000003EE           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  8741                           
  8742                           ; Function: go_close, coverage: 4,3,2,1,0
  8743  07C4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8744  07C8  00000032           	ddw	__ccovbit4_38/(0+8)	; CC_ADDR
  8745  07CC  00000001           	ddw	1	; NUM_POINTS
  8746  07D0  00000000           	ddw	__ccovbit4_38& (0+7)	; OFFSET
  8747  07D4  00000000           	ddw	0	; Reserved
  8748  07D8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8749  07DC  00000005           	ddw	5	; NUM_RANGES
  8750  07E0  000003FE           	ddw	__ccov119_start_blk4	; block 4 START_ADDR
  8751  07E4  00000411           	ddw	__ccov119_end_blk4	; block 4 END_ADDR
  8752  07E8  000003F9           	ddw	__ccov118_start_blk3	; block 3 START_ADDR
  8753  07EC  000003FE           	ddw	__ccov118_end_blk3	; block 3 END_ADDR
  8754  07F0  000003F4           	ddw	__ccov117_start_blk2	; block 2 START_ADDR
  8755  07F4  000003F9           	ddw	__ccov117_end_blk2	; block 2 END_ADDR
  8756  07F8  000003EE           	ddw	__ccov116_start_blk1	; block 1 START_ADDR
  8757  07FC  000003F4           	ddw	__ccov116_end_blk1	; block 1 END_ADDR
  8758  0800  000003EA           	ddw	_go_close	; block 0 START_ADDR
  8759  0804  000003EE           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  8760                           
  8761                           ; Function: go_close, coverage: 6,0
  8762  0808  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8763  080C  00000031           	ddw	__ccovbit6_39/(0+8)	; CC_ADDR
  8764  0810  00000001           	ddw	1	; NUM_POINTS
  8765  0814  00000007           	ddw	__ccovbit6_39& (0+7)	; OFFSET
  8766  0818  00000000           	ddw	0	; Reserved
  8767  081C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8768  0820  00000002           	ddw	2	; NUM_RANGES
  8769  0824  00000411           	ddw	__ccov120_start_blk6	; block 6 START_ADDR
  8770  0828  00000414           	ddw	__end_of_go_close	; block 6 END_ADDR
  8771  082C  000003EA           	ddw	_go_close	; block 0 START_ADDR
  8772  0830  000003EE           	ddw	__ccov115_end_blk0	; block 0 END_ADDR
  8773                           
  8774                           ; Function: go_close_short, coverage: 1,0
  8775  0834  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8776  0838  00000031           	ddw	__ccovbit1_40/(0+8)	; CC_ADDR
  8777  083C  00000001           	ddw	1	; NUM_POINTS
  8778  0840  00000006           	ddw	__ccovbit1_40& (0+7)	; OFFSET
  8779  0844  00000000           	ddw	0	; Reserved
  8780  0848  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8781  084C  00000002           	ddw	2	; NUM_RANGES
  8782  0850  00000466           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  8783  0854  0000046C           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  8784  0858  00000462           	ddw	_go_close_short	; block 0 START_ADDR
  8785  085C  00000466           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  8786                           
  8787                           ; Function: go_close_short, coverage: 2,1,0
  8788  0860  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8789  0864  00000031           	ddw	__ccovbit2_41/(0+8)	; CC_ADDR
  8790  0868  00000001           	ddw	1	; NUM_POINTS
  8791  086C  00000005           	ddw	__ccovbit2_41& (0+7)	; OFFSET
  8792  0870  00000000           	ddw	0	; Reserved
  8793  0874  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8794  0878  00000003           	ddw	3	; NUM_RANGES
  8795  087C  0000046C           	ddw	__ccov123_start_blk2	; block 2 START_ADDR
  8796  0880  00000471           	ddw	__ccov123_end_blk2	; block 2 END_ADDR
  8797  0884  00000466           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  8798  0888  0000046C           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  8799  088C  00000462           	ddw	_go_close_short	; block 0 START_ADDR
  8800  0890  00000466           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  8801                           
  8802                           ; Function: go_close_short, coverage: 4,3,2,1,0
  8803  0894  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8804  0898  00000031           	ddw	__ccovbit4_42/(0+8)	; CC_ADDR
  8805  089C  00000001           	ddw	1	; NUM_POINTS
  8806  08A0  00000004           	ddw	__ccovbit4_42& (0+7)	; OFFSET
  8807  08A4  00000000           	ddw	0	; Reserved
  8808  08A8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8809  08AC  00000005           	ddw	5	; NUM_RANGES
  8810  08B0  00000476           	ddw	__ccov125_start_blk4	; block 4 START_ADDR
  8811  08B4  00000483           	ddw	__ccov125_end_blk4	; block 4 END_ADDR
  8812  08B8  00000471           	ddw	__ccov124_start_blk3	; block 3 START_ADDR
  8813  08BC  00000476           	ddw	__ccov124_end_blk3	; block 3 END_ADDR
  8814  08C0  0000046C           	ddw	__ccov123_start_blk2	; block 2 START_ADDR
  8815  08C4  00000471           	ddw	__ccov123_end_blk2	; block 2 END_ADDR
  8816  08C8  00000466           	ddw	__ccov122_start_blk1	; block 1 START_ADDR
  8817  08CC  0000046C           	ddw	__ccov122_end_blk1	; block 1 END_ADDR
  8818  08D0  00000462           	ddw	_go_close_short	; block 0 START_ADDR
  8819  08D4  00000466           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  8820                           
  8821                           ; Function: go_close_short, coverage: 6,0
  8822  08D8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8823  08DC  00000031           	ddw	__ccovbit6_43/(0+8)	; CC_ADDR
  8824  08E0  00000001           	ddw	1	; NUM_POINTS
  8825  08E4  00000003           	ddw	__ccovbit6_43& (0+7)	; OFFSET
  8826  08E8  00000000           	ddw	0	; Reserved
  8827  08EC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8828  08F0  00000002           	ddw	2	; NUM_RANGES
  8829  08F4  00000483           	ddw	__ccov126_start_blk6	; block 6 START_ADDR
  8830  08F8  00000486           	ddw	__end_of_go_close_short	; block 6 END_ADDR
  8831  08FC  00000462           	ddw	_go_close_short	; block 0 START_ADDR
  8832  0900  00000466           	ddw	__ccov121_end_blk0	; block 0 END_ADDR
  8833                           
  8834                           ; Function: go_open, coverage: 1,0
  8835  0904  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8836  0908  00000031           	ddw	__ccovbit1_44/(0+8)	; CC_ADDR
  8837  090C  00000001           	ddw	1	; NUM_POINTS
  8838  0910  00000002           	ddw	__ccovbit1_44& (0+7)	; OFFSET
  8839  0914  00000000           	ddw	0	; Reserved
  8840  0918  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8841  091C  00000002           	ddw	2	; NUM_RANGES
  8842  0920  000004CC           	ddw	__ccov128_start_blk1	; block 1 START_ADDR
  8843  0924  000004D2           	ddw	__ccov128_end_blk1	; block 1 END_ADDR
  8844  0928  000004C8           	ddw	_go_open	; block 0 START_ADDR
  8845  092C  000004CC           	ddw	__ccov127_end_blk0	; block 0 END_ADDR
  8846                           
  8847                           ; Function: go_open, coverage: 2,1,0
  8848  0930  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8849  0934  00000031           	ddw	__ccovbit2_45/(0+8)	; CC_ADDR
  8850  0938  00000001           	ddw	1	; NUM_POINTS
  8851  093C  00000001           	ddw	__ccovbit2_45& (0+7)	; OFFSET
  8852  0940  00000000           	ddw	0	; Reserved
  8853  0944  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8854  0948  00000003           	ddw	3	; NUM_RANGES
  8855  094C  000004D2           	ddw	__ccov129_start_blk2	; block 2 START_ADDR
  8856  0950  000004D7           	ddw	__ccov129_end_blk2	; block 2 END_ADDR
  8857  0954  000004CC           	ddw	__ccov128_start_blk1	; block 1 START_ADDR
  8858  0958  000004D2           	ddw	__ccov128_end_blk1	; block 1 END_ADDR
  8859  095C  000004C8           	ddw	_go_open	; block 0 START_ADDR
  8860  0960  000004CC           	ddw	__ccov127_end_blk0	; block 0 END_ADDR
  8861                           
  8862                           ; Function: go_open, coverage: 4,3,2,1,0
  8863  0964  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8864  0968  00000031           	ddw	__ccovbit4_46/(0+8)	; CC_ADDR
  8865  096C  00000001           	ddw	1	; NUM_POINTS
  8866  0970  00000000           	ddw	__ccovbit4_46& (0+7)	; OFFSET
  8867  0974  00000000           	ddw	0	; Reserved
  8868  0978  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8869  097C  00000005           	ddw	5	; NUM_RANGES
  8870  0980  000004DC           	ddw	__ccov131_start_blk4	; block 4 START_ADDR
  8871  0984  000004E1           	ddw	__ccov131_end_blk4	; block 4 END_ADDR
  8872  0988  000004D7           	ddw	__ccov130_start_blk3	; block 3 START_ADDR
  8873  098C  000004DC           	ddw	__ccov130_end_blk3	; block 3 END_ADDR
  8874  0990  000004D2           	ddw	__ccov129_start_blk2	; block 2 START_ADDR
  8875  0994  000004D7           	ddw	__ccov129_end_blk2	; block 2 END_ADDR
  8876  0998  000004CC           	ddw	__ccov128_start_blk1	; block 1 START_ADDR
  8877  099C  000004D2           	ddw	__ccov128_end_blk1	; block 1 END_ADDR
  8878  09A0  000004C8           	ddw	_go_open	; block 0 START_ADDR
  8879  09A4  000004CC           	ddw	__ccov127_end_blk0	; block 0 END_ADDR
  8880                           
  8881                           ; Function: go_open, coverage: 7,0
  8882  09A8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8883  09AC  00000030           	ddw	__ccovbit7_47/(0+8)	; CC_ADDR
  8884  09B0  00000001           	ddw	1	; NUM_POINTS
  8885  09B4  00000007           	ddw	__ccovbit7_47& (0+7)	; OFFSET
  8886  09B8  00000000           	ddw	0	; Reserved
  8887  09BC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8888  09C0  00000002           	ddw	2	; NUM_RANGES
  8889  09C4  000004E1           	ddw	__ccov132_start_blk7	; block 7 START_ADDR
  8890  09C8  000004E4           	ddw	__end_of_go_open	; block 7 END_ADDR
  8891  09CC  000004C8           	ddw	_go_open	; block 0 START_ADDR
  8892  09D0  000004CC           	ddw	__ccov127_end_blk0	; block 0 END_ADDR
  8893                           
  8894                           ; Function: go_close_alt, coverage: 1,0
  8895  09D4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8896  09D8  00000030           	ddw	__ccovbit1_48/(0+8)	; CC_ADDR
  8897  09DC  00000001           	ddw	1	; NUM_POINTS
  8898  09E0  00000006           	ddw	__ccovbit1_48& (0+7)	; OFFSET
  8899  09E4  00000000           	ddw	0	; Reserved
  8900  09E8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8901  09EC  00000002           	ddw	2	; NUM_RANGES
  8902  09F0  000005AA           	ddw	__ccov134_start_blk1	; block 1 START_ADDR
  8903  09F4  000005B0           	ddw	__ccov134_end_blk1	; block 1 END_ADDR
  8904  09F8  000005A6           	ddw	_go_close_alt	; block 0 START_ADDR
  8905  09FC  000005AA           	ddw	__ccov133_end_blk0	; block 0 END_ADDR
  8906                           
  8907                           ; Function: go_close_alt, coverage: 2,0
  8908  0A00  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8909  0A04  00000030           	ddw	__ccovbit2_49/(0+8)	; CC_ADDR
  8910  0A08  00000001           	ddw	1	; NUM_POINTS
  8911  0A0C  00000005           	ddw	__ccovbit2_49& (0+7)	; OFFSET
  8912  0A10  00000000           	ddw	0	; Reserved
  8913  0A14  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8914  0A18  00000002           	ddw	2	; NUM_RANGES
  8915  0A1C  000005B0           	ddw	__ccov135_start_blk2	; block 2 START_ADDR
  8916  0A20  000005B6           	ddw	__ccov135_end_blk2	; block 2 END_ADDR
  8917  0A24  000005A6           	ddw	_go_close_alt	; block 0 START_ADDR
  8918  0A28  000005AA           	ddw	__ccov133_end_blk0	; block 0 END_ADDR
  8919                           
  8920                           ; Function: go_close_alt, coverage: 3,0
  8921  0A2C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8922  0A30  00000030           	ddw	__ccovbit3_50/(0+8)	; CC_ADDR
  8923  0A34  00000001           	ddw	1	; NUM_POINTS
  8924  0A38  00000004           	ddw	__ccovbit3_50& (0+7)	; OFFSET
  8925  0A3C  00000000           	ddw	0	; Reserved
  8926  0A40  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8927  0A44  00000002           	ddw	2	; NUM_RANGES
  8928  0A48  000005B6           	ddw	__ccov136_start_blk3	; block 3 START_ADDR
  8929  0A4C  000005BB           	ddw	__ccov136_end_blk3	; block 3 END_ADDR
  8930  0A50  000005A6           	ddw	_go_close_alt	; block 0 START_ADDR
  8931  0A54  000005AA           	ddw	__ccov133_end_blk0	; block 0 END_ADDR
  8932                           
  8933                           ; Function: go_close_alt, coverage: 5,0
  8934  0A58  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8935  0A5C  00000030           	ddw	__ccovbit5_51/(0+8)	; CC_ADDR
  8936  0A60  00000001           	ddw	1	; NUM_POINTS
  8937  0A64  00000003           	ddw	__ccovbit5_51& (0+7)	; OFFSET
  8938  0A68  00000000           	ddw	0	; Reserved
  8939  0A6C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8940  0A70  00000002           	ddw	2	; NUM_RANGES
  8941  0A74  000005BB           	ddw	__ccov137_start_blk5	; block 5 START_ADDR
  8942  0A78  000005BD           	ddw	__end_of_go_close_alt	; block 5 END_ADDR
  8943  0A7C  000005A6           	ddw	_go_close_alt	; block 0 START_ADDR
  8944  0A80  000005AA           	ddw	__ccov133_end_blk0	; block 0 END_ADDR
  8945                           
  8946                           ; Function: go_open_alt, coverage: 1,0
  8947  0A84  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8948  0A88  00000030           	ddw	__ccovbit1_52/(0+8)	; CC_ADDR
  8949  0A8C  00000001           	ddw	1	; NUM_POINTS
  8950  0A90  00000002           	ddw	__ccovbit1_52& (0+7)	; OFFSET
  8951  0A94  00000000           	ddw	0	; Reserved
  8952  0A98  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8953  0A9C  00000002           	ddw	2	; NUM_RANGES
  8954  0AA0  000005FD           	ddw	__ccov139_start_blk1	; block 1 START_ADDR
  8955  0AA4  00000603           	ddw	__ccov139_end_blk1	; block 1 END_ADDR
  8956  0AA8  000005F9           	ddw	_go_open_alt	; block 0 START_ADDR
  8957  0AAC  000005FD           	ddw	__ccov138_end_blk0	; block 0 END_ADDR
  8958                           
  8959                           ; Function: go_open_alt, coverage: 2,1,0
  8960  0AB0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8961  0AB4  00000030           	ddw	__ccovbit2_53/(0+8)	; CC_ADDR
  8962  0AB8  00000001           	ddw	1	; NUM_POINTS
  8963  0ABC  00000001           	ddw	__ccovbit2_53& (0+7)	; OFFSET
  8964  0AC0  00000000           	ddw	0	; Reserved
  8965  0AC4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8966  0AC8  00000003           	ddw	3	; NUM_RANGES
  8967  0ACC  00000603           	ddw	__ccov140_start_blk2	; block 2 START_ADDR
  8968  0AD0  00000608           	ddw	__ccov140_end_blk2	; block 2 END_ADDR
  8969  0AD4  000005FD           	ddw	__ccov139_start_blk1	; block 1 START_ADDR
  8970  0AD8  00000603           	ddw	__ccov139_end_blk1	; block 1 END_ADDR
  8971  0ADC  000005F9           	ddw	_go_open_alt	; block 0 START_ADDR
  8972  0AE0  000005FD           	ddw	__ccov138_end_blk0	; block 0 END_ADDR
  8973                           
  8974                           ; Function: go_open_alt, coverage: 4,0
  8975  0AE4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8976  0AE8  00000030           	ddw	__ccovbit4_54/(0+8)	; CC_ADDR
  8977  0AEC  00000001           	ddw	1	; NUM_POINTS
  8978  0AF0  00000000           	ddw	__ccovbit4_54& (0+7)	; OFFSET
  8979  0AF4  00000000           	ddw	0	; Reserved
  8980  0AF8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8981  0AFC  00000002           	ddw	2	; NUM_RANGES
  8982  0B00  00000608           	ddw	__ccov141_start_blk4	; block 4 START_ADDR
  8983  0B04  0000060B           	ddw	__end_of_go_open_alt	; block 4 END_ADDR
  8984  0B08  000005F9           	ddw	_go_open_alt	; block 0 START_ADDR
  8985  0B0C  000005FD           	ddw	__ccov138_end_blk0	; block 0 END_ADDR
  8986                           
  8987                           ; Function: rele_off, coverage: 1,0
  8988  0B10  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  8989  0B14  0000002F           	ddw	__ccovbit1_55/(0+8)	; CC_ADDR
  8990  0B18  00000001           	ddw	1	; NUM_POINTS
  8991  0B1C  00000007           	ddw	__ccovbit1_55& (0+7)	; OFFSET
  8992  0B20  00000000           	ddw	0	; Reserved
  8993  0B24  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  8994  0B28  00000002           	ddw	2	; NUM_RANGES
  8995  0B2C  000005C6           	ddw	__ccov143_start_blk1	; block 1 START_ADDR
  8996  0B30  000005CA           	ddw	__ccov143_end_blk1	; block 1 END_ADDR
  8997  0B34  000005BD           	ddw	_rele_off	; block 0 START_ADDR
  8998  0B38  000005C6           	ddw	__ccov142_end_blk0	; block 0 END_ADDR
  8999                           
  9000                           ; Function: rele_off, coverage: 2,0
  9001  0B3C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9002  0B40  0000002F           	ddw	__ccovbit2_56/(0+8)	; CC_ADDR
  9003  0B44  00000001           	ddw	1	; NUM_POINTS
  9004  0B48  00000006           	ddw	__ccovbit2_56& (0+7)	; OFFSET
  9005  0B4C  00000000           	ddw	0	; Reserved
  9006  0B50  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9007  0B54  00000002           	ddw	2	; NUM_RANGES
  9008  0B58  000005CA           	ddw	__ccov144_start_blk2	; block 2 START_ADDR
  9009  0B5C  000005CD           	ddw	__ccov144_end_blk2	; block 2 END_ADDR
  9010  0B60  000005BD           	ddw	_rele_off	; block 0 START_ADDR
  9011  0B64  000005C6           	ddw	__ccov142_end_blk0	; block 0 END_ADDR
  9012                           
  9013                           ; Function: rele_off, coverage: 4,3,0
  9014  0B68  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9015  0B6C  0000002F           	ddw	__ccovbit4_57/(0+8)	; CC_ADDR
  9016  0B70  00000001           	ddw	1	; NUM_POINTS
  9017  0B74  00000005           	ddw	__ccovbit4_57& (0+7)	; OFFSET
  9018  0B78  00000000           	ddw	0	; Reserved
  9019  0B7C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9020  0B80  00000003           	ddw	3	; NUM_RANGES
  9021  0B84  000005D0           	ddw	__ccov146_start_blk4	; block 4 START_ADDR
  9022  0B88  000005D2           	ddw	__end_of_rele_off	; block 4 END_ADDR
  9023  0B8C  000005CD           	ddw	__ccov145_start_blk3	; block 3 START_ADDR
  9024  0B90  000005D0           	ddw	__ccov145_end_blk3	; block 3 END_ADDR
  9025  0B94  000005BD           	ddw	_rele_off	; block 0 START_ADDR
  9026  0B98  000005C6           	ddw	__ccov142_end_blk0	; block 0 END_ADDR
  9027                           
  9028                           ; Function: close, coverage: 1,0
  9029  0B9C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9030  0BA0  0000002F           	ddw	__ccovbit1_58/(0+8)	; CC_ADDR
  9031  0BA4  00000001           	ddw	1	; NUM_POINTS
  9032  0BA8  00000004           	ddw	__ccovbit1_58& (0+7)	; OFFSET
  9033  0BAC  00000000           	ddw	0	; Reserved
  9034  0BB0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9035  0BB4  00000002           	ddw	2	; NUM_RANGES
  9036  0BB8  0000048A           	ddw	__ccov148_start_blk1	; block 1 START_ADDR
  9037  0BBC  00000490           	ddw	__ccov148_end_blk1	; block 1 END_ADDR
  9038  0BC0  00000486           	ddw	_close	; block 0 START_ADDR
  9039  0BC4  0000048A           	ddw	__ccov147_end_blk0	; block 0 END_ADDR
  9040                           
  9041                           ; Function: close, coverage: 3,2,0
  9042  0BC8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9043  0BCC  0000002F           	ddw	__ccovbit3_59/(0+8)	; CC_ADDR
  9044  0BD0  00000001           	ddw	1	; NUM_POINTS
  9045  0BD4  00000003           	ddw	__ccovbit3_59& (0+7)	; OFFSET
  9046  0BD8  00000000           	ddw	0	; Reserved
  9047  0BDC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9048  0BE0  00000003           	ddw	3	; NUM_RANGES
  9049  0BE4  00000494           	ddw	__ccov150_start_blk3	; block 3 START_ADDR
  9050  0BE8  0000049A           	ddw	__ccov150_end_blk3	; block 3 END_ADDR
  9051  0BEC  00000490           	ddw	__ccov149_start_blk2	; block 2 START_ADDR
  9052  0BF0  00000494           	ddw	__ccov149_end_blk2	; block 2 END_ADDR
  9053  0BF4  00000486           	ddw	_close	; block 0 START_ADDR
  9054  0BF8  0000048A           	ddw	__ccov147_end_blk0	; block 0 END_ADDR
  9055                           
  9056                           ; Function: close, coverage: 4,2,0
  9057  0BFC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9058  0C00  0000002F           	ddw	__ccovbit4_60/(0+8)	; CC_ADDR
  9059  0C04  00000001           	ddw	1	; NUM_POINTS
  9060  0C08  00000002           	ddw	__ccovbit4_60& (0+7)	; OFFSET
  9061  0C0C  00000000           	ddw	0	; Reserved
  9062  0C10  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9063  0C14  00000003           	ddw	3	; NUM_RANGES
  9064  0C18  0000049A           	ddw	__ccov151_start_blk4	; block 4 START_ADDR
  9065  0C1C  000004A0           	ddw	__ccov151_end_blk4	; block 4 END_ADDR
  9066  0C20  00000490           	ddw	__ccov149_start_blk2	; block 2 START_ADDR
  9067  0C24  00000494           	ddw	__ccov149_end_blk2	; block 2 END_ADDR
  9068  0C28  00000486           	ddw	_close	; block 0 START_ADDR
  9069  0C2C  0000048A           	ddw	__ccov147_end_blk0	; block 0 END_ADDR
  9070                           
  9071                           ; Function: close, coverage: 5,4,2,0
  9072  0C30  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9073  0C34  0000002F           	ddw	__ccovbit5_61/(0+8)	; CC_ADDR
  9074  0C38  00000001           	ddw	1	; NUM_POINTS
  9075  0C3C  00000001           	ddw	__ccovbit5_61& (0+7)	; OFFSET
  9076  0C40  00000000           	ddw	0	; Reserved
  9077  0C44  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9078  0C48  00000004           	ddw	4	; NUM_RANGES
  9079  0C4C  000004A0           	ddw	__ccov152_start_blk5	; block 5 START_ADDR
  9080  0C50  000004A4           	ddw	__ccov152_end_blk5	; block 5 END_ADDR
  9081  0C54  0000049A           	ddw	__ccov151_start_blk4	; block 4 START_ADDR
  9082  0C58  000004A0           	ddw	__ccov151_end_blk4	; block 4 END_ADDR
  9083  0C5C  00000490           	ddw	__ccov149_start_blk2	; block 2 START_ADDR
  9084  0C60  00000494           	ddw	__ccov149_end_blk2	; block 2 END_ADDR
  9085  0C64  00000486           	ddw	_close	; block 0 START_ADDR
  9086  0C68  0000048A           	ddw	__ccov147_end_blk0	; block 0 END_ADDR
  9087                           
  9088                           ; Function: close, coverage: 9,0
  9089  0C6C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9090  0C70  0000002F           	ddw	__ccovbit9_62/(0+8)	; CC_ADDR
  9091  0C74  00000001           	ddw	1	; NUM_POINTS
  9092  0C78  00000000           	ddw	__ccovbit9_62& (0+7)	; OFFSET
  9093  0C7C  00000000           	ddw	0	; Reserved
  9094  0C80  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9095  0C84  00000002           	ddw	2	; NUM_RANGES
  9096  0C88  000004A4           	ddw	__ccov153_start_blk9	; block 9 START_ADDR
  9097  0C8C  000004A7           	ddw	__end_of_close	; block 9 END_ADDR
  9098  0C90  00000486           	ddw	_close	; block 0 START_ADDR
  9099  0C94  0000048A           	ddw	__ccov147_end_blk0	; block 0 END_ADDR
  9100                           
  9101                           ; Function: open, coverage: 1,0
  9102  0C98  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9103  0C9C  0000002E           	ddw	__ccovbit1_63/(0+8)	; CC_ADDR
  9104  0CA0  00000001           	ddw	1	; NUM_POINTS
  9105  0CA4  00000007           	ddw	__ccovbit1_63& (0+7)	; OFFSET
  9106  0CA8  00000000           	ddw	0	; Reserved
  9107  0CAC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9108  0CB0  00000002           	ddw	2	; NUM_RANGES
  9109  0CB4  000004AB           	ddw	__ccov155_start_blk1	; block 1 START_ADDR
  9110  0CB8  000004B1           	ddw	__ccov155_end_blk1	; block 1 END_ADDR
  9111  0CBC  000004A7           	ddw	_open	; block 0 START_ADDR
  9112  0CC0  000004AB           	ddw	__ccov154_end_blk0	; block 0 END_ADDR
  9113                           
  9114                           ; Function: open, coverage: 3,2,0
  9115  0CC4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9116  0CC8  0000002E           	ddw	__ccovbit3_64/(0+8)	; CC_ADDR
  9117  0CCC  00000001           	ddw	1	; NUM_POINTS
  9118  0CD0  00000006           	ddw	__ccovbit3_64& (0+7)	; OFFSET
  9119  0CD4  00000000           	ddw	0	; Reserved
  9120  0CD8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9121  0CDC  00000003           	ddw	3	; NUM_RANGES
  9122  0CE0  000004B5           	ddw	__ccov157_start_blk3	; block 3 START_ADDR
  9123  0CE4  000004BB           	ddw	__ccov157_end_blk3	; block 3 END_ADDR
  9124  0CE8  000004B1           	ddw	__ccov156_start_blk2	; block 2 START_ADDR
  9125  0CEC  000004B5           	ddw	__ccov156_end_blk2	; block 2 END_ADDR
  9126  0CF0  000004A7           	ddw	_open	; block 0 START_ADDR
  9127  0CF4  000004AB           	ddw	__ccov154_end_blk0	; block 0 END_ADDR
  9128                           
  9129                           ; Function: open, coverage: 4,2,0
  9130  0CF8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9131  0CFC  0000002E           	ddw	__ccovbit4_65/(0+8)	; CC_ADDR
  9132  0D00  00000001           	ddw	1	; NUM_POINTS
  9133  0D04  00000005           	ddw	__ccovbit4_65& (0+7)	; OFFSET
  9134  0D08  00000000           	ddw	0	; Reserved
  9135  0D0C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9136  0D10  00000003           	ddw	3	; NUM_RANGES
  9137  0D14  000004BB           	ddw	__ccov158_start_blk4	; block 4 START_ADDR
  9138  0D18  000004C1           	ddw	__ccov158_end_blk4	; block 4 END_ADDR
  9139  0D1C  000004B1           	ddw	__ccov156_start_blk2	; block 2 START_ADDR
  9140  0D20  000004B5           	ddw	__ccov156_end_blk2	; block 2 END_ADDR
  9141  0D24  000004A7           	ddw	_open	; block 0 START_ADDR
  9142  0D28  000004AB           	ddw	__ccov154_end_blk0	; block 0 END_ADDR
  9143                           
  9144                           ; Function: open, coverage: 5,4,2,0
  9145  0D2C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9146  0D30  0000002E           	ddw	__ccovbit5_66/(0+8)	; CC_ADDR
  9147  0D34  00000001           	ddw	1	; NUM_POINTS
  9148  0D38  00000004           	ddw	__ccovbit5_66& (0+7)	; OFFSET
  9149  0D3C  00000000           	ddw	0	; Reserved
  9150  0D40  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9151  0D44  00000004           	ddw	4	; NUM_RANGES
  9152  0D48  000004C1           	ddw	__ccov159_start_blk5	; block 5 START_ADDR
  9153  0D4C  000004C5           	ddw	__ccov159_end_blk5	; block 5 END_ADDR
  9154  0D50  000004BB           	ddw	__ccov158_start_blk4	; block 4 START_ADDR
  9155  0D54  000004C1           	ddw	__ccov158_end_blk4	; block 4 END_ADDR
  9156  0D58  000004B1           	ddw	__ccov156_start_blk2	; block 2 START_ADDR
  9157  0D5C  000004B5           	ddw	__ccov156_end_blk2	; block 2 END_ADDR
  9158  0D60  000004A7           	ddw	_open	; block 0 START_ADDR
  9159  0D64  000004AB           	ddw	__ccov154_end_blk0	; block 0 END_ADDR
  9160                           
  9161                           ; Function: open, coverage: 9,0
  9162  0D68  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9163  0D6C  0000002E           	ddw	__ccovbit9_67/(0+8)	; CC_ADDR
  9164  0D70  00000001           	ddw	1	; NUM_POINTS
  9165  0D74  00000003           	ddw	__ccovbit9_67& (0+7)	; OFFSET
  9166  0D78  00000000           	ddw	0	; Reserved
  9167  0D7C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9168  0D80  00000002           	ddw	2	; NUM_RANGES
  9169  0D84  000004C5           	ddw	__ccov160_start_blk9	; block 9 START_ADDR
  9170  0D88  000004C8           	ddw	__end_of_open	; block 9 END_ADDR
  9171  0D8C  000004A7           	ddw	_open	; block 0 START_ADDR
  9172  0D90  000004AB           	ddw	__ccov154_end_blk0	; block 0 END_ADDR
  9173                           
  9174                           ; Function: rele_tick, coverage: 1,0
  9175  0D94  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9176  0D98  0000002E           	ddw	__ccovbit1_68/(0+8)	; CC_ADDR
  9177  0D9C  00000001           	ddw	1	; NUM_POINTS
  9178  0DA0  00000002           	ddw	__ccovbit1_68& (0+7)	; OFFSET
  9179  0DA4  00000000           	ddw	0	; Reserved
  9180  0DA8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9181  0DAC  00000002           	ddw	2	; NUM_RANGES
  9182  0DB0  00000133           	ddw	__ccov162_start_blk1	; block 1 START_ADDR
  9183  0DB4  0000013A           	ddw	__ccov162_end_blk1	; block 1 END_ADDR
  9184  0DB8  0000012F           	ddw	_rele_tick	; block 0 START_ADDR
  9185  0DBC  00000133           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9186                           
  9187                           ; Function: rele_tick, coverage: 4,3,0
  9188  0DC0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9189  0DC4  0000002E           	ddw	__ccovbit4_69/(0+8)	; CC_ADDR
  9190  0DC8  00000001           	ddw	1	; NUM_POINTS
  9191  0DCC  00000001           	ddw	__ccovbit4_69& (0+7)	; OFFSET
  9192  0DD0  00000000           	ddw	0	; Reserved
  9193  0DD4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9194  0DD8  00000003           	ddw	3	; NUM_RANGES
  9195  0DDC  0000013E           	ddw	__ccov164_start_blk4	; block 4 START_ADDR
  9196  0DE0  00000146           	ddw	__ccov164_end_blk4	; block 4 END_ADDR
  9197  0DE4  0000013A           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  9198  0DE8  0000013E           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  9199  0DEC  0000012F           	ddw	_rele_tick	; block 0 START_ADDR
  9200  0DF0  00000133           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9201                           
  9202                           ; Function: rele_tick, coverage: 6,5,4,3,0
  9203  0DF4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9204  0DF8  0000002E           	ddw	__ccovbit6_70/(0+8)	; CC_ADDR
  9205  0DFC  00000001           	ddw	1	; NUM_POINTS
  9206  0E00  00000000           	ddw	__ccovbit6_70& (0+7)	; OFFSET
  9207  0E04  00000000           	ddw	0	; Reserved
  9208  0E08  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9209  0E0C  00000005           	ddw	5	; NUM_RANGES
  9210  0E10  0000014A           	ddw	__ccov166_start_blk6	; block 6 START_ADDR
  9211  0E14  00000151           	ddw	__ccov166_end_blk6	; block 6 END_ADDR
  9212  0E18  00000146           	ddw	__ccov165_start_blk5	; block 5 START_ADDR
  9213  0E1C  0000014A           	ddw	__ccov165_end_blk5	; block 5 END_ADDR
  9214  0E20  0000013E           	ddw	__ccov164_start_blk4	; block 4 START_ADDR
  9215  0E24  00000146           	ddw	__ccov164_end_blk4	; block 4 END_ADDR
  9216  0E28  0000013A           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  9217  0E2C  0000013E           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  9218  0E30  0000012F           	ddw	_rele_tick	; block 0 START_ADDR
  9219  0E34  00000133           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9220                           
  9221                           ; Function: rele_tick, coverage: 7,6,5,4,3,0
  9222  0E38  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9223  0E3C  0000002D           	ddw	__ccovbit7_71/(0+8)	; CC_ADDR
  9224  0E40  00000001           	ddw	1	; NUM_POINTS
  9225  0E44  00000007           	ddw	__ccovbit7_71& (0+7)	; OFFSET
  9226  0E48  00000000           	ddw	0	; Reserved
  9227  0E4C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9228  0E50  00000006           	ddw	6	; NUM_RANGES
  9229  0E54  00000151           	ddw	__ccov167_start_blk7	; block 7 START_ADDR
  9230  0E58  00000156           	ddw	__ccov167_end_blk7	; block 7 END_ADDR
  9231  0E5C  0000014A           	ddw	__ccov166_start_blk6	; block 6 START_ADDR
  9232  0E60  00000151           	ddw	__ccov166_end_blk6	; block 6 END_ADDR
  9233  0E64  00000146           	ddw	__ccov165_start_blk5	; block 5 START_ADDR
  9234  0E68  0000014A           	ddw	__ccov165_end_blk5	; block 5 END_ADDR
  9235  0E6C  0000013E           	ddw	__ccov164_start_blk4	; block 4 START_ADDR
  9236  0E70  00000146           	ddw	__ccov164_end_blk4	; block 4 END_ADDR
  9237  0E74  0000013A           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  9238  0E78  0000013E           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  9239  0E7C  0000012F           	ddw	_rele_tick	; block 0 START_ADDR
  9240  0E80  00000133           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9241                           
  9242                           ; Function: rele_tick, coverage: 10,3,0
  9243  0E84  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9244  0E88  0000002D           	ddw	__ccovbit10_72/(0+8)	; CC_ADDR
  9245  0E8C  00000001           	ddw	1	; NUM_POINTS
  9246  0E90  00000006           	ddw	__ccovbit10_72& (0+7)	; OFFSET
  9247  0E94  00000000           	ddw	0	; Reserved
  9248  0E98  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9249  0E9C  00000003           	ddw	3	; NUM_RANGES
  9250  0EA0  00000156           	ddw	__ccov168_start_blk10	; block 10 START_ADDR
  9251  0EA4  0000015C           	ddw	__ccov168_end_blk10	; block 10 END_ADDR
  9252  0EA8  0000013A           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  9253  0EAC  0000013E           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  9254  0EB0  0000012F           	ddw	_rele_tick	; block 0 START_ADDR
  9255  0EB4  00000133           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9256                           
  9257                           ; Function: rele_tick, coverage: 14,13,12,11,10,3,0
  9258  0EB8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9259  0EBC  0000002D           	ddw	__ccovbit14_73/(0+8)	; CC_ADDR
  9260  0EC0  00000001           	ddw	1	; NUM_POINTS
  9261  0EC4  00000005           	ddw	__ccovbit14_73& (0+7)	; OFFSET
  9262  0EC8  00000000           	ddw	0	; Reserved
  9263  0ECC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9264  0ED0  00000007           	ddw	7	; NUM_RANGES
  9265  0ED4  00000169           	ddw	__ccov172_start_blk14	; block 14 START_ADDR
  9266  0ED8  0000016F           	ddw	__ccov172_end_blk14	; block 14 END_ADDR
  9267  0EDC  00000168           	ddw	__ccov171_start_blk13	; block 13 START_ADDR
  9268  0EE0  00000169           	ddw	__ccov171_end_blk13	; block 13 END_ADDR
  9269  0EE4  00000162           	ddw	__ccov170_start_blk12	; block 12 START_ADDR
  9270  0EE8  00000168           	ddw	__ccov170_end_blk12	; block 12 END_ADDR
  9271  0EEC  0000015C           	ddw	__ccov169_start_blk11	; block 11 START_ADDR
  9272  0EF0  00000162           	ddw	__ccov169_end_blk11	; block 11 END_ADDR
  9273  0EF4  00000156           	ddw	__ccov168_start_blk10	; block 10 START_ADDR
  9274  0EF8  0000015C           	ddw	__ccov168_end_blk10	; block 10 END_ADDR
  9275  0EFC  0000013A           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  9276  0F00  0000013E           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  9277  0F04  0000012F           	ddw	_rele_tick	; block 0 START_ADDR
  9278  0F08  00000133           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9279                           
  9280                           ; Function: rele_tick, coverage: 15,12,11,10,3,0
  9281  0F0C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9282  0F10  0000002D           	ddw	__ccovbit15_74/(0+8)	; CC_ADDR
  9283  0F14  00000001           	ddw	1	; NUM_POINTS
  9284  0F18  00000004           	ddw	__ccovbit15_74& (0+7)	; OFFSET
  9285  0F1C  00000000           	ddw	0	; Reserved
  9286  0F20  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9287  0F24  00000006           	ddw	6	; NUM_RANGES
  9288  0F28  0000016F           	ddw	__ccov173_start_blk15	; block 15 START_ADDR
  9289  0F2C  00000172           	ddw	__ccov173_end_blk15	; block 15 END_ADDR
  9290  0F30  00000162           	ddw	__ccov170_start_blk12	; block 12 START_ADDR
  9291  0F34  00000168           	ddw	__ccov170_end_blk12	; block 12 END_ADDR
  9292  0F38  0000015C           	ddw	__ccov169_start_blk11	; block 11 START_ADDR
  9293  0F3C  00000162           	ddw	__ccov169_end_blk11	; block 11 END_ADDR
  9294  0F40  00000156           	ddw	__ccov168_start_blk10	; block 10 START_ADDR
  9295  0F44  0000015C           	ddw	__ccov168_end_blk10	; block 10 END_ADDR
  9296  0F48  0000013A           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  9297  0F4C  0000013E           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  9298  0F50  0000012F           	ddw	_rele_tick	; block 0 START_ADDR
  9299  0F54  00000133           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9300                           
  9301                           ; Function: rele_tick, coverage: 18,11,10,3,0
  9302  0F58  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9303  0F5C  0000002D           	ddw	__ccovbit18_75/(0+8)	; CC_ADDR
  9304  0F60  00000001           	ddw	1	; NUM_POINTS
  9305  0F64  00000003           	ddw	__ccovbit18_75& (0+7)	; OFFSET
  9306  0F68  00000000           	ddw	0	; Reserved
  9307  0F6C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9308  0F70  00000005           	ddw	5	; NUM_RANGES
  9309  0F74  00000172           	ddw	__ccov174_start_blk18	; block 18 START_ADDR
  9310  0F78  00000177           	ddw	__ccov174_end_blk18	; block 18 END_ADDR
  9311  0F7C  0000015C           	ddw	__ccov169_start_blk11	; block 11 START_ADDR
  9312  0F80  00000162           	ddw	__ccov169_end_blk11	; block 11 END_ADDR
  9313  0F84  00000156           	ddw	__ccov168_start_blk10	; block 10 START_ADDR
  9314  0F88  0000015C           	ddw	__ccov168_end_blk10	; block 10 END_ADDR
  9315  0F8C  0000013A           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  9316  0F90  0000013E           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  9317  0F94  0000012F           	ddw	_rele_tick	; block 0 START_ADDR
  9318  0F98  00000133           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9319                           
  9320                           ; Function: rele_tick, coverage: 20,11,10,3,0
  9321  0F9C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9322  0FA0  0000002D           	ddw	__ccovbit20_76/(0+8)	; CC_ADDR
  9323  0FA4  00000001           	ddw	1	; NUM_POINTS
  9324  0FA8  00000002           	ddw	__ccovbit20_76& (0+7)	; OFFSET
  9325  0FAC  00000000           	ddw	0	; Reserved
  9326  0FB0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9327  0FB4  00000005           	ddw	5	; NUM_RANGES
  9328  0FB8  00000177           	ddw	__ccov175_start_blk20	; block 20 START_ADDR
  9329  0FBC  0000017E           	ddw	__ccov175_end_blk20	; block 20 END_ADDR
  9330  0FC0  0000015C           	ddw	__ccov169_start_blk11	; block 11 START_ADDR
  9331  0FC4  00000162           	ddw	__ccov169_end_blk11	; block 11 END_ADDR
  9332  0FC8  00000156           	ddw	__ccov168_start_blk10	; block 10 START_ADDR
  9333  0FCC  0000015C           	ddw	__ccov168_end_blk10	; block 10 END_ADDR
  9334  0FD0  0000013A           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  9335  0FD4  0000013E           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  9336  0FD8  0000012F           	ddw	_rele_tick	; block 0 START_ADDR
  9337  0FDC  00000133           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9338                           
  9339                           ; Function: rele_tick, coverage: 22,21,20,11,10,3,0
  9340  0FE0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9341  0FE4  0000002D           	ddw	__ccovbit22_77/(0+8)	; CC_ADDR
  9342  0FE8  00000001           	ddw	1	; NUM_POINTS
  9343  0FEC  00000001           	ddw	__ccovbit22_77& (0+7)	; OFFSET
  9344  0FF0  00000000           	ddw	0	; Reserved
  9345  0FF4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9346  0FF8  00000007           	ddw	7	; NUM_RANGES
  9347  0FFC  00000182           	ddw	__ccov177_start_blk22	; block 22 START_ADDR
  9348  1000  00000189           	ddw	__ccov177_end_blk22	; block 22 END_ADDR
  9349  1004  0000017E           	ddw	__ccov176_start_blk21	; block 21 START_ADDR
  9350  1008  00000182           	ddw	__ccov176_end_blk21	; block 21 END_ADDR
  9351  100C  00000177           	ddw	__ccov175_start_blk20	; block 20 START_ADDR
  9352  1010  0000017E           	ddw	__ccov175_end_blk20	; block 20 END_ADDR
  9353  1014  0000015C           	ddw	__ccov169_start_blk11	; block 11 START_ADDR
  9354  1018  00000162           	ddw	__ccov169_end_blk11	; block 11 END_ADDR
  9355  101C  00000156           	ddw	__ccov168_start_blk10	; block 10 START_ADDR
  9356  1020  0000015C           	ddw	__ccov168_end_blk10	; block 10 END_ADDR
  9357  1024  0000013A           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  9358  1028  0000013E           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  9359  102C  0000012F           	ddw	_rele_tick	; block 0 START_ADDR
  9360  1030  00000133           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9361                           
  9362                           ; Function: rele_tick, coverage: 23,22,21,20,11,10,3,0
  9363  1034  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9364  1038  0000002D           	ddw	__ccovbit23_78/(0+8)	; CC_ADDR
  9365  103C  00000001           	ddw	1	; NUM_POINTS
  9366  1040  00000000           	ddw	__ccovbit23_78& (0+7)	; OFFSET
  9367  1044  00000000           	ddw	0	; Reserved
  9368  1048  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9369  104C  00000008           	ddw	8	; NUM_RANGES
  9370  1050  00000189           	ddw	__ccov178_start_blk23	; block 23 START_ADDR
  9371  1054  0000018D           	ddw	__ccov178_end_blk23	; block 23 END_ADDR
  9372  1058  00000182           	ddw	__ccov177_start_blk22	; block 22 START_ADDR
  9373  105C  00000189           	ddw	__ccov177_end_blk22	; block 22 END_ADDR
  9374  1060  0000017E           	ddw	__ccov176_start_blk21	; block 21 START_ADDR
  9375  1064  00000182           	ddw	__ccov176_end_blk21	; block 21 END_ADDR
  9376  1068  00000177           	ddw	__ccov175_start_blk20	; block 20 START_ADDR
  9377  106C  0000017E           	ddw	__ccov175_end_blk20	; block 20 END_ADDR
  9378  1070  0000015C           	ddw	__ccov169_start_blk11	; block 11 START_ADDR
  9379  1074  00000162           	ddw	__ccov169_end_blk11	; block 11 END_ADDR
  9380  1078  00000156           	ddw	__ccov168_start_blk10	; block 10 START_ADDR
  9381  107C  0000015C           	ddw	__ccov168_end_blk10	; block 10 END_ADDR
  9382  1080  0000013A           	ddw	__ccov163_start_blk3	; block 3 START_ADDR
  9383  1084  0000013E           	ddw	__ccov163_end_blk3	; block 3 END_ADDR
  9384  1088  0000012F           	ddw	_rele_tick	; block 0 START_ADDR
  9385  108C  00000133           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9386                           
  9387                           ; Function: rele_tick, coverage: 27,0
  9388  1090  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9389  1094  0000002C           	ddw	__ccovbit27_79/(0+8)	; CC_ADDR
  9390  1098  00000001           	ddw	1	; NUM_POINTS
  9391  109C  00000007           	ddw	__ccovbit27_79& (0+7)	; OFFSET
  9392  10A0  00000000           	ddw	0	; Reserved
  9393  10A4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9394  10A8  00000002           	ddw	2	; NUM_RANGES
  9395  10AC  0000018D           	ddw	__ccov179_start_blk27	; block 27 START_ADDR
  9396  10B0  0000018F           	ddw	__end_of_rele_tick	; block 27 END_ADDR
  9397  10B4  0000012F           	ddw	_rele_tick	; block 0 START_ADDR
  9398  10B8  00000133           	ddw	__ccov161_end_blk0	; block 0 END_ADDR
  9399                           
  9400                           ; Function: start_alarm, coverage: 2,1,0
  9401  10BC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9402  10C0  0000002C           	ddw	__ccovbit2_80/(0+8)	; CC_ADDR
  9403  10C4  00000001           	ddw	1	; NUM_POINTS
  9404  10C8  00000006           	ddw	__ccovbit2_80& (0+7)	; OFFSET
  9405  10CC  00000000           	ddw	0	; Reserved
  9406  10D0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9407  10D4  00000003           	ddw	3	; NUM_RANGES
  9408  10D8  00000684           	ddw	__ccov182_start_blk2	; block 2 START_ADDR
  9409  10DC  00000686           	ddw	__end_of_start_alarm	; block 2 END_ADDR
  9410  10E0  00000682           	ddw	__ccov181_start_blk1	; block 1 START_ADDR
  9411  10E4  00000684           	ddw	__ccov181_end_blk1	; block 1 END_ADDR
  9412  10E8  0000067E           	ddw	_start_alarm	; block 0 START_ADDR
  9413  10EC  00000682           	ddw	__ccov180_end_blk0	; block 0 END_ADDR
  9414                           
  9415                           ; Function: clear_alarm, coverage: 1,0
  9416  10F0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9417  10F4  0000002C           	ddw	__ccovbit1_81/(0+8)	; CC_ADDR
  9418  10F8  00000001           	ddw	1	; NUM_POINTS
  9419  10FC  00000005           	ddw	__ccovbit1_81& (0+7)	; OFFSET
  9420  1100  00000000           	ddw	0	; Reserved
  9421  1104  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9422  1108  00000002           	ddw	2	; NUM_RANGES
  9423  110C  000006AD           	ddw	__ccov184_start_blk1	; block 1 START_ADDR
  9424  1110  000006B0           	ddw	__end_of_clear_alarm	; block 1 END_ADDR
  9425  1114  000006AB           	ddw	_clear_alarm	; block 0 START_ADDR
  9426  1118  000006AD           	ddw	__ccov183_end_blk0	; block 0 END_ADDR
  9427                           
  9428                           ; Function: fun_work, coverage: 1,0
  9429  111C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9430  1120  0000002C           	ddw	__ccovbit1_82/(0+8)	; CC_ADDR
  9431  1124  00000001           	ddw	1	; NUM_POINTS
  9432  1128  00000004           	ddw	__ccovbit1_82& (0+7)	; OFFSET
  9433  112C  00000000           	ddw	0	; Reserved
  9434  1130  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9435  1134  00000002           	ddw	2	; NUM_RANGES
  9436  1138  000001ED           	ddw	__ccov186_start_blk1	; block 1 START_ADDR
  9437  113C  000001F3           	ddw	__ccov186_end_blk1	; block 1 END_ADDR
  9438  1140  000001E9           	ddw	_fun_work	; block 0 START_ADDR
  9439  1144  000001ED           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9440                           
  9441                           ; Function: fun_work, coverage: 2,1,0
  9442  1148  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9443  114C  0000002C           	ddw	__ccovbit2_83/(0+8)	; CC_ADDR
  9444  1150  00000001           	ddw	1	; NUM_POINTS
  9445  1154  00000003           	ddw	__ccovbit2_83& (0+7)	; OFFSET
  9446  1158  00000000           	ddw	0	; Reserved
  9447  115C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9448  1160  00000003           	ddw	3	; NUM_RANGES
  9449  1164  000001F3           	ddw	__ccov187_start_blk2	; block 2 START_ADDR
  9450  1168  000001F8           	ddw	__ccov187_end_blk2	; block 2 END_ADDR
  9451  116C  000001ED           	ddw	__ccov186_start_blk1	; block 1 START_ADDR
  9452  1170  000001F3           	ddw	__ccov186_end_blk1	; block 1 END_ADDR
  9453  1174  000001E9           	ddw	_fun_work	; block 0 START_ADDR
  9454  1178  000001ED           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9455                           
  9456                           ; Function: fun_work, coverage: 3,2,1,0
  9457  117C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9458  1180  0000002C           	ddw	__ccovbit3_84/(0+8)	; CC_ADDR
  9459  1184  00000001           	ddw	1	; NUM_POINTS
  9460  1188  00000002           	ddw	__ccovbit3_84& (0+7)	; OFFSET
  9461  118C  00000000           	ddw	0	; Reserved
  9462  1190  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9463  1194  00000004           	ddw	4	; NUM_RANGES
  9464  1198  000001F8           	ddw	__ccov188_start_blk3	; block 3 START_ADDR
  9465  119C  000001FD           	ddw	__ccov188_end_blk3	; block 3 END_ADDR
  9466  11A0  000001F3           	ddw	__ccov187_start_blk2	; block 2 START_ADDR
  9467  11A4  000001F8           	ddw	__ccov187_end_blk2	; block 2 END_ADDR
  9468  11A8  000001ED           	ddw	__ccov186_start_blk1	; block 1 START_ADDR
  9469  11AC  000001F3           	ddw	__ccov186_end_blk1	; block 1 END_ADDR
  9470  11B0  000001E9           	ddw	_fun_work	; block 0 START_ADDR
  9471  11B4  000001ED           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9472                           
  9473                           ; Function: fun_work, coverage: 4,3,2,1,0
  9474  11B8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9475  11BC  0000002C           	ddw	__ccovbit4_85/(0+8)	; CC_ADDR
  9476  11C0  00000001           	ddw	1	; NUM_POINTS
  9477  11C4  00000001           	ddw	__ccovbit4_85& (0+7)	; OFFSET
  9478  11C8  00000000           	ddw	0	; Reserved
  9479  11CC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9480  11D0  00000005           	ddw	5	; NUM_RANGES
  9481  11D4  000001FD           	ddw	__ccov189_start_blk4	; block 4 START_ADDR
  9482  11D8  00000202           	ddw	__ccov189_end_blk4	; block 4 END_ADDR
  9483  11DC  000001F8           	ddw	__ccov188_start_blk3	; block 3 START_ADDR
  9484  11E0  000001FD           	ddw	__ccov188_end_blk3	; block 3 END_ADDR
  9485  11E4  000001F3           	ddw	__ccov187_start_blk2	; block 2 START_ADDR
  9486  11E8  000001F8           	ddw	__ccov187_end_blk2	; block 2 END_ADDR
  9487  11EC  000001ED           	ddw	__ccov186_start_blk1	; block 1 START_ADDR
  9488  11F0  000001F3           	ddw	__ccov186_end_blk1	; block 1 END_ADDR
  9489  11F4  000001E9           	ddw	_fun_work	; block 0 START_ADDR
  9490  11F8  000001ED           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9491                           
  9492                           ; Function: fun_work, coverage: 5,4,3,2,1,0
  9493  11FC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9494  1200  0000002C           	ddw	__ccovbit5_86/(0+8)	; CC_ADDR
  9495  1204  00000001           	ddw	1	; NUM_POINTS
  9496  1208  00000000           	ddw	__ccovbit5_86& (0+7)	; OFFSET
  9497  120C  00000000           	ddw	0	; Reserved
  9498  1210  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9499  1214  00000006           	ddw	6	; NUM_RANGES
  9500  1218  00000202           	ddw	__ccov190_start_blk5	; block 5 START_ADDR
  9501  121C  00000207           	ddw	__ccov190_end_blk5	; block 5 END_ADDR
  9502  1220  000001FD           	ddw	__ccov189_start_blk4	; block 4 START_ADDR
  9503  1224  00000202           	ddw	__ccov189_end_blk4	; block 4 END_ADDR
  9504  1228  000001F8           	ddw	__ccov188_start_blk3	; block 3 START_ADDR
  9505  122C  000001FD           	ddw	__ccov188_end_blk3	; block 3 END_ADDR
  9506  1230  000001F3           	ddw	__ccov187_start_blk2	; block 2 START_ADDR
  9507  1234  000001F8           	ddw	__ccov187_end_blk2	; block 2 END_ADDR
  9508  1238  000001ED           	ddw	__ccov186_start_blk1	; block 1 START_ADDR
  9509  123C  000001F3           	ddw	__ccov186_end_blk1	; block 1 END_ADDR
  9510  1240  000001E9           	ddw	_fun_work	; block 0 START_ADDR
  9511  1244  000001ED           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9512                           
  9513                           ; Function: fun_work, coverage: 6,5,4,3,2,1,0
  9514  1248  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9515  124C  0000002B           	ddw	__ccovbit6_87/(0+8)	; CC_ADDR
  9516  1250  00000001           	ddw	1	; NUM_POINTS
  9517  1254  00000007           	ddw	__ccovbit6_87& (0+7)	; OFFSET
  9518  1258  00000000           	ddw	0	; Reserved
  9519  125C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9520  1260  00000007           	ddw	7	; NUM_RANGES
  9521  1264  00000207           	ddw	__ccov191_start_blk6	; block 6 START_ADDR
  9522  1268  0000020C           	ddw	__ccov191_end_blk6	; block 6 END_ADDR
  9523  126C  00000202           	ddw	__ccov190_start_blk5	; block 5 START_ADDR
  9524  1270  00000207           	ddw	__ccov190_end_blk5	; block 5 END_ADDR
  9525  1274  000001FD           	ddw	__ccov189_start_blk4	; block 4 START_ADDR
  9526  1278  00000202           	ddw	__ccov189_end_blk4	; block 4 END_ADDR
  9527  127C  000001F8           	ddw	__ccov188_start_blk3	; block 3 START_ADDR
  9528  1280  000001FD           	ddw	__ccov188_end_blk3	; block 3 END_ADDR
  9529  1284  000001F3           	ddw	__ccov187_start_blk2	; block 2 START_ADDR
  9530  1288  000001F8           	ddw	__ccov187_end_blk2	; block 2 END_ADDR
  9531  128C  000001ED           	ddw	__ccov186_start_blk1	; block 1 START_ADDR
  9532  1290  000001F3           	ddw	__ccov186_end_blk1	; block 1 END_ADDR
  9533  1294  000001E9           	ddw	_fun_work	; block 0 START_ADDR
  9534  1298  000001ED           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9535                           
  9536                           ; Function: fun_work, coverage: 8,7,6,5,4,3,2,1,0
  9537  129C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9538  12A0  0000002B           	ddw	__ccovbit8_88/(0+8)	; CC_ADDR
  9539  12A4  00000001           	ddw	1	; NUM_POINTS
  9540  12A8  00000006           	ddw	__ccovbit8_88& (0+7)	; OFFSET
  9541  12AC  00000000           	ddw	0	; Reserved
  9542  12B0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9543  12B4  00000009           	ddw	9	; NUM_RANGES
  9544  12B8  0000020E           	ddw	__ccov193_start_blk8	; block 8 START_ADDR
  9545  12BC  00000212           	ddw	__ccov193_end_blk8	; block 8 END_ADDR
  9546  12C0  0000020C           	ddw	__ccov192_start_blk7	; block 7 START_ADDR
  9547  12C4  0000020E           	ddw	__ccov192_end_blk7	; block 7 END_ADDR
  9548  12C8  00000207           	ddw	__ccov191_start_blk6	; block 6 START_ADDR
  9549  12CC  0000020C           	ddw	__ccov191_end_blk6	; block 6 END_ADDR
  9550  12D0  00000202           	ddw	__ccov190_start_blk5	; block 5 START_ADDR
  9551  12D4  00000207           	ddw	__ccov190_end_blk5	; block 5 END_ADDR
  9552  12D8  000001FD           	ddw	__ccov189_start_blk4	; block 4 START_ADDR
  9553  12DC  00000202           	ddw	__ccov189_end_blk4	; block 4 END_ADDR
  9554  12E0  000001F8           	ddw	__ccov188_start_blk3	; block 3 START_ADDR
  9555  12E4  000001FD           	ddw	__ccov188_end_blk3	; block 3 END_ADDR
  9556  12E8  000001F3           	ddw	__ccov187_start_blk2	; block 2 START_ADDR
  9557  12EC  000001F8           	ddw	__ccov187_end_blk2	; block 2 END_ADDR
  9558  12F0  000001ED           	ddw	__ccov186_start_blk1	; block 1 START_ADDR
  9559  12F4  000001F3           	ddw	__ccov186_end_blk1	; block 1 END_ADDR
  9560  12F8  000001E9           	ddw	_fun_work	; block 0 START_ADDR
  9561  12FC  000001ED           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9562                           
  9563                           ; Function: fun_work, coverage: 11,10,0
  9564  1300  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9565  1304  0000002B           	ddw	__ccovbit11_89/(0+8)	; CC_ADDR
  9566  1308  00000001           	ddw	1	; NUM_POINTS
  9567  130C  00000005           	ddw	__ccovbit11_89& (0+7)	; OFFSET
  9568  1310  00000000           	ddw	0	; Reserved
  9569  1314  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9570  1318  00000003           	ddw	3	; NUM_RANGES
  9571  131C  00000216           	ddw	__ccov195_start_blk11	; block 11 START_ADDR
  9572  1320  0000021C           	ddw	__ccov195_end_blk11	; block 11 END_ADDR
  9573  1324  00000212           	ddw	__ccov194_start_blk10	; block 10 START_ADDR
  9574  1328  00000216           	ddw	__ccov194_end_blk10	; block 10 END_ADDR
  9575  132C  000001E9           	ddw	_fun_work	; block 0 START_ADDR
  9576  1330  000001ED           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9577                           
  9578                           ; Function: fun_work, coverage: 12,11,10,0
  9579  1334  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9580  1338  0000002B           	ddw	__ccovbit12_90/(0+8)	; CC_ADDR
  9581  133C  00000001           	ddw	1	; NUM_POINTS
  9582  1340  00000004           	ddw	__ccovbit12_90& (0+7)	; OFFSET
  9583  1344  00000000           	ddw	0	; Reserved
  9584  1348  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9585  134C  00000004           	ddw	4	; NUM_RANGES
  9586  1350  0000021C           	ddw	__ccov196_start_blk12	; block 12 START_ADDR
  9587  1354  00000221           	ddw	__ccov196_end_blk12	; block 12 END_ADDR
  9588  1358  00000216           	ddw	__ccov195_start_blk11	; block 11 START_ADDR
  9589  135C  0000021C           	ddw	__ccov195_end_blk11	; block 11 END_ADDR
  9590  1360  00000212           	ddw	__ccov194_start_blk10	; block 10 START_ADDR
  9591  1364  00000216           	ddw	__ccov194_end_blk10	; block 10 END_ADDR
  9592  1368  000001E9           	ddw	_fun_work	; block 0 START_ADDR
  9593  136C  000001ED           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9594                           
  9595                           ; Function: fun_work, coverage: 13,12,11,10,0
  9596  1370  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9597  1374  0000002B           	ddw	__ccovbit13_91/(0+8)	; CC_ADDR
  9598  1378  00000001           	ddw	1	; NUM_POINTS
  9599  137C  00000003           	ddw	__ccovbit13_91& (0+7)	; OFFSET
  9600  1380  00000000           	ddw	0	; Reserved
  9601  1384  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9602  1388  00000005           	ddw	5	; NUM_RANGES
  9603  138C  00000221           	ddw	__ccov197_start_blk13	; block 13 START_ADDR
  9604  1390  00000226           	ddw	__ccov197_end_blk13	; block 13 END_ADDR
  9605  1394  0000021C           	ddw	__ccov196_start_blk12	; block 12 START_ADDR
  9606  1398  00000221           	ddw	__ccov196_end_blk12	; block 12 END_ADDR
  9607  139C  00000216           	ddw	__ccov195_start_blk11	; block 11 START_ADDR
  9608  13A0  0000021C           	ddw	__ccov195_end_blk11	; block 11 END_ADDR
  9609  13A4  00000212           	ddw	__ccov194_start_blk10	; block 10 START_ADDR
  9610  13A8  00000216           	ddw	__ccov194_end_blk10	; block 10 END_ADDR
  9611  13AC  000001E9           	ddw	_fun_work	; block 0 START_ADDR
  9612  13B0  000001ED           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9613                           
  9614                           ; Function: fun_work, coverage: 14,13,12,11,10,0
  9615  13B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9616  13B8  0000002B           	ddw	__ccovbit14_92/(0+8)	; CC_ADDR
  9617  13BC  00000001           	ddw	1	; NUM_POINTS
  9618  13C0  00000002           	ddw	__ccovbit14_92& (0+7)	; OFFSET
  9619  13C4  00000000           	ddw	0	; Reserved
  9620  13C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9621  13CC  00000006           	ddw	6	; NUM_RANGES
  9622  13D0  00000226           	ddw	__ccov198_start_blk14	; block 14 START_ADDR
  9623  13D4  0000022B           	ddw	__ccov198_end_blk14	; block 14 END_ADDR
  9624  13D8  00000221           	ddw	__ccov197_start_blk13	; block 13 START_ADDR
  9625  13DC  00000226           	ddw	__ccov197_end_blk13	; block 13 END_ADDR
  9626  13E0  0000021C           	ddw	__ccov196_start_blk12	; block 12 START_ADDR
  9627  13E4  00000221           	ddw	__ccov196_end_blk12	; block 12 END_ADDR
  9628  13E8  00000216           	ddw	__ccov195_start_blk11	; block 11 START_ADDR
  9629  13EC  0000021C           	ddw	__ccov195_end_blk11	; block 11 END_ADDR
  9630  13F0  00000212           	ddw	__ccov194_start_blk10	; block 10 START_ADDR
  9631  13F4  00000216           	ddw	__ccov194_end_blk10	; block 10 END_ADDR
  9632  13F8  000001E9           	ddw	_fun_work	; block 0 START_ADDR
  9633  13FC  000001ED           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9634                           
  9635                           ; Function: fun_work, coverage: 15,14,13,12,11,10,0
  9636  1400  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9637  1404  0000002B           	ddw	__ccovbit15_93/(0+8)	; CC_ADDR
  9638  1408  00000001           	ddw	1	; NUM_POINTS
  9639  140C  00000001           	ddw	__ccovbit15_93& (0+7)	; OFFSET
  9640  1410  00000000           	ddw	0	; Reserved
  9641  1414  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9642  1418  00000007           	ddw	7	; NUM_RANGES
  9643  141C  0000022B           	ddw	__ccov199_start_blk15	; block 15 START_ADDR
  9644  1420  00000230           	ddw	__ccov199_end_blk15	; block 15 END_ADDR
  9645  1424  00000226           	ddw	__ccov198_start_blk14	; block 14 START_ADDR
  9646  1428  0000022B           	ddw	__ccov198_end_blk14	; block 14 END_ADDR
  9647  142C  00000221           	ddw	__ccov197_start_blk13	; block 13 START_ADDR
  9648  1430  00000226           	ddw	__ccov197_end_blk13	; block 13 END_ADDR
  9649  1434  0000021C           	ddw	__ccov196_start_blk12	; block 12 START_ADDR
  9650  1438  00000221           	ddw	__ccov196_end_blk12	; block 12 END_ADDR
  9651  143C  00000216           	ddw	__ccov195_start_blk11	; block 11 START_ADDR
  9652  1440  0000021C           	ddw	__ccov195_end_blk11	; block 11 END_ADDR
  9653  1444  00000212           	ddw	__ccov194_start_blk10	; block 10 START_ADDR
  9654  1448  00000216           	ddw	__ccov194_end_blk10	; block 10 END_ADDR
  9655  144C  000001E9           	ddw	_fun_work	; block 0 START_ADDR
  9656  1450  000001ED           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9657                           
  9658                           ; Function: fun_work, coverage: 17,16,15,14,13,12,11,10,0
  9659  1454  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9660  1458  0000002B           	ddw	__ccovbit17_94/(0+8)	; CC_ADDR
  9661  145C  00000001           	ddw	1	; NUM_POINTS
  9662  1460  00000000           	ddw	__ccovbit17_94& (0+7)	; OFFSET
  9663  1464  00000000           	ddw	0	; Reserved
  9664  1468  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9665  146C  00000009           	ddw	9	; NUM_RANGES
  9666  1470  00000234           	ddw	__ccov201_start_blk17	; block 17 START_ADDR
  9667  1474  00000238           	ddw	__ccov201_end_blk17	; block 17 END_ADDR
  9668  1478  00000230           	ddw	__ccov200_start_blk16	; block 16 START_ADDR
  9669  147C  00000234           	ddw	__ccov200_end_blk16	; block 16 END_ADDR
  9670  1480  0000022B           	ddw	__ccov199_start_blk15	; block 15 START_ADDR
  9671  1484  00000230           	ddw	__ccov199_end_blk15	; block 15 END_ADDR
  9672  1488  00000226           	ddw	__ccov198_start_blk14	; block 14 START_ADDR
  9673  148C  0000022B           	ddw	__ccov198_end_blk14	; block 14 END_ADDR
  9674  1490  00000221           	ddw	__ccov197_start_blk13	; block 13 START_ADDR
  9675  1494  00000226           	ddw	__ccov197_end_blk13	; block 13 END_ADDR
  9676  1498  0000021C           	ddw	__ccov196_start_blk12	; block 12 START_ADDR
  9677  149C  00000221           	ddw	__ccov196_end_blk12	; block 12 END_ADDR
  9678  14A0  00000216           	ddw	__ccov195_start_blk11	; block 11 START_ADDR
  9679  14A4  0000021C           	ddw	__ccov195_end_blk11	; block 11 END_ADDR
  9680  14A8  00000212           	ddw	__ccov194_start_blk10	; block 10 START_ADDR
  9681  14AC  00000216           	ddw	__ccov194_end_blk10	; block 10 END_ADDR
  9682  14B0  000001E9           	ddw	_fun_work	; block 0 START_ADDR
  9683  14B4  000001ED           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9684                           
  9685                           ; Function: fun_work, coverage: 19,10,0
  9686  14B8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9687  14BC  0000002A           	ddw	__ccovbit19_95/(0+8)	; CC_ADDR
  9688  14C0  00000001           	ddw	1	; NUM_POINTS
  9689  14C4  00000007           	ddw	__ccovbit19_95& (0+7)	; OFFSET
  9690  14C8  00000000           	ddw	0	; Reserved
  9691  14CC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9692  14D0  00000003           	ddw	3	; NUM_RANGES
  9693  14D4  00000238           	ddw	__ccov202_start_blk19	; block 19 START_ADDR
  9694  14D8  0000023B           	ddw	__end_of_fun_work	; block 19 END_ADDR
  9695  14DC  00000212           	ddw	__ccov194_start_blk10	; block 10 START_ADDR
  9696  14E0  00000216           	ddw	__ccov194_end_blk10	; block 10 END_ADDR
  9697  14E4  000001E9           	ddw	_fun_work	; block 0 START_ADDR
  9698  14E8  000001ED           	ddw	__ccov185_end_blk0	; block 0 END_ADDR
  9699                           
  9700                           ; Function: switch_wm, coverage: 1,0
  9701  14EC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9702  14F0  0000002A           	ddw	__ccovbit1_96/(0+8)	; CC_ADDR
  9703  14F4  00000001           	ddw	1	; NUM_POINTS
  9704  14F8  00000006           	ddw	__ccovbit1_96& (0+7)	; OFFSET
  9705  14FC  00000000           	ddw	0	; Reserved
  9706  1500  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9707  1504  00000002           	ddw	2	; NUM_RANGES
  9708  1508  000003C2           	ddw	__ccov204_start_blk1	; block 1 START_ADDR
  9709  150C  000003C8           	ddw	__ccov204_end_blk1	; block 1 END_ADDR
  9710  1510  000003BE           	ddw	_switch_wm	; block 0 START_ADDR
  9711  1514  000003C2           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9712                           
  9713                           ; Function: switch_wm, coverage: 4,3,2,1,0
  9714  1518  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9715  151C  0000002A           	ddw	__ccovbit4_97/(0+8)	; CC_ADDR
  9716  1520  00000001           	ddw	1	; NUM_POINTS
  9717  1524  00000005           	ddw	__ccovbit4_97& (0+7)	; OFFSET
  9718  1528  00000000           	ddw	0	; Reserved
  9719  152C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9720  1530  00000005           	ddw	5	; NUM_RANGES
  9721  1534  000003CD           	ddw	__ccov207_start_blk4	; block 4 START_ADDR
  9722  1538  000003D4           	ddw	__ccov207_end_blk4	; block 4 END_ADDR
  9723  153C  000003CA           	ddw	__ccov206_start_blk3	; block 3 START_ADDR
  9724  1540  000003CD           	ddw	__ccov206_end_blk3	; block 3 END_ADDR
  9725  1544  000003C8           	ddw	__ccov205_start_blk2	; block 2 START_ADDR
  9726  1548  000003CA           	ddw	__ccov205_end_blk2	; block 2 END_ADDR
  9727  154C  000003C2           	ddw	__ccov204_start_blk1	; block 1 START_ADDR
  9728  1550  000003C8           	ddw	__ccov204_end_blk1	; block 1 END_ADDR
  9729  1554  000003BE           	ddw	_switch_wm	; block 0 START_ADDR
  9730  1558  000003C2           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9731                           
  9732                           ; Function: switch_wm, coverage: 6,0
  9733  155C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9734  1560  0000002A           	ddw	__ccovbit6_98/(0+8)	; CC_ADDR
  9735  1564  00000001           	ddw	1	; NUM_POINTS
  9736  1568  00000004           	ddw	__ccovbit6_98& (0+7)	; OFFSET
  9737  156C  00000000           	ddw	0	; Reserved
  9738  1570  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9739  1574  00000002           	ddw	2	; NUM_RANGES
  9740  1578  000003D4           	ddw	__ccov208_start_blk6	; block 6 START_ADDR
  9741  157C  000003DA           	ddw	__ccov208_end_blk6	; block 6 END_ADDR
  9742  1580  000003BE           	ddw	_switch_wm	; block 0 START_ADDR
  9743  1584  000003C2           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9744                           
  9745                           ; Function: switch_wm, coverage: 7,6,0
  9746  1588  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9747  158C  0000002A           	ddw	__ccovbit7_99/(0+8)	; CC_ADDR
  9748  1590  00000001           	ddw	1	; NUM_POINTS
  9749  1594  00000003           	ddw	__ccovbit7_99& (0+7)	; OFFSET
  9750  1598  00000000           	ddw	0	; Reserved
  9751  159C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9752  15A0  00000003           	ddw	3	; NUM_RANGES
  9753  15A4  000003DA           	ddw	__ccov209_start_blk7	; block 7 START_ADDR
  9754  15A8  000003DF           	ddw	__ccov209_end_blk7	; block 7 END_ADDR
  9755  15AC  000003D4           	ddw	__ccov208_start_blk6	; block 6 START_ADDR
  9756  15B0  000003DA           	ddw	__ccov208_end_blk6	; block 6 END_ADDR
  9757  15B4  000003BE           	ddw	_switch_wm	; block 0 START_ADDR
  9758  15B8  000003C2           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9759                           
  9760                           ; Function: switch_wm, coverage: 10,9,8,7,6,0
  9761  15BC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9762  15C0  0000002A           	ddw	__ccovbit10_100/(0+8)	; CC_ADDR
  9763  15C4  00000001           	ddw	1	; NUM_POINTS
  9764  15C8  00000002           	ddw	__ccovbit10_100& (0+7)	; OFFSET
  9765  15CC  00000000           	ddw	0	; Reserved
  9766  15D0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9767  15D4  00000006           	ddw	6	; NUM_RANGES
  9768  15D8  000003E4           	ddw	__ccov212_start_blk10	; block 10 START_ADDR
  9769  15DC  000003E8           	ddw	__ccov212_end_blk10	; block 10 END_ADDR
  9770  15E0  000003E1           	ddw	__ccov211_start_blk9	; block 9 START_ADDR
  9771  15E4  000003E4           	ddw	__ccov211_end_blk9	; block 9 END_ADDR
  9772  15E8  000003DF           	ddw	__ccov210_start_blk8	; block 8 START_ADDR
  9773  15EC  000003E1           	ddw	__ccov210_end_blk8	; block 8 END_ADDR
  9774  15F0  000003DA           	ddw	__ccov209_start_blk7	; block 7 START_ADDR
  9775  15F4  000003DF           	ddw	__ccov209_end_blk7	; block 7 END_ADDR
  9776  15F8  000003D4           	ddw	__ccov208_start_blk6	; block 6 START_ADDR
  9777  15FC  000003DA           	ddw	__ccov208_end_blk6	; block 6 END_ADDR
  9778  1600  000003BE           	ddw	_switch_wm	; block 0 START_ADDR
  9779  1604  000003C2           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9780                           
  9781                           ; Function: switch_wm, coverage: 14,0
  9782  1608  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9783  160C  0000002A           	ddw	__ccovbit14_101/(0+8)	; CC_ADDR
  9784  1610  00000001           	ddw	1	; NUM_POINTS
  9785  1614  00000001           	ddw	__ccovbit14_101& (0+7)	; OFFSET
  9786  1618  00000000           	ddw	0	; Reserved
  9787  161C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9788  1620  00000002           	ddw	2	; NUM_RANGES
  9789  1624  000003E8           	ddw	__ccov213_start_blk14	; block 14 START_ADDR
  9790  1628  000003EA           	ddw	__end_of_switch_wm	; block 14 END_ADDR
  9791  162C  000003BE           	ddw	_switch_wm	; block 0 START_ADDR
  9792  1630  000003C2           	ddw	__ccov203_end_blk0	; block 0 END_ADDR
  9793                           
  9794                           ; Function: autorotation_work, coverage: 1,0
  9795  1634  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9796  1638  0000002A           	ddw	__ccovbit1_102/(0+8)	; CC_ADDR
  9797  163C  00000001           	ddw	1	; NUM_POINTS
  9798  1640  00000000           	ddw	__ccovbit1_102& (0+7)	; OFFSET
  9799  1644  00000000           	ddw	0	; Reserved
  9800  1648  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9801  164C  00000002           	ddw	2	; NUM_RANGES
  9802  1650  0000019E           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9803  1654  000001A3           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9804  1658  0000018F           	ddw	_autorotation_work	; block 0 START_ADDR
  9805  165C  0000019E           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9806                           
  9807                           ; Function: autorotation_work, coverage: 2,1,0
  9808  1660  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9809  1664  00000029           	ddw	__ccovbit2_103/(0+8)	; CC_ADDR
  9810  1668  00000001           	ddw	1	; NUM_POINTS
  9811  166C  00000007           	ddw	__ccovbit2_103& (0+7)	; OFFSET
  9812  1670  00000000           	ddw	0	; Reserved
  9813  1674  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9814  1678  00000003           	ddw	3	; NUM_RANGES
  9815  167C  000001A3           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9816  1680  000001A8           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9817  1684  0000019E           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9818  1688  000001A3           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9819  168C  0000018F           	ddw	_autorotation_work	; block 0 START_ADDR
  9820  1690  0000019E           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9821                           
  9822                           ; Function: autorotation_work, coverage: 3,2,1,0
  9823  1694  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9824  1698  00000029           	ddw	__ccovbit3_104/(0+8)	; CC_ADDR
  9825  169C  00000001           	ddw	1	; NUM_POINTS
  9826  16A0  00000006           	ddw	__ccovbit3_104& (0+7)	; OFFSET
  9827  16A4  00000000           	ddw	0	; Reserved
  9828  16A8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9829  16AC  00000004           	ddw	4	; NUM_RANGES
  9830  16B0  000001A8           	ddw	__ccov217_start_blk3	; block 3 START_ADDR
  9831  16B4  000001AD           	ddw	__ccov217_end_blk3	; block 3 END_ADDR
  9832  16B8  000001A3           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9833  16BC  000001A8           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9834  16C0  0000019E           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9835  16C4  000001A3           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9836  16C8  0000018F           	ddw	_autorotation_work	; block 0 START_ADDR
  9837  16CC  0000019E           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9838                           
  9839                           ; Function: autorotation_work, coverage: 4,3,2,1,0
  9840  16D0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9841  16D4  00000029           	ddw	__ccovbit4_105/(0+8)	; CC_ADDR
  9842  16D8  00000001           	ddw	1	; NUM_POINTS
  9843  16DC  00000005           	ddw	__ccovbit4_105& (0+7)	; OFFSET
  9844  16E0  00000000           	ddw	0	; Reserved
  9845  16E4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9846  16E8  00000005           	ddw	5	; NUM_RANGES
  9847  16EC  000001AD           	ddw	__ccov218_start_blk4	; block 4 START_ADDR
  9848  16F0  000001B2           	ddw	__ccov218_end_blk4	; block 4 END_ADDR
  9849  16F4  000001A8           	ddw	__ccov217_start_blk3	; block 3 START_ADDR
  9850  16F8  000001AD           	ddw	__ccov217_end_blk3	; block 3 END_ADDR
  9851  16FC  000001A3           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9852  1700  000001A8           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9853  1704  0000019E           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9854  1708  000001A3           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9855  170C  0000018F           	ddw	_autorotation_work	; block 0 START_ADDR
  9856  1710  0000019E           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9857                           
  9858                           ; Function: autorotation_work, coverage: 7,6,5,4,3,2,1,0
  9859  1714  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9860  1718  00000029           	ddw	__ccovbit7_106/(0+8)	; CC_ADDR
  9861  171C  00000001           	ddw	1	; NUM_POINTS
  9862  1720  00000004           	ddw	__ccovbit7_106& (0+7)	; OFFSET
  9863  1724  00000000           	ddw	0	; Reserved
  9864  1728  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9865  172C  00000008           	ddw	8	; NUM_RANGES
  9866  1730  000001B7           	ddw	__ccov221_start_blk7	; block 7 START_ADDR
  9867  1734  000001BF           	ddw	__ccov221_end_blk7	; block 7 END_ADDR
  9868  1738  000001B5           	ddw	__ccov220_start_blk6	; block 6 START_ADDR
  9869  173C  000001B7           	ddw	__ccov220_end_blk6	; block 6 END_ADDR
  9870  1740  000001B2           	ddw	__ccov219_start_blk5	; block 5 START_ADDR
  9871  1744  000001B5           	ddw	__ccov219_end_blk5	; block 5 END_ADDR
  9872  1748  000001AD           	ddw	__ccov218_start_blk4	; block 4 START_ADDR
  9873  174C  000001B2           	ddw	__ccov218_end_blk4	; block 4 END_ADDR
  9874  1750  000001A8           	ddw	__ccov217_start_blk3	; block 3 START_ADDR
  9875  1754  000001AD           	ddw	__ccov217_end_blk3	; block 3 END_ADDR
  9876  1758  000001A3           	ddw	__ccov216_start_blk2	; block 2 START_ADDR
  9877  175C  000001A8           	ddw	__ccov216_end_blk2	; block 2 END_ADDR
  9878  1760  0000019E           	ddw	__ccov215_start_blk1	; block 1 START_ADDR
  9879  1764  000001A3           	ddw	__ccov215_end_blk1	; block 1 END_ADDR
  9880  1768  0000018F           	ddw	_autorotation_work	; block 0 START_ADDR
  9881  176C  0000019E           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9882                           
  9883                           ; Function: autorotation_work, coverage: 10,9,0
  9884  1770  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9885  1774  00000029           	ddw	__ccovbit10_107/(0+8)	; CC_ADDR
  9886  1778  00000001           	ddw	1	; NUM_POINTS
  9887  177C  00000003           	ddw	__ccovbit10_107& (0+7)	; OFFSET
  9888  1780  00000000           	ddw	0	; Reserved
  9889  1784  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9890  1788  00000003           	ddw	3	; NUM_RANGES
  9891  178C  000001CD           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9892  1790  000001D2           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9893  1794  000001BF           	ddw	__ccov222_start_blk9	; block 9 START_ADDR
  9894  1798  000001CD           	ddw	__ccov222_end_blk9	; block 9 END_ADDR
  9895  179C  0000018F           	ddw	_autorotation_work	; block 0 START_ADDR
  9896  17A0  0000019E           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9897                           
  9898                           ; Function: autorotation_work, coverage: 11,10,9,0
  9899  17A4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9900  17A8  00000029           	ddw	__ccovbit11_108/(0+8)	; CC_ADDR
  9901  17AC  00000001           	ddw	1	; NUM_POINTS
  9902  17B0  00000002           	ddw	__ccovbit11_108& (0+7)	; OFFSET
  9903  17B4  00000000           	ddw	0	; Reserved
  9904  17B8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9905  17BC  00000004           	ddw	4	; NUM_RANGES
  9906  17C0  000001D2           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9907  17C4  000001D7           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9908  17C8  000001CD           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9909  17CC  000001D2           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9910  17D0  000001BF           	ddw	__ccov222_start_blk9	; block 9 START_ADDR
  9911  17D4  000001CD           	ddw	__ccov222_end_blk9	; block 9 END_ADDR
  9912  17D8  0000018F           	ddw	_autorotation_work	; block 0 START_ADDR
  9913  17DC  0000019E           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9914                           
  9915                           ; Function: autorotation_work, coverage: 12,11,10,9,0
  9916  17E0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9917  17E4  00000029           	ddw	__ccovbit12_109/(0+8)	; CC_ADDR
  9918  17E8  00000001           	ddw	1	; NUM_POINTS
  9919  17EC  00000001           	ddw	__ccovbit12_109& (0+7)	; OFFSET
  9920  17F0  00000000           	ddw	0	; Reserved
  9921  17F4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9922  17F8  00000005           	ddw	5	; NUM_RANGES
  9923  17FC  000001D7           	ddw	__ccov225_start_blk12	; block 12 START_ADDR
  9924  1800  000001DC           	ddw	__ccov225_end_blk12	; block 12 END_ADDR
  9925  1804  000001D2           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9926  1808  000001D7           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9927  180C  000001CD           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9928  1810  000001D2           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9929  1814  000001BF           	ddw	__ccov222_start_blk9	; block 9 START_ADDR
  9930  1818  000001CD           	ddw	__ccov222_end_blk9	; block 9 END_ADDR
  9931  181C  0000018F           	ddw	_autorotation_work	; block 0 START_ADDR
  9932  1820  0000019E           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9933                           
  9934                           ; Function: autorotation_work, coverage: 13,12,11,10,9,0
  9935  1824  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9936  1828  00000029           	ddw	__ccovbit13_110/(0+8)	; CC_ADDR
  9937  182C  00000001           	ddw	1	; NUM_POINTS
  9938  1830  00000000           	ddw	__ccovbit13_110& (0+7)	; OFFSET
  9939  1834  00000000           	ddw	0	; Reserved
  9940  1838  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9941  183C  00000006           	ddw	6	; NUM_RANGES
  9942  1840  000001DC           	ddw	__ccov226_start_blk13	; block 13 START_ADDR
  9943  1844  000001E1           	ddw	__ccov226_end_blk13	; block 13 END_ADDR
  9944  1848  000001D7           	ddw	__ccov225_start_blk12	; block 12 START_ADDR
  9945  184C  000001DC           	ddw	__ccov225_end_blk12	; block 12 END_ADDR
  9946  1850  000001D2           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9947  1854  000001D7           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9948  1858  000001CD           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9949  185C  000001D2           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9950  1860  000001BF           	ddw	__ccov222_start_blk9	; block 9 START_ADDR
  9951  1864  000001CD           	ddw	__ccov222_end_blk9	; block 9 END_ADDR
  9952  1868  0000018F           	ddw	_autorotation_work	; block 0 START_ADDR
  9953  186C  0000019E           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9954                           
  9955                           ; Function: autorotation_work, coverage: 15,14,13,12,11,10,9,0
  9956  1870  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9957  1874  00000028           	ddw	__ccovbit15_111/(0+8)	; CC_ADDR
  9958  1878  00000001           	ddw	1	; NUM_POINTS
  9959  187C  00000007           	ddw	__ccovbit15_111& (0+7)	; OFFSET
  9960  1880  00000000           	ddw	0	; Reserved
  9961  1884  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9962  1888  00000008           	ddw	8	; NUM_RANGES
  9963  188C  000001E4           	ddw	__ccov228_start_blk15	; block 15 START_ADDR
  9964  1890  000001E7           	ddw	__ccov228_end_blk15	; block 15 END_ADDR
  9965  1894  000001E1           	ddw	__ccov227_start_blk14	; block 14 START_ADDR
  9966  1898  000001E4           	ddw	__ccov227_end_blk14	; block 14 END_ADDR
  9967  189C  000001DC           	ddw	__ccov226_start_blk13	; block 13 START_ADDR
  9968  18A0  000001E1           	ddw	__ccov226_end_blk13	; block 13 END_ADDR
  9969  18A4  000001D7           	ddw	__ccov225_start_blk12	; block 12 START_ADDR
  9970  18A8  000001DC           	ddw	__ccov225_end_blk12	; block 12 END_ADDR
  9971  18AC  000001D2           	ddw	__ccov224_start_blk11	; block 11 START_ADDR
  9972  18B0  000001D7           	ddw	__ccov224_end_blk11	; block 11 END_ADDR
  9973  18B4  000001CD           	ddw	__ccov223_start_blk10	; block 10 START_ADDR
  9974  18B8  000001D2           	ddw	__ccov223_end_blk10	; block 10 END_ADDR
  9975  18BC  000001BF           	ddw	__ccov222_start_blk9	; block 9 START_ADDR
  9976  18C0  000001CD           	ddw	__ccov222_end_blk9	; block 9 END_ADDR
  9977  18C4  0000018F           	ddw	_autorotation_work	; block 0 START_ADDR
  9978  18C8  0000019E           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9979                           
  9980                           ; Function: autorotation_work, coverage: 17,9,0
  9981  18CC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9982  18D0  00000028           	ddw	__ccovbit17_112/(0+8)	; CC_ADDR
  9983  18D4  00000001           	ddw	1	; NUM_POINTS
  9984  18D8  00000006           	ddw	__ccovbit17_112& (0+7)	; OFFSET
  9985  18DC  00000000           	ddw	0	; Reserved
  9986  18E0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
  9987  18E4  00000003           	ddw	3	; NUM_RANGES
  9988  18E8  000001E7           	ddw	__ccov229_start_blk17	; block 17 START_ADDR
  9989  18EC  000001E9           	ddw	__end_of_autorotation_work	; block 17 END_ADDR
  9990  18F0  000001BF           	ddw	__ccov222_start_blk9	; block 9 START_ADDR
  9991  18F4  000001CD           	ddw	__ccov222_end_blk9	; block 9 END_ADDR
  9992  18F8  0000018F           	ddw	_autorotation_work	; block 0 START_ADDR
  9993  18FC  0000019E           	ddw	__ccov214_end_blk0	; block 0 END_ADDR
  9994                           
  9995                           ; Function: minute_tick, coverage: 1,0
  9996  1900  00000000           	ddw	0	; CC_ADDR_SPACE=Data
  9997  1904  00000028           	ddw	__ccovbit1_113/(0+8)	; CC_ADDR
  9998  1908  00000001           	ddw	1	; NUM_POINTS
  9999  190C  00000005           	ddw	__ccovbit1_113& (0+7)	; OFFSET
 10000  1910  00000000           	ddw	0	; Reserved
 10001  1914  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10002  1918  00000002           	ddw	2	; NUM_RANGES
 10003  191C  0000054F           	ddw	__ccov231_start_blk1	; block 1 START_ADDR
 10004  1920  00000553           	ddw	__ccov231_end_blk1	; block 1 END_ADDR
 10005  1924  00000549           	ddw	_minute_tick	; block 0 START_ADDR
 10006  1928  0000054F           	ddw	__ccov230_end_blk0	; block 0 END_ADDR
 10007                           
 10008                           ; Function: minute_tick, coverage: 3,0
 10009  192C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10010  1930  00000028           	ddw	__ccovbit3_114/(0+8)	; CC_ADDR
 10011  1934  00000001           	ddw	1	; NUM_POINTS
 10012  1938  00000004           	ddw	__ccovbit3_114& (0+7)	; OFFSET
 10013  193C  00000000           	ddw	0	; Reserved
 10014  1940  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10015  1944  00000002           	ddw	2	; NUM_RANGES
 10016  1948  00000553           	ddw	__ccov232_start_blk3	; block 3 START_ADDR
 10017  194C  00000559           	ddw	__ccov232_end_blk3	; block 3 END_ADDR
 10018  1950  00000549           	ddw	_minute_tick	; block 0 START_ADDR
 10019  1954  0000054F           	ddw	__ccov230_end_blk0	; block 0 END_ADDR
 10020                           
 10021                           ; Function: minute_tick, coverage: 5,4,3,0
 10022  1958  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10023  195C  00000028           	ddw	__ccovbit5_115/(0+8)	; CC_ADDR
 10024  1960  00000001           	ddw	1	; NUM_POINTS
 10025  1964  00000003           	ddw	__ccovbit5_115& (0+7)	; OFFSET
 10026  1968  00000000           	ddw	0	; Reserved
 10027  196C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10028  1970  00000004           	ddw	4	; NUM_RANGES
 10029  1974  0000055A           	ddw	__ccov234_start_blk5	; block 5 START_ADDR
 10030  1978  0000055F           	ddw	__ccov234_end_blk5	; block 5 END_ADDR
 10031  197C  00000559           	ddw	__ccov233_start_blk4	; block 4 START_ADDR
 10032  1980  0000055A           	ddw	__ccov233_end_blk4	; block 4 END_ADDR
 10033  1984  00000553           	ddw	__ccov232_start_blk3	; block 3 START_ADDR
 10034  1988  00000559           	ddw	__ccov232_end_blk3	; block 3 END_ADDR
 10035  198C  00000549           	ddw	_minute_tick	; block 0 START_ADDR
 10036  1990  0000054F           	ddw	__ccov230_end_blk0	; block 0 END_ADDR
 10037                           
 10038                           ; Function: minute_tick, coverage: 8,0
 10039  1994  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10040  1998  00000028           	ddw	__ccovbit8_116/(0+8)	; CC_ADDR
 10041  199C  00000001           	ddw	1	; NUM_POINTS
 10042  19A0  00000002           	ddw	__ccovbit8_116& (0+7)	; OFFSET
 10043  19A4  00000000           	ddw	0	; Reserved
 10044  19A8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10045  19AC  00000002           	ddw	2	; NUM_RANGES
 10046  19B0  0000055F           	ddw	__ccov235_start_blk8	; block 8 START_ADDR
 10047  19B4  00000561           	ddw	__end_of_minute_tick	; block 8 END_ADDR
 10048  19B8  00000549           	ddw	_minute_tick	; block 0 START_ADDR
 10049  19BC  0000054F           	ddw	__ccov230_end_blk0	; block 0 END_ADDR
 10050                           
 10051                           ; Function: sec_30_work, coverage: 1,0
 10052  19C0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10053  19C4  00000028           	ddw	__ccovbit1_117/(0+8)	; CC_ADDR
 10054  19C8  00000001           	ddw	1	; NUM_POINTS
 10055  19CC  00000001           	ddw	__ccovbit1_117& (0+7)	; OFFSET
 10056  19D0  00000000           	ddw	0	; Reserved
 10057  19D4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10058  19D8  00000002           	ddw	2	; NUM_RANGES
 10059  19DC  00000643           	ddw	__ccov237_start_blk1	; block 1 START_ADDR
 10060  19E0  00000647           	ddw	__ccov237_end_blk1	; block 1 END_ADDR
 10061  19E4  0000063F           	ddw	_sec_30_work	; block 0 START_ADDR
 10062  19E8  00000643           	ddw	__ccov236_end_blk0	; block 0 END_ADDR
 10063                           
 10064                           ; Function: sec_30_work, coverage: 3,0
 10065  19EC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10066  19F0  00000028           	ddw	__ccovbit3_118/(0+8)	; CC_ADDR
 10067  19F4  00000001           	ddw	1	; NUM_POINTS
 10068  19F8  00000000           	ddw	__ccovbit3_118& (0+7)	; OFFSET
 10069  19FC  00000000           	ddw	0	; Reserved
 10070  1A00  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10071  1A04  00000002           	ddw	2	; NUM_RANGES
 10072  1A08  00000647           	ddw	__ccov238_start_blk3	; block 3 START_ADDR
 10073  1A0C  0000064D           	ddw	__ccov238_end_blk3	; block 3 END_ADDR
 10074  1A10  0000063F           	ddw	_sec_30_work	; block 0 START_ADDR
 10075  1A14  00000643           	ddw	__ccov236_end_blk0	; block 0 END_ADDR
 10076                           
 10077                           ; Function: sec_30_work, coverage: 5,0
 10078  1A18  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10079  1A1C  00000027           	ddw	__ccovbit5_119/(0+8)	; CC_ADDR
 10080  1A20  00000001           	ddw	1	; NUM_POINTS
 10081  1A24  00000007           	ddw	__ccovbit5_119& (0+7)	; OFFSET
 10082  1A28  00000000           	ddw	0	; Reserved
 10083  1A2C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10084  1A30  00000002           	ddw	2	; NUM_RANGES
 10085  1A34  0000064D           	ddw	__ccov239_start_blk5	; block 5 START_ADDR
 10086  1A38  0000064F           	ddw	__end_of_sec_30_work	; block 5 END_ADDR
 10087  1A3C  0000063F           	ddw	_sec_30_work	; block 0 START_ADDR
 10088  1A40  00000643           	ddw	__ccov236_end_blk0	; block 0 END_ADDR
 10089                           
 10090                           ; Function: sec_work, coverage: 3,2,1,0
 10091  1A44  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10092  1A48  00000027           	ddw	__ccovbit3_120/(0+8)	; CC_ADDR
 10093  1A4C  00000001           	ddw	1	; NUM_POINTS
 10094  1A50  00000006           	ddw	__ccovbit3_120& (0+7)	; OFFSET
 10095  1A54  00000000           	ddw	0	; Reserved
 10096  1A58  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10097  1A5C  00000004           	ddw	4	; NUM_RANGES
 10098  1A60  00000059           	ddw	__ccov243_start_blk3	; block 3 START_ADDR
 10099  1A64  0000005D           	ddw	__ccov243_end_blk3	; block 3 END_ADDR
 10100  1A68  00000054           	ddw	__ccov242_start_blk2	; block 2 START_ADDR
 10101  1A6C  00000059           	ddw	__ccov242_end_blk2	; block 2 END_ADDR
 10102  1A70  00000050           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
 10103  1A74  00000054           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
 10104  1A78  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10105  1A7C  00000050           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
 10106                           
 10107                           ; Function: sec_work, coverage: 4,2,1,0
 10108  1A80  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10109  1A84  00000027           	ddw	__ccovbit4_121/(0+8)	; CC_ADDR
 10110  1A88  00000001           	ddw	1	; NUM_POINTS
 10111  1A8C  00000005           	ddw	__ccovbit4_121& (0+7)	; OFFSET
 10112  1A90  00000000           	ddw	0	; Reserved
 10113  1A94  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10114  1A98  00000004           	ddw	4	; NUM_RANGES
 10115  1A9C  0000005D           	ddw	__ccov244_start_blk4	; block 4 START_ADDR
 10116  1AA0  0000005F           	ddw	__ccov244_end_blk4	; block 4 END_ADDR
 10117  1AA4  00000054           	ddw	__ccov242_start_blk2	; block 2 START_ADDR
 10118  1AA8  00000059           	ddw	__ccov242_end_blk2	; block 2 END_ADDR
 10119  1AAC  00000050           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
 10120  1AB0  00000054           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
 10121  1AB4  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10122  1AB8  00000050           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
 10123                           
 10124                           ; Function: sec_work, coverage: 8,7,6,1,0
 10125  1ABC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10126  1AC0  00000027           	ddw	__ccovbit8_122/(0+8)	; CC_ADDR
 10127  1AC4  00000001           	ddw	1	; NUM_POINTS
 10128  1AC8  00000004           	ddw	__ccovbit8_122& (0+7)	; OFFSET
 10129  1ACC  00000000           	ddw	0	; Reserved
 10130  1AD0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10131  1AD4  00000005           	ddw	5	; NUM_RANGES
 10132  1AD8  00000067           	ddw	__ccov247_start_blk8	; block 8 START_ADDR
 10133  1ADC  00000072           	ddw	__ccov247_end_blk8	; block 8 END_ADDR
 10134  1AE0  00000063           	ddw	__ccov246_start_blk7	; block 7 START_ADDR
 10135  1AE4  00000067           	ddw	__ccov246_end_blk7	; block 7 END_ADDR
 10136  1AE8  0000005F           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
 10137  1AEC  00000063           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
 10138  1AF0  00000050           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
 10139  1AF4  00000054           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
 10140  1AF8  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10141  1AFC  00000050           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
 10142                           
 10143                           ; Function: sec_work, coverage: 10,7,6,1,0
 10144  1B00  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10145  1B04  00000027           	ddw	__ccovbit10_123/(0+8)	; CC_ADDR
 10146  1B08  00000001           	ddw	1	; NUM_POINTS
 10147  1B0C  00000003           	ddw	__ccovbit10_123& (0+7)	; OFFSET
 10148  1B10  00000000           	ddw	0	; Reserved
 10149  1B14  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10150  1B18  00000005           	ddw	5	; NUM_RANGES
 10151  1B1C  00000072           	ddw	__ccov248_start_blk10	; block 10 START_ADDR
 10152  1B20  00000076           	ddw	__ccov248_end_blk10	; block 10 END_ADDR
 10153  1B24  00000063           	ddw	__ccov246_start_blk7	; block 7 START_ADDR
 10154  1B28  00000067           	ddw	__ccov246_end_blk7	; block 7 END_ADDR
 10155  1B2C  0000005F           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
 10156  1B30  00000063           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
 10157  1B34  00000050           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
 10158  1B38  00000054           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
 10159  1B3C  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10160  1B40  00000050           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
 10161                           
 10162                           ; Function: sec_work, coverage: 14,13,12,6,1,0
 10163  1B44  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10164  1B48  00000027           	ddw	__ccovbit14_124/(0+8)	; CC_ADDR
 10165  1B4C  00000001           	ddw	1	; NUM_POINTS
 10166  1B50  00000002           	ddw	__ccovbit14_124& (0+7)	; OFFSET
 10167  1B54  00000000           	ddw	0	; Reserved
 10168  1B58  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10169  1B5C  00000006           	ddw	6	; NUM_RANGES
 10170  1B60  00000081           	ddw	__ccov251_start_blk14	; block 14 START_ADDR
 10171  1B64  00000088           	ddw	__ccov251_end_blk14	; block 14 END_ADDR
 10172  1B68  0000007A           	ddw	__ccov250_start_blk13	; block 13 START_ADDR
 10173  1B6C  00000081           	ddw	__ccov250_end_blk13	; block 13 END_ADDR
 10174  1B70  00000076           	ddw	__ccov249_start_blk12	; block 12 START_ADDR
 10175  1B74  0000007A           	ddw	__ccov249_end_blk12	; block 12 END_ADDR
 10176  1B78  0000005F           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
 10177  1B7C  00000063           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
 10178  1B80  00000050           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
 10179  1B84  00000054           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
 10180  1B88  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10181  1B8C  00000050           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
 10182                           
 10183                           ; Function: sec_work, coverage: 16,13,12,6,1,0
 10184  1B90  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10185  1B94  00000027           	ddw	__ccovbit16_125/(0+8)	; CC_ADDR
 10186  1B98  00000001           	ddw	1	; NUM_POINTS
 10187  1B9C  00000001           	ddw	__ccovbit16_125& (0+7)	; OFFSET
 10188  1BA0  00000000           	ddw	0	; Reserved
 10189  1BA4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10190  1BA8  00000006           	ddw	6	; NUM_RANGES
 10191  1BAC  00000088           	ddw	__ccov252_start_blk16	; block 16 START_ADDR
 10192  1BB0  0000008C           	ddw	__ccov252_end_blk16	; block 16 END_ADDR
 10193  1BB4  0000007A           	ddw	__ccov250_start_blk13	; block 13 START_ADDR
 10194  1BB8  00000081           	ddw	__ccov250_end_blk13	; block 13 END_ADDR
 10195  1BBC  00000076           	ddw	__ccov249_start_blk12	; block 12 START_ADDR
 10196  1BC0  0000007A           	ddw	__ccov249_end_blk12	; block 12 END_ADDR
 10197  1BC4  0000005F           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
 10198  1BC8  00000063           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
 10199  1BCC  00000050           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
 10200  1BD0  00000054           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
 10201  1BD4  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10202  1BD8  00000050           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
 10203                           
 10204                           ; Function: sec_work, coverage: 18,13,12,6,1,0
 10205  1BDC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10206  1BE0  00000027           	ddw	__ccovbit18_126/(0+8)	; CC_ADDR
 10207  1BE4  00000001           	ddw	1	; NUM_POINTS
 10208  1BE8  00000000           	ddw	__ccovbit18_126& (0+7)	; OFFSET
 10209  1BEC  00000000           	ddw	0	; Reserved
 10210  1BF0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10211  1BF4  00000006           	ddw	6	; NUM_RANGES
 10212  1BF8  0000008C           	ddw	__ccov253_start_blk18	; block 18 START_ADDR
 10213  1BFC  0000009D           	ddw	__ccov253_end_blk18	; block 18 END_ADDR
 10214  1C00  0000007A           	ddw	__ccov250_start_blk13	; block 13 START_ADDR
 10215  1C04  00000081           	ddw	__ccov250_end_blk13	; block 13 END_ADDR
 10216  1C08  00000076           	ddw	__ccov249_start_blk12	; block 12 START_ADDR
 10217  1C0C  0000007A           	ddw	__ccov249_end_blk12	; block 12 END_ADDR
 10218  1C10  0000005F           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
 10219  1C14  00000063           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
 10220  1C18  00000050           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
 10221  1C1C  00000054           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
 10222  1C20  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10223  1C24  00000050           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
 10224                           
 10225                           ; Function: sec_work, coverage: 19,12,6,1,0
 10226  1C28  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10227  1C2C  00000026           	ddw	__ccovbit19_127/(0+8)	; CC_ADDR
 10228  1C30  00000001           	ddw	1	; NUM_POINTS
 10229  1C34  00000007           	ddw	__ccovbit19_127& (0+7)	; OFFSET
 10230  1C38  00000000           	ddw	0	; Reserved
 10231  1C3C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10232  1C40  00000005           	ddw	5	; NUM_RANGES
 10233  1C44  0000009D           	ddw	__ccov254_start_blk19	; block 19 START_ADDR
 10234  1C48  000000A3           	ddw	__ccov254_end_blk19	; block 19 END_ADDR
 10235  1C4C  00000076           	ddw	__ccov249_start_blk12	; block 12 START_ADDR
 10236  1C50  0000007A           	ddw	__ccov249_end_blk12	; block 12 END_ADDR
 10237  1C54  0000005F           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
 10238  1C58  00000063           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
 10239  1C5C  00000050           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
 10240  1C60  00000054           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
 10241  1C64  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10242  1C68  00000050           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
 10243                           
 10244                           ; Function: sec_work, coverage: 21,20,19,12,6,1,0
 10245  1C6C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10246  1C70  00000026           	ddw	__ccovbit21_128/(0+8)	; CC_ADDR
 10247  1C74  00000001           	ddw	1	; NUM_POINTS
 10248  1C78  00000006           	ddw	__ccovbit21_128& (0+7)	; OFFSET
 10249  1C7C  00000000           	ddw	0	; Reserved
 10250  1C80  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10251  1C84  00000007           	ddw	7	; NUM_RANGES
 10252  1C88  000000A7           	ddw	__ccov256_start_blk21	; block 21 START_ADDR
 10253  1C8C  000000AE           	ddw	__ccov256_end_blk21	; block 21 END_ADDR
 10254  1C90  000000A3           	ddw	__ccov255_start_blk20	; block 20 START_ADDR
 10255  1C94  000000A7           	ddw	__ccov255_end_blk20	; block 20 END_ADDR
 10256  1C98  0000009D           	ddw	__ccov254_start_blk19	; block 19 START_ADDR
 10257  1C9C  000000A3           	ddw	__ccov254_end_blk19	; block 19 END_ADDR
 10258  1CA0  00000076           	ddw	__ccov249_start_blk12	; block 12 START_ADDR
 10259  1CA4  0000007A           	ddw	__ccov249_end_blk12	; block 12 END_ADDR
 10260  1CA8  0000005F           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
 10261  1CAC  00000063           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
 10262  1CB0  00000050           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
 10263  1CB4  00000054           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
 10264  1CB8  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10265  1CBC  00000050           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
 10266                           
 10267                           ; Function: sec_work, coverage: 23,22,21,20,19,12,6,1,0
 10268  1CC0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10269  1CC4  00000026           	ddw	__ccovbit23_129/(0+8)	; CC_ADDR
 10270  1CC8  00000001           	ddw	1	; NUM_POINTS
 10271  1CCC  00000005           	ddw	__ccovbit23_129& (0+7)	; OFFSET
 10272  1CD0  00000000           	ddw	0	; Reserved
 10273  1CD4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10274  1CD8  00000009           	ddw	9	; NUM_RANGES
 10275  1CDC  000000BC           	ddw	__ccov258_start_blk23	; block 23 START_ADDR
 10276  1CE0  000000BE           	ddw	__ccov258_end_blk23	; block 23 END_ADDR
 10277  1CE4  000000AE           	ddw	__ccov257_start_blk22	; block 22 START_ADDR
 10278  1CE8  000000BC           	ddw	__ccov257_end_blk22	; block 22 END_ADDR
 10279  1CEC  000000A7           	ddw	__ccov256_start_blk21	; block 21 START_ADDR
 10280  1CF0  000000AE           	ddw	__ccov256_end_blk21	; block 21 END_ADDR
 10281  1CF4  000000A3           	ddw	__ccov255_start_blk20	; block 20 START_ADDR
 10282  1CF8  000000A7           	ddw	__ccov255_end_blk20	; block 20 END_ADDR
 10283  1CFC  0000009D           	ddw	__ccov254_start_blk19	; block 19 START_ADDR
 10284  1D00  000000A3           	ddw	__ccov254_end_blk19	; block 19 END_ADDR
 10285  1D04  00000076           	ddw	__ccov249_start_blk12	; block 12 START_ADDR
 10286  1D08  0000007A           	ddw	__ccov249_end_blk12	; block 12 END_ADDR
 10287  1D0C  0000005F           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
 10288  1D10  00000063           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
 10289  1D14  00000050           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
 10290  1D18  00000054           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
 10291  1D1C  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10292  1D20  00000050           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
 10293                           
 10294                           ; Function: sec_work, coverage: 29,28,27,12,6,1,0
 10295  1D24  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10296  1D28  00000026           	ddw	__ccovbit29_130/(0+8)	; CC_ADDR
 10297  1D2C  00000001           	ddw	1	; NUM_POINTS
 10298  1D30  00000004           	ddw	__ccovbit29_130& (0+7)	; OFFSET
 10299  1D34  00000000           	ddw	0	; Reserved
 10300  1D38  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10301  1D3C  00000007           	ddw	7	; NUM_RANGES
 10302  1D40  000000C7           	ddw	__ccov261_start_blk29	; block 29 START_ADDR
 10303  1D44  000000CA           	ddw	__ccov261_end_blk29	; block 29 END_ADDR
 10304  1D48  000000C4           	ddw	__ccov260_start_blk28	; block 28 START_ADDR
 10305  1D4C  000000C7           	ddw	__ccov260_end_blk28	; block 28 END_ADDR
 10306  1D50  000000BE           	ddw	__ccov259_start_blk27	; block 27 START_ADDR
 10307  1D54  000000C4           	ddw	__ccov259_end_blk27	; block 27 END_ADDR
 10308  1D58  00000076           	ddw	__ccov249_start_blk12	; block 12 START_ADDR
 10309  1D5C  0000007A           	ddw	__ccov249_end_blk12	; block 12 END_ADDR
 10310  1D60  0000005F           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
 10311  1D64  00000063           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
 10312  1D68  00000050           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
 10313  1D6C  00000054           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
 10314  1D70  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10315  1D74  00000050           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
 10316                           
 10317                           ; Function: sec_work, coverage: 31,27,12,6,1,0
 10318  1D78  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10319  1D7C  00000026           	ddw	__ccovbit31_131/(0+8)	; CC_ADDR
 10320  1D80  00000001           	ddw	1	; NUM_POINTS
 10321  1D84  00000003           	ddw	__ccovbit31_131& (0+7)	; OFFSET
 10322  1D88  00000000           	ddw	0	; Reserved
 10323  1D8C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10324  1D90  00000006           	ddw	6	; NUM_RANGES
 10325  1D94  000000CA           	ddw	__ccov262_start_blk31	; block 31 START_ADDR
 10326  1D98  000000CC           	ddw	__end_of_sec_work	; block 31 END_ADDR
 10327  1D9C  000000BE           	ddw	__ccov259_start_blk27	; block 27 START_ADDR
 10328  1DA0  000000C4           	ddw	__ccov259_end_blk27	; block 27 END_ADDR
 10329  1DA4  00000076           	ddw	__ccov249_start_blk12	; block 12 START_ADDR
 10330  1DA8  0000007A           	ddw	__ccov249_end_blk12	; block 12 END_ADDR
 10331  1DAC  0000005F           	ddw	__ccov245_start_blk6	; block 6 START_ADDR
 10332  1DB0  00000063           	ddw	__ccov245_end_blk6	; block 6 END_ADDR
 10333  1DB4  00000050           	ddw	__ccov241_start_blk1	; block 1 START_ADDR
 10334  1DB8  00000054           	ddw	__ccov241_end_blk1	; block 1 END_ADDR
 10335  1DBC  0000004B           	ddw	_sec_work	; block 0 START_ADDR
 10336  1DC0  00000050           	ddw	__ccov240_end_blk0	; block 0 END_ADDR
 10337                           
 10338                           ; Function: ms_200_work, coverage: 1,0
 10339  1DC4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10340  1DC8  00000026           	ddw	__ccovbit1_132/(0+8)	; CC_ADDR
 10341  1DCC  00000001           	ddw	1	; NUM_POINTS
 10342  1DD0  00000002           	ddw	__ccovbit1_132& (0+7)	; OFFSET
 10343  1DD4  00000000           	ddw	0	; Reserved
 10344  1DD8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10345  1DDC  00000002           	ddw	2	; NUM_RANGES
 10346  1DE0  00000287           	ddw	__ccov264_start_blk1	; block 1 START_ADDR
 10347  1DE4  0000028D           	ddw	__ccov264_end_blk1	; block 1 END_ADDR
 10348  1DE8  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10349  1DEC  00000287           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10350                           
 10351                           ; Function: ms_200_work, coverage: 2,0
 10352  1DF0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10353  1DF4  00000026           	ddw	__ccovbit2_133/(0+8)	; CC_ADDR
 10354  1DF8  00000001           	ddw	1	; NUM_POINTS
 10355  1DFC  00000001           	ddw	__ccovbit2_133& (0+7)	; OFFSET
 10356  1E00  00000000           	ddw	0	; Reserved
 10357  1E04  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10358  1E08  00000002           	ddw	2	; NUM_RANGES
 10359  1E0C  0000028D           	ddw	__ccov265_start_blk2	; block 2 START_ADDR
 10360  1E10  00000292           	ddw	__ccov265_end_blk2	; block 2 END_ADDR
 10361  1E14  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10362  1E18  00000287           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10363                           
 10364                           ; Function: ms_200_work, coverage: 4,1,0
 10365  1E1C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10366  1E20  00000026           	ddw	__ccovbit4_134/(0+8)	; CC_ADDR
 10367  1E24  00000001           	ddw	1	; NUM_POINTS
 10368  1E28  00000000           	ddw	__ccovbit4_134& (0+7)	; OFFSET
 10369  1E2C  00000000           	ddw	0	; Reserved
 10370  1E30  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10371  1E34  00000003           	ddw	3	; NUM_RANGES
 10372  1E38  00000292           	ddw	__ccov266_start_blk4	; block 4 START_ADDR
 10373  1E3C  00000298           	ddw	__ccov266_end_blk4	; block 4 END_ADDR
 10374  1E40  00000287           	ddw	__ccov264_start_blk1	; block 1 START_ADDR
 10375  1E44  0000028D           	ddw	__ccov264_end_blk1	; block 1 END_ADDR
 10376  1E48  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10377  1E4C  00000287           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10378                           
 10379                           ; Function: ms_200_work, coverage: 5,4,1,0
 10380  1E50  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10381  1E54  00000025           	ddw	__ccovbit5_135/(0+8)	; CC_ADDR
 10382  1E58  00000001           	ddw	1	; NUM_POINTS
 10383  1E5C  00000007           	ddw	__ccovbit5_135& (0+7)	; OFFSET
 10384  1E60  00000000           	ddw	0	; Reserved
 10385  1E64  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10386  1E68  00000004           	ddw	4	; NUM_RANGES
 10387  1E6C  00000298           	ddw	__ccov267_start_blk5	; block 5 START_ADDR
 10388  1E70  0000029D           	ddw	__ccov267_end_blk5	; block 5 END_ADDR
 10389  1E74  00000292           	ddw	__ccov266_start_blk4	; block 4 START_ADDR
 10390  1E78  00000298           	ddw	__ccov266_end_blk4	; block 4 END_ADDR
 10391  1E7C  00000287           	ddw	__ccov264_start_blk1	; block 1 START_ADDR
 10392  1E80  0000028D           	ddw	__ccov264_end_blk1	; block 1 END_ADDR
 10393  1E84  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10394  1E88  00000287           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10395                           
 10396                           ; Function: ms_200_work, coverage: 8,0
 10397  1E8C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10398  1E90  00000025           	ddw	__ccovbit8_136/(0+8)	; CC_ADDR
 10399  1E94  00000001           	ddw	1	; NUM_POINTS
 10400  1E98  00000006           	ddw	__ccovbit8_136& (0+7)	; OFFSET
 10401  1E9C  00000000           	ddw	0	; Reserved
 10402  1EA0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10403  1EA4  00000002           	ddw	2	; NUM_RANGES
 10404  1EA8  0000029D           	ddw	__ccov268_start_blk8	; block 8 START_ADDR
 10405  1EAC  000002A3           	ddw	__ccov268_end_blk8	; block 8 END_ADDR
 10406  1EB0  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10407  1EB4  00000287           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10408                           
 10409                           ; Function: ms_200_work, coverage: 10,9,8,0
 10410  1EB8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10411  1EBC  00000025           	ddw	__ccovbit10_137/(0+8)	; CC_ADDR
 10412  1EC0  00000001           	ddw	1	; NUM_POINTS
 10413  1EC4  00000005           	ddw	__ccovbit10_137& (0+7)	; OFFSET
 10414  1EC8  00000000           	ddw	0	; Reserved
 10415  1ECC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10416  1ED0  00000004           	ddw	4	; NUM_RANGES
 10417  1ED4  000002A8           	ddw	__ccov270_start_blk10	; block 10 START_ADDR
 10418  1ED8  000002AF           	ddw	__ccov270_end_blk10	; block 10 END_ADDR
 10419  1EDC  000002A3           	ddw	__ccov269_start_blk9	; block 9 START_ADDR
 10420  1EE0  000002A8           	ddw	__ccov269_end_blk9	; block 9 END_ADDR
 10421  1EE4  0000029D           	ddw	__ccov268_start_blk8	; block 8 START_ADDR
 10422  1EE8  000002A3           	ddw	__ccov268_end_blk8	; block 8 END_ADDR
 10423  1EEC  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10424  1EF0  00000287           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10425                           
 10426                           ; Function: ms_200_work, coverage: 14,13,9,8,0
 10427  1EF4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10428  1EF8  00000025           	ddw	__ccovbit14_138/(0+8)	; CC_ADDR
 10429  1EFC  00000001           	ddw	1	; NUM_POINTS
 10430  1F00  00000004           	ddw	__ccovbit14_138& (0+7)	; OFFSET
 10431  1F04  00000000           	ddw	0	; Reserved
 10432  1F08  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10433  1F0C  00000005           	ddw	5	; NUM_RANGES
 10434  1F10  000002B4           	ddw	__ccov272_start_blk14	; block 14 START_ADDR
 10435  1F14  000002B8           	ddw	__ccov272_end_blk14	; block 14 END_ADDR
 10436  1F18  000002AF           	ddw	__ccov271_start_blk13	; block 13 START_ADDR
 10437  1F1C  000002B4           	ddw	__ccov271_end_blk13	; block 13 END_ADDR
 10438  1F20  000002A3           	ddw	__ccov269_start_blk9	; block 9 START_ADDR
 10439  1F24  000002A8           	ddw	__ccov269_end_blk9	; block 9 END_ADDR
 10440  1F28  0000029D           	ddw	__ccov268_start_blk8	; block 8 START_ADDR
 10441  1F2C  000002A3           	ddw	__ccov268_end_blk8	; block 8 END_ADDR
 10442  1F30  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10443  1F34  00000287           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10444                           
 10445                           ; Function: ms_200_work, coverage: 16,13,9,8,0
 10446  1F38  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10447  1F3C  00000025           	ddw	__ccovbit16_139/(0+8)	; CC_ADDR
 10448  1F40  00000001           	ddw	1	; NUM_POINTS
 10449  1F44  00000003           	ddw	__ccovbit16_139& (0+7)	; OFFSET
 10450  1F48  00000000           	ddw	0	; Reserved
 10451  1F4C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10452  1F50  00000005           	ddw	5	; NUM_RANGES
 10453  1F54  000002B8           	ddw	__ccov273_start_blk16	; block 16 START_ADDR
 10454  1F58  000002BF           	ddw	__ccov273_end_blk16	; block 16 END_ADDR
 10455  1F5C  000002AF           	ddw	__ccov271_start_blk13	; block 13 START_ADDR
 10456  1F60  000002B4           	ddw	__ccov271_end_blk13	; block 13 END_ADDR
 10457  1F64  000002A3           	ddw	__ccov269_start_blk9	; block 9 START_ADDR
 10458  1F68  000002A8           	ddw	__ccov269_end_blk9	; block 9 END_ADDR
 10459  1F6C  0000029D           	ddw	__ccov268_start_blk8	; block 8 START_ADDR
 10460  1F70  000002A3           	ddw	__ccov268_end_blk8	; block 8 END_ADDR
 10461  1F74  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10462  1F78  00000287           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10463                           
 10464                           ; Function: ms_200_work, coverage: 17,16,13,9,8,0
 10465  1F7C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10466  1F80  00000025           	ddw	__ccovbit17_140/(0+8)	; CC_ADDR
 10467  1F84  00000001           	ddw	1	; NUM_POINTS
 10468  1F88  00000002           	ddw	__ccovbit17_140& (0+7)	; OFFSET
 10469  1F8C  00000000           	ddw	0	; Reserved
 10470  1F90  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10471  1F94  00000006           	ddw	6	; NUM_RANGES
 10472  1F98  000002BF           	ddw	__ccov274_start_blk17	; block 17 START_ADDR
 10473  1F9C  000002C3           	ddw	__ccov274_end_blk17	; block 17 END_ADDR
 10474  1FA0  000002B8           	ddw	__ccov273_start_blk16	; block 16 START_ADDR
 10475  1FA4  000002BF           	ddw	__ccov273_end_blk16	; block 16 END_ADDR
 10476  1FA8  000002AF           	ddw	__ccov271_start_blk13	; block 13 START_ADDR
 10477  1FAC  000002B4           	ddw	__ccov271_end_blk13	; block 13 END_ADDR
 10478  1FB0  000002A3           	ddw	__ccov269_start_blk9	; block 9 START_ADDR
 10479  1FB4  000002A8           	ddw	__ccov269_end_blk9	; block 9 END_ADDR
 10480  1FB8  0000029D           	ddw	__ccov268_start_blk8	; block 8 START_ADDR
 10481  1FBC  000002A3           	ddw	__ccov268_end_blk8	; block 8 END_ADDR
 10482  1FC0  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10483  1FC4  00000287           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10484                           
 10485                           ; Function: ms_200_work, coverage: 22,0
 10486  1FC8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10487  1FCC  00000025           	ddw	__ccovbit22_141/(0+8)	; CC_ADDR
 10488  1FD0  00000001           	ddw	1	; NUM_POINTS
 10489  1FD4  00000001           	ddw	__ccovbit22_141& (0+7)	; OFFSET
 10490  1FD8  00000000           	ddw	0	; Reserved
 10491  1FDC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10492  1FE0  00000002           	ddw	2	; NUM_RANGES
 10493  1FE4  000002C3           	ddw	__ccov275_start_blk22	; block 22 START_ADDR
 10494  1FE8  000002C6           	ddw	__end_of_ms_200_work	; block 22 END_ADDR
 10495  1FEC  00000283           	ddw	_ms_200_work	; block 0 START_ADDR
 10496  1FF0  00000287           	ddw	__ccov263_end_blk0	; block 0 END_ADDR
 10497                           
 10498                           ; Function: ms_100_work, coverage: 1,0
 10499  1FF4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10500  1FF8  00000025           	ddw	__ccovbit1_142/(0+8)	; CC_ADDR
 10501  1FFC  00000001           	ddw	1	; NUM_POINTS
 10502  2000  00000000           	ddw	__ccovbit1_142& (0+7)	; OFFSET
 10503  2004  00000000           	ddw	0	; Reserved
 10504  2008  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10505  200C  00000002           	ddw	2	; NUM_RANGES
 10506  2010  00000653           	ddw	__ccov277_start_blk1	; block 1 START_ADDR
 10507  2014  00000659           	ddw	__ccov277_end_blk1	; block 1 END_ADDR
 10508  2018  0000064F           	ddw	_ms_100_work	; block 0 START_ADDR
 10509  201C  00000653           	ddw	__ccov276_end_blk0	; block 0 END_ADDR
 10510                           
 10511                           ; Function: ms_100_work, coverage: 2,0
 10512  2020  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10513  2024  00000024           	ddw	__ccovbit2_143/(0+8)	; CC_ADDR
 10514  2028  00000001           	ddw	1	; NUM_POINTS
 10515  202C  00000007           	ddw	__ccovbit2_143& (0+7)	; OFFSET
 10516  2030  00000000           	ddw	0	; Reserved
 10517  2034  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10518  2038  00000002           	ddw	2	; NUM_RANGES
 10519  203C  00000659           	ddw	__ccov278_start_blk2	; block 2 START_ADDR
 10520  2040  0000065C           	ddw	__ccov278_end_blk2	; block 2 END_ADDR
 10521  2044  0000064F           	ddw	_ms_100_work	; block 0 START_ADDR
 10522  2048  00000653           	ddw	__ccov276_end_blk0	; block 0 END_ADDR
 10523                           
 10524                           ; Function: ms_100_work, coverage: 4,0
 10525  204C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10526  2050  00000024           	ddw	__ccovbit4_144/(0+8)	; CC_ADDR
 10527  2054  00000001           	ddw	1	; NUM_POINTS
 10528  2058  00000006           	ddw	__ccovbit4_144& (0+7)	; OFFSET
 10529  205C  00000000           	ddw	0	; Reserved
 10530  2060  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10531  2064  00000002           	ddw	2	; NUM_RANGES
 10532  2068  0000065C           	ddw	__ccov279_start_blk4	; block 4 START_ADDR
 10533  206C  0000065E           	ddw	__end_of_ms_100_work	; block 4 END_ADDR
 10534  2070  0000064F           	ddw	_ms_100_work	; block 0 START_ADDR
 10535  2074  00000653           	ddw	__ccov276_end_blk0	; block 0 END_ADDR
 10536                           
 10537                           ; Function: ms_tick, coverage: 3,2,1,0
 10538  2078  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10539  207C  00000024           	ddw	__ccovbit3_145/(0+8)	; CC_ADDR
 10540  2080  00000001           	ddw	1	; NUM_POINTS
 10541  2084  00000005           	ddw	__ccovbit3_145& (0+7)	; OFFSET
 10542  2088  00000000           	ddw	0	; Reserved
 10543  208C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10544  2090  00000004           	ddw	4	; NUM_RANGES
 10545  2094  000002D5           	ddw	__ccov283_start_blk3	; block 3 START_ADDR
 10546  2098  000002DC           	ddw	__ccov283_end_blk3	; block 3 END_ADDR
 10547  209C  000002D1           	ddw	__ccov282_start_blk2	; block 2 START_ADDR
 10548  20A0  000002D5           	ddw	__ccov282_end_blk2	; block 2 END_ADDR
 10549  20A4  000002CB           	ddw	__ccov281_start_blk1	; block 1 START_ADDR
 10550  20A8  000002D1           	ddw	__ccov281_end_blk1	; block 1 END_ADDR
 10551  20AC  000002C6           	ddw	_ms_tick	; block 0 START_ADDR
 10552  20B0  000002CB           	ddw	__ccov280_end_blk0	; block 0 END_ADDR
 10553                           
 10554                           ; Function: ms_tick, coverage: 4,3,2,1,0
 10555  20B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10556  20B8  00000024           	ddw	__ccovbit4_146/(0+8)	; CC_ADDR
 10557  20BC  00000001           	ddw	1	; NUM_POINTS
 10558  20C0  00000004           	ddw	__ccovbit4_146& (0+7)	; OFFSET
 10559  20C4  00000000           	ddw	0	; Reserved
 10560  20C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10561  20CC  00000005           	ddw	5	; NUM_RANGES
 10562  20D0  000002DC           	ddw	__ccov284_start_blk4	; block 4 START_ADDR
 10563  20D4  000002E0           	ddw	__ccov284_end_blk4	; block 4 END_ADDR
 10564  20D8  000002D5           	ddw	__ccov283_start_blk3	; block 3 START_ADDR
 10565  20DC  000002DC           	ddw	__ccov283_end_blk3	; block 3 END_ADDR
 10566  20E0  000002D1           	ddw	__ccov282_start_blk2	; block 2 START_ADDR
 10567  20E4  000002D5           	ddw	__ccov282_end_blk2	; block 2 END_ADDR
 10568  20E8  000002CB           	ddw	__ccov281_start_blk1	; block 1 START_ADDR
 10569  20EC  000002D1           	ddw	__ccov281_end_blk1	; block 1 END_ADDR
 10570  20F0  000002C6           	ddw	_ms_tick	; block 0 START_ADDR
 10571  20F4  000002CB           	ddw	__ccov280_end_blk0	; block 0 END_ADDR
 10572                           
 10573                           ; Function: ms_tick, coverage: 12,11,10,9,8,7,1,0
 10574  20F8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10575  20FC  00000024           	ddw	__ccovbit12_147/(0+8)	; CC_ADDR
 10576  2100  00000001           	ddw	1	; NUM_POINTS
 10577  2104  00000003           	ddw	__ccovbit12_147& (0+7)	; OFFSET
 10578  2108  00000000           	ddw	0	; Reserved
 10579  210C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10580  2110  00000008           	ddw	8	; NUM_RANGES
 10581  2114  000002F5           	ddw	__ccov290_start_blk12	; block 12 START_ADDR
 10582  2118  000002F8           	ddw	__ccov290_end_blk12	; block 12 END_ADDR
 10583  211C  000002ED           	ddw	__ccov289_start_blk11	; block 11 START_ADDR
 10584  2120  000002F5           	ddw	__ccov289_end_blk11	; block 11 END_ADDR
 10585  2124  000002EA           	ddw	__ccov288_start_blk10	; block 10 START_ADDR
 10586  2128  000002ED           	ddw	__ccov288_end_blk10	; block 10 END_ADDR
 10587  212C  000002E2           	ddw	__ccov287_start_blk9	; block 9 START_ADDR
 10588  2130  000002EA           	ddw	__ccov287_end_blk9	; block 9 END_ADDR
 10589  2134  000002E1           	ddw	__ccov286_start_blk8	; block 8 START_ADDR
 10590  2138  000002E2           	ddw	__ccov286_end_blk8	; block 8 END_ADDR
 10591  213C  000002E0           	ddw	__ccov285_start_blk7	; block 7 START_ADDR
 10592  2140  000002E1           	ddw	__ccov285_end_blk7	; block 7 END_ADDR
 10593  2144  000002CB           	ddw	__ccov281_start_blk1	; block 1 START_ADDR
 10594  2148  000002D1           	ddw	__ccov281_end_blk1	; block 1 END_ADDR
 10595  214C  000002C6           	ddw	_ms_tick	; block 0 START_ADDR
 10596  2150  000002CB           	ddw	__ccov280_end_blk0	; block 0 END_ADDR
 10597                           
 10598                           ; Function: ms_tick, coverage: 18,17,16,9,8,7,1,0
 10599  2154  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10600  2158  00000024           	ddw	__ccovbit18_148/(0+8)	; CC_ADDR
 10601  215C  00000001           	ddw	1	; NUM_POINTS
 10602  2160  00000002           	ddw	__ccovbit18_148& (0+7)	; OFFSET
 10603  2164  00000000           	ddw	0	; Reserved
 10604  2168  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10605  216C  00000008           	ddw	8	; NUM_RANGES
 10606  2170  00000302           	ddw	__ccov293_start_blk18	; block 18 START_ADDR
 10607  2174  00000306           	ddw	__ccov293_end_blk18	; block 18 END_ADDR
 10608  2178  000002FF           	ddw	__ccov292_start_blk17	; block 17 START_ADDR
 10609  217C  00000302           	ddw	__ccov292_end_blk17	; block 17 END_ADDR
 10610  2180  000002F8           	ddw	__ccov291_start_blk16	; block 16 START_ADDR
 10611  2184  000002FF           	ddw	__ccov291_end_blk16	; block 16 END_ADDR
 10612  2188  000002E2           	ddw	__ccov287_start_blk9	; block 9 START_ADDR
 10613  218C  000002EA           	ddw	__ccov287_end_blk9	; block 9 END_ADDR
 10614  2190  000002E1           	ddw	__ccov286_start_blk8	; block 8 START_ADDR
 10615  2194  000002E2           	ddw	__ccov286_end_blk8	; block 8 END_ADDR
 10616  2198  000002E0           	ddw	__ccov285_start_blk7	; block 7 START_ADDR
 10617  219C  000002E1           	ddw	__ccov285_end_blk7	; block 7 END_ADDR
 10618  21A0  000002CB           	ddw	__ccov281_start_blk1	; block 1 START_ADDR
 10619  21A4  000002D1           	ddw	__ccov281_end_blk1	; block 1 END_ADDR
 10620  21A8  000002C6           	ddw	_ms_tick	; block 0 START_ADDR
 10621  21AC  000002CB           	ddw	__ccov280_end_blk0	; block 0 END_ADDR
 10622                           
 10623                           ; Function: ms_tick, coverage: 20,16,9,8,7,1,0
 10624  21B0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10625  21B4  00000024           	ddw	__ccovbit20_149/(0+8)	; CC_ADDR
 10626  21B8  00000001           	ddw	1	; NUM_POINTS
 10627  21BC  00000001           	ddw	__ccovbit20_149& (0+7)	; OFFSET
 10628  21C0  00000000           	ddw	0	; Reserved
 10629  21C4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10630  21C8  00000007           	ddw	7	; NUM_RANGES
 10631  21CC  00000306           	ddw	__ccov294_start_blk20	; block 20 START_ADDR
 10632  21D0  00000308           	ddw	__end_of_ms_tick	; block 20 END_ADDR
 10633  21D4  000002F8           	ddw	__ccov291_start_blk16	; block 16 START_ADDR
 10634  21D8  000002FF           	ddw	__ccov291_end_blk16	; block 16 END_ADDR
 10635  21DC  000002E2           	ddw	__ccov287_start_blk9	; block 9 START_ADDR
 10636  21E0  000002EA           	ddw	__ccov287_end_blk9	; block 9 END_ADDR
 10637  21E4  000002E1           	ddw	__ccov286_start_blk8	; block 8 START_ADDR
 10638  21E8  000002E2           	ddw	__ccov286_end_blk8	; block 8 END_ADDR
 10639  21EC  000002E0           	ddw	__ccov285_start_blk7	; block 7 START_ADDR
 10640  21F0  000002E1           	ddw	__ccov285_end_blk7	; block 7 END_ADDR
 10641  21F4  000002CB           	ddw	__ccov281_start_blk1	; block 1 START_ADDR
 10642  21F8  000002D1           	ddw	__ccov281_end_blk1	; block 1 END_ADDR
 10643  21FC  000002C6           	ddw	_ms_tick	; block 0 START_ADDR
 10644  2200  000002CB           	ddw	__ccov280_end_blk0	; block 0 END_ADDR
 10645                           
 10646                           ; Function: eeprom_set, coverage: 2,1,0
 10647  2204  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10648  2208  00000024           	ddw	__ccovbit2_150/(0+8)	; CC_ADDR
 10649  220C  00000001           	ddw	1	; NUM_POINTS
 10650  2210  00000000           	ddw	__ccovbit2_150& (0+7)	; OFFSET
 10651  2214  00000000           	ddw	0	; Reserved
 10652  2218  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10653  221C  00000003           	ddw	3	; NUM_RANGES
 10654  2220  0000056E           	ddw	__ccov297_start_blk2	; block 2 START_ADDR
 10655  2224  00000575           	ddw	__ccov297_end_blk2	; block 2 END_ADDR
 10656  2228  00000569           	ddw	__ccov296_start_blk1	; block 1 START_ADDR
 10657  222C  0000056E           	ddw	__ccov296_end_blk1	; block 1 END_ADDR
 10658  2230  00000561           	ddw	_eeprom_set	; block 0 START_ADDR
 10659  2234  00000569           	ddw	__ccov295_end_blk0	; block 0 END_ADDR
 10660                           
 10661                           ; Function: eeprom_set, coverage: 4,1,0
 10662  2238  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10663  223C  00000023           	ddw	__ccovbit4_151/(0+8)	; CC_ADDR
 10664  2240  00000001           	ddw	1	; NUM_POINTS
 10665  2244  00000007           	ddw	__ccovbit4_151& (0+7)	; OFFSET
 10666  2248  00000000           	ddw	0	; Reserved
 10667  224C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10668  2250  00000003           	ddw	3	; NUM_RANGES
 10669  2254  00000575           	ddw	__ccov298_start_blk4	; block 4 START_ADDR
 10670  2258  00000578           	ddw	__end_of_eeprom_set	; block 4 END_ADDR
 10671  225C  00000569           	ddw	__ccov296_start_blk1	; block 1 START_ADDR
 10672  2260  0000056E           	ddw	__ccov296_end_blk1	; block 1 END_ADDR
 10673  2264  00000561           	ddw	_eeprom_set	; block 0 START_ADDR
 10674  2268  00000569           	ddw	__ccov295_end_blk0	; block 0 END_ADDR
 10675                           
 10676                           ; Function: hardware_work, coverage: 1,0
 10677  226C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10678  2270  00000023           	ddw	__ccovbit1_152/(0+8)	; CC_ADDR
 10679  2274  00000001           	ddw	1	; NUM_POINTS
 10680  2278  00000006           	ddw	__ccovbit1_152& (0+7)	; OFFSET
 10681  227C  00000000           	ddw	0	; Reserved
 10682  2280  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10683  2284  00000002           	ddw	2	; NUM_RANGES
 10684  2288  00000374           	ddw	__ccov300_start_blk1	; block 1 START_ADDR
 10685  228C  00000377           	ddw	__ccov300_end_blk1	; block 1 END_ADDR
 10686  2290  00000348           	ddw	_hardware_work	; block 0 START_ADDR
 10687  2294  00000374           	ddw	__ccov299_end_blk0	; block 0 END_ADDR
 10688                           
 10689                           ; Function: hardware_work, coverage: 4,3,2,0
 10690  2298  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10691  229C  00000023           	ddw	__ccovbit4_153/(0+8)	; CC_ADDR
 10692  22A0  00000001           	ddw	1	; NUM_POINTS
 10693  22A4  00000005           	ddw	__ccovbit4_153& (0+7)	; OFFSET
 10694  22A8  00000000           	ddw	0	; Reserved
 10695  22AC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10696  22B0  00000004           	ddw	4	; NUM_RANGES
 10697  22B4  0000037C           	ddw	__ccov303_start_blk4	; block 4 START_ADDR
 10698  22B8  00000380           	ddw	__ccov303_end_blk4	; block 4 END_ADDR
 10699  22BC  0000037B           	ddw	__ccov302_start_blk3	; block 3 START_ADDR
 10700  22C0  0000037C           	ddw	__ccov302_end_blk3	; block 3 END_ADDR
 10701  22C4  00000377           	ddw	__ccov301_start_blk2	; block 2 START_ADDR
 10702  22C8  0000037B           	ddw	__ccov301_end_blk2	; block 2 END_ADDR
 10703  22CC  00000348           	ddw	_hardware_work	; block 0 START_ADDR
 10704  22D0  00000374           	ddw	__ccov299_end_blk0	; block 0 END_ADDR
 10705                           
 10706                           ; Function: hardware_work, coverage: 7,2,0
 10707  22D4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10708  22D8  00000023           	ddw	__ccovbit7_154/(0+8)	; CC_ADDR
 10709  22DC  00000001           	ddw	1	; NUM_POINTS
 10710  22E0  00000004           	ddw	__ccovbit7_154& (0+7)	; OFFSET
 10711  22E4  00000000           	ddw	0	; Reserved
 10712  22E8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10713  22EC  00000003           	ddw	3	; NUM_RANGES
 10714  22F0  00000380           	ddw	__ccov304_start_blk7	; block 7 START_ADDR
 10715  22F4  00000383           	ddw	__end_of_hardware_work	; block 7 END_ADDR
 10716  22F8  00000377           	ddw	__ccov301_start_blk2	; block 2 START_ADDR
 10717  22FC  0000037B           	ddw	__ccov301_end_blk2	; block 2 END_ADDR
 10718  2300  00000348           	ddw	_hardware_work	; block 0 START_ADDR
 10719  2304  00000374           	ddw	__ccov299_end_blk0	; block 0 END_ADDR
 10720                           
 10721                           ; Function: zummer_switch, coverage: 3,1,0
 10722  2308  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10723  230C  00000023           	ddw	__ccovbit3_155/(0+8)	; CC_ADDR
 10724  2310  00000001           	ddw	1	; NUM_POINTS
 10725  2314  00000003           	ddw	__ccovbit3_155& (0+7)	; OFFSET
 10726  2318  00000000           	ddw	0	; Reserved
 10727  231C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10728  2320  00000002           	ddw	2	; NUM_RANGES
 10729  2324  0000066A           	ddw	__ccov307_start_blk3	; block 3 START_ADDR
 10730  2328  0000066D           	ddw	__end_of_zummer_switch	; block 3 END_ADDR
 10731  232C  0000065E           	ddw	_zummer_switch	; block 1 START_ADDR
 10732  2330  0000066A           	ddw	__ccov306_end_blk1	; block 1 END_ADDR
 10733                           
 10734                           ; Function: get_wsp, coverage: 14,13,11,8,6,5,3,1,0
 10735  2334  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10736  2338  00000023           	ddw	__ccovbit14_156/(0+8)	; CC_ADDR
 10737  233C  00000001           	ddw	1	; NUM_POINTS
 10738  2340  00000002           	ddw	__ccovbit14_156& (0+7)	; OFFSET
 10739  2344  00000000           	ddw	0	; Reserved
 10740  2348  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10741  234C  00000009           	ddw	9	; NUM_RANGES
 10742  2350  000000F5           	ddw	__ccov316_start_blk14	; block 14 START_ADDR
 10743  2354  000000FB           	ddw	__ccov316_end_blk14	; block 14 END_ADDR
 10744  2358  000000EB           	ddw	__ccov315_start_blk13	; block 13 START_ADDR
 10745  235C  000000F5           	ddw	__ccov315_end_blk13	; block 13 END_ADDR
 10746  2360  000000E9           	ddw	__ccov314_start_blk11	; block 11 START_ADDR
 10747  2364  000000EB           	ddw	__ccov314_end_blk11	; block 11 END_ADDR
 10748  2368  000000E7           	ddw	__ccov313_start_blk8	; block 8 START_ADDR
 10749  236C  000000E9           	ddw	__ccov313_end_blk8	; block 8 END_ADDR
 10750  2370  000000DC           	ddw	__ccov312_start_blk6	; block 6 START_ADDR
 10751  2374  000000E7           	ddw	__ccov312_end_blk6	; block 6 END_ADDR
 10752  2378  000000D4           	ddw	__ccov311_start_blk5	; block 5 START_ADDR
 10753  237C  000000DC           	ddw	__ccov311_end_blk5	; block 5 END_ADDR
 10754  2380  000000D2           	ddw	__ccov310_start_blk3	; block 3 START_ADDR
 10755  2384  000000D4           	ddw	__ccov310_end_blk3	; block 3 END_ADDR
 10756  2388  000000D0           	ddw	__ccov309_start_blk1	; block 1 START_ADDR
 10757  238C  000000D2           	ddw	__ccov309_end_blk1	; block 1 END_ADDR
 10758  2390  000000CC           	ddw	_get_wsp	; block 0 START_ADDR
 10759  2394  000000D0           	ddw	__ccov308_end_blk0	; block 0 END_ADDR
 10760                           
 10761                           ; Function: get_wsp, coverage: 16,13,11,8,6,5,3,1,0
 10762  2398  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10763  239C  00000023           	ddw	__ccovbit16_157/(0+8)	; CC_ADDR
 10764  23A0  00000001           	ddw	1	; NUM_POINTS
 10765  23A4  00000001           	ddw	__ccovbit16_157& (0+7)	; OFFSET
 10766  23A8  00000000           	ddw	0	; Reserved
 10767  23AC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10768  23B0  00000009           	ddw	9	; NUM_RANGES
 10769  23B4  000000FB           	ddw	__ccov317_start_blk16	; block 16 START_ADDR
 10770  23B8  00000105           	ddw	__ccov317_end_blk16	; block 16 END_ADDR
 10771  23BC  000000EB           	ddw	__ccov315_start_blk13	; block 13 START_ADDR
 10772  23C0  000000F5           	ddw	__ccov315_end_blk13	; block 13 END_ADDR
 10773  23C4  000000E9           	ddw	__ccov314_start_blk11	; block 11 START_ADDR
 10774  23C8  000000EB           	ddw	__ccov314_end_blk11	; block 11 END_ADDR
 10775  23CC  000000E7           	ddw	__ccov313_start_blk8	; block 8 START_ADDR
 10776  23D0  000000E9           	ddw	__ccov313_end_blk8	; block 8 END_ADDR
 10777  23D4  000000DC           	ddw	__ccov312_start_blk6	; block 6 START_ADDR
 10778  23D8  000000E7           	ddw	__ccov312_end_blk6	; block 6 END_ADDR
 10779  23DC  000000D4           	ddw	__ccov311_start_blk5	; block 5 START_ADDR
 10780  23E0  000000DC           	ddw	__ccov311_end_blk5	; block 5 END_ADDR
 10781  23E4  000000D2           	ddw	__ccov310_start_blk3	; block 3 START_ADDR
 10782  23E8  000000D4           	ddw	__ccov310_end_blk3	; block 3 END_ADDR
 10783  23EC  000000D0           	ddw	__ccov309_start_blk1	; block 1 START_ADDR
 10784  23F0  000000D2           	ddw	__ccov309_end_blk1	; block 1 END_ADDR
 10785  23F4  000000CC           	ddw	_get_wsp	; block 0 START_ADDR
 10786  23F8  000000D0           	ddw	__ccov308_end_blk0	; block 0 END_ADDR
 10787                           
 10788                           ; Function: get_wsp, coverage: 17,16,13,11,8,6,5,3,1,0
 10789  23FC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10790  2400  00000023           	ddw	__ccovbit17_158/(0+8)	; CC_ADDR
 10791  2404  00000001           	ddw	1	; NUM_POINTS
 10792  2408  00000000           	ddw	__ccovbit17_158& (0+7)	; OFFSET
 10793  240C  00000000           	ddw	0	; Reserved
 10794  2410  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10795  2414  0000000A           	ddw	10	; NUM_RANGES
 10796  2418  00000105           	ddw	__ccov318_start_blk17	; block 17 START_ADDR
 10797  241C  0000010A           	ddw	__ccov318_end_blk17	; block 17 END_ADDR
 10798  2420  000000FB           	ddw	__ccov317_start_blk16	; block 16 START_ADDR
 10799  2424  00000105           	ddw	__ccov317_end_blk16	; block 16 END_ADDR
 10800  2428  000000EB           	ddw	__ccov315_start_blk13	; block 13 START_ADDR
 10801  242C  000000F5           	ddw	__ccov315_end_blk13	; block 13 END_ADDR
 10802  2430  000000E9           	ddw	__ccov314_start_blk11	; block 11 START_ADDR
 10803  2434  000000EB           	ddw	__ccov314_end_blk11	; block 11 END_ADDR
 10804  2438  000000E7           	ddw	__ccov313_start_blk8	; block 8 START_ADDR
 10805  243C  000000E9           	ddw	__ccov313_end_blk8	; block 8 END_ADDR
 10806  2440  000000DC           	ddw	__ccov312_start_blk6	; block 6 START_ADDR
 10807  2444  000000E7           	ddw	__ccov312_end_blk6	; block 6 END_ADDR
 10808  2448  000000D4           	ddw	__ccov311_start_blk5	; block 5 START_ADDR
 10809  244C  000000DC           	ddw	__ccov311_end_blk5	; block 5 END_ADDR
 10810  2450  000000D2           	ddw	__ccov310_start_blk3	; block 3 START_ADDR
 10811  2454  000000D4           	ddw	__ccov310_end_blk3	; block 3 END_ADDR
 10812  2458  000000D0           	ddw	__ccov309_start_blk1	; block 1 START_ADDR
 10813  245C  000000D2           	ddw	__ccov309_end_blk1	; block 1 END_ADDR
 10814  2460  000000CC           	ddw	_get_wsp	; block 0 START_ADDR
 10815  2464  000000D0           	ddw	__ccov308_end_blk0	; block 0 END_ADDR
 10816                           
 10817                           ; Function: get_wsp, coverage: 22,21,20,13,11,8,6,5,3,1,0
 10818  2468  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10819  246C  00000022           	ddw	__ccovbit22_159/(0+8)	; CC_ADDR
 10820  2470  00000001           	ddw	1	; NUM_POINTS
 10821  2474  00000007           	ddw	__ccovbit22_159& (0+7)	; OFFSET
 10822  2478  00000000           	ddw	0	; Reserved
 10823  247C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10824  2480  0000000B           	ddw	11	; NUM_RANGES
 10825  2484  00000114           	ddw	__ccov321_start_blk22	; block 22 START_ADDR
 10826  2488  0000011A           	ddw	__ccov321_end_blk22	; block 22 END_ADDR
 10827  248C  00000111           	ddw	__ccov320_start_blk21	; block 21 START_ADDR
 10828  2490  00000114           	ddw	__ccov320_end_blk21	; block 21 END_ADDR
 10829  2494  0000010A           	ddw	__ccov319_start_blk20	; block 20 START_ADDR
 10830  2498  00000111           	ddw	__ccov319_end_blk20	; block 20 END_ADDR
 10831  249C  000000EB           	ddw	__ccov315_start_blk13	; block 13 START_ADDR
 10832  24A0  000000F5           	ddw	__ccov315_end_blk13	; block 13 END_ADDR
 10833  24A4  000000E9           	ddw	__ccov314_start_blk11	; block 11 START_ADDR
 10834  24A8  000000EB           	ddw	__ccov314_end_blk11	; block 11 END_ADDR
 10835  24AC  000000E7           	ddw	__ccov313_start_blk8	; block 8 START_ADDR
 10836  24B0  000000E9           	ddw	__ccov313_end_blk8	; block 8 END_ADDR
 10837  24B4  000000DC           	ddw	__ccov312_start_blk6	; block 6 START_ADDR
 10838  24B8  000000E7           	ddw	__ccov312_end_blk6	; block 6 END_ADDR
 10839  24BC  000000D4           	ddw	__ccov311_start_blk5	; block 5 START_ADDR
 10840  24C0  000000DC           	ddw	__ccov311_end_blk5	; block 5 END_ADDR
 10841  24C4  000000D2           	ddw	__ccov310_start_blk3	; block 3 START_ADDR
 10842  24C8  000000D4           	ddw	__ccov310_end_blk3	; block 3 END_ADDR
 10843  24CC  000000D0           	ddw	__ccov309_start_blk1	; block 1 START_ADDR
 10844  24D0  000000D2           	ddw	__ccov309_end_blk1	; block 1 END_ADDR
 10845  24D4  000000CC           	ddw	_get_wsp	; block 0 START_ADDR
 10846  24D8  000000D0           	ddw	__ccov308_end_blk0	; block 0 END_ADDR
 10847                           
 10848                           ; Function: get_wsp, coverage: 26,25,24,20,13,11,8,6,5,3,1,0
 10849  24DC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10850  24E0  00000022           	ddw	__ccovbit26_160/(0+8)	; CC_ADDR
 10851  24E4  00000001           	ddw	1	; NUM_POINTS
 10852  24E8  00000006           	ddw	__ccovbit26_160& (0+7)	; OFFSET
 10853  24EC  00000000           	ddw	0	; Reserved
 10854  24F0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10855  24F4  0000000C           	ddw	12	; NUM_RANGES
 10856  24F8  00000124           	ddw	__ccov324_start_blk26	; block 26 START_ADDR
 10857  24FC  0000012A           	ddw	__ccov324_end_blk26	; block 26 END_ADDR
 10858  2500  00000121           	ddw	__ccov323_start_blk25	; block 25 START_ADDR
 10859  2504  00000124           	ddw	__ccov323_end_blk25	; block 25 END_ADDR
 10860  2508  0000011A           	ddw	__ccov322_start_blk24	; block 24 START_ADDR
 10861  250C  00000121           	ddw	__ccov322_end_blk24	; block 24 END_ADDR
 10862  2510  0000010A           	ddw	__ccov319_start_blk20	; block 20 START_ADDR
 10863  2514  00000111           	ddw	__ccov319_end_blk20	; block 20 END_ADDR
 10864  2518  000000EB           	ddw	__ccov315_start_blk13	; block 13 START_ADDR
 10865  251C  000000F5           	ddw	__ccov315_end_blk13	; block 13 END_ADDR
 10866  2520  000000E9           	ddw	__ccov314_start_blk11	; block 11 START_ADDR
 10867  2524  000000EB           	ddw	__ccov314_end_blk11	; block 11 END_ADDR
 10868  2528  000000E7           	ddw	__ccov313_start_blk8	; block 8 START_ADDR
 10869  252C  000000E9           	ddw	__ccov313_end_blk8	; block 8 END_ADDR
 10870  2530  000000DC           	ddw	__ccov312_start_blk6	; block 6 START_ADDR
 10871  2534  000000E7           	ddw	__ccov312_end_blk6	; block 6 END_ADDR
 10872  2538  000000D4           	ddw	__ccov311_start_blk5	; block 5 START_ADDR
 10873  253C  000000DC           	ddw	__ccov311_end_blk5	; block 5 END_ADDR
 10874  2540  000000D2           	ddw	__ccov310_start_blk3	; block 3 START_ADDR
 10875  2544  000000D4           	ddw	__ccov310_end_blk3	; block 3 END_ADDR
 10876  2548  000000D0           	ddw	__ccov309_start_blk1	; block 1 START_ADDR
 10877  254C  000000D2           	ddw	__ccov309_end_blk1	; block 1 END_ADDR
 10878  2550  000000CC           	ddw	_get_wsp	; block 0 START_ADDR
 10879  2554  000000D0           	ddw	__ccov308_end_blk0	; block 0 END_ADDR
 10880                           
 10881                           ; Function: get_wsp, coverage: 28,24,20,13,11,8,6,5,3,1,0
 10882  2558  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10883  255C  00000022           	ddw	__ccovbit28_161/(0+8)	; CC_ADDR
 10884  2560  00000001           	ddw	1	; NUM_POINTS
 10885  2564  00000005           	ddw	__ccovbit28_161& (0+7)	; OFFSET
 10886  2568  00000000           	ddw	0	; Reserved
 10887  256C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10888  2570  0000000B           	ddw	11	; NUM_RANGES
 10889  2574  0000012A           	ddw	__ccov325_start_blk28	; block 28 START_ADDR
 10890  2578  0000012C           	ddw	__ccov325_end_blk28	; block 28 END_ADDR
 10891  257C  0000011A           	ddw	__ccov322_start_blk24	; block 24 START_ADDR
 10892  2580  00000121           	ddw	__ccov322_end_blk24	; block 24 END_ADDR
 10893  2584  0000010A           	ddw	__ccov319_start_blk20	; block 20 START_ADDR
 10894  2588  00000111           	ddw	__ccov319_end_blk20	; block 20 END_ADDR
 10895  258C  000000EB           	ddw	__ccov315_start_blk13	; block 13 START_ADDR
 10896  2590  000000F5           	ddw	__ccov315_end_blk13	; block 13 END_ADDR
 10897  2594  000000E9           	ddw	__ccov314_start_blk11	; block 11 START_ADDR
 10898  2598  000000EB           	ddw	__ccov314_end_blk11	; block 11 END_ADDR
 10899  259C  000000E7           	ddw	__ccov313_start_blk8	; block 8 START_ADDR
 10900  25A0  000000E9           	ddw	__ccov313_end_blk8	; block 8 END_ADDR
 10901  25A4  000000DC           	ddw	__ccov312_start_blk6	; block 6 START_ADDR
 10902  25A8  000000E7           	ddw	__ccov312_end_blk6	; block 6 END_ADDR
 10903  25AC  000000D4           	ddw	__ccov311_start_blk5	; block 5 START_ADDR
 10904  25B0  000000DC           	ddw	__ccov311_end_blk5	; block 5 END_ADDR
 10905  25B4  000000D2           	ddw	__ccov310_start_blk3	; block 3 START_ADDR
 10906  25B8  000000D4           	ddw	__ccov310_end_blk3	; block 3 END_ADDR
 10907  25BC  000000D0           	ddw	__ccov309_start_blk1	; block 1 START_ADDR
 10908  25C0  000000D2           	ddw	__ccov309_end_blk1	; block 1 END_ADDR
 10909  25C4  000000CC           	ddw	_get_wsp	; block 0 START_ADDR
 10910  25C8  000000D0           	ddw	__ccov308_end_blk0	; block 0 END_ADDR
 10911                           
 10912                           ; Function: get_wsp, coverage: 30,0
 10913  25CC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10914  25D0  00000022           	ddw	__ccovbit30_162/(0+8)	; CC_ADDR
 10915  25D4  00000001           	ddw	1	; NUM_POINTS
 10916  25D8  00000004           	ddw	__ccovbit30_162& (0+7)	; OFFSET
 10917  25DC  00000000           	ddw	0	; Reserved
 10918  25E0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10919  25E4  00000002           	ddw	2	; NUM_RANGES
 10920  25E8  0000012C           	ddw	__ccov326_start_blk30	; block 30 START_ADDR
 10921  25EC  0000012F           	ddw	__end_of_get_wsp	; block 30 END_ADDR
 10922  25F0  000000CC           	ddw	_get_wsp	; block 0 START_ADDR
 10923  25F4  000000D0           	ddw	__ccov308_end_blk0	; block 0 END_ADDR
 10924                           
 10925                           ; Function: get_fun, coverage: 11,10,8,5,3,1,0
 10926  25F8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10927  25FC  00000022           	ddw	__ccovbit11_163/(0+8)	; CC_ADDR
 10928  2600  00000001           	ddw	1	; NUM_POINTS
 10929  2604  00000003           	ddw	__ccovbit11_163& (0+7)	; OFFSET
 10930  2608  00000000           	ddw	0	; Reserved
 10931  260C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10932  2610  00000007           	ddw	7	; NUM_RANGES
 10933  2614  00000252           	ddw	__ccov333_start_blk11	; block 11 START_ADDR
 10934  2618  00000258           	ddw	__ccov333_end_blk11	; block 11 END_ADDR
 10935  261C  0000024D           	ddw	__ccov332_start_blk10	; block 10 START_ADDR
 10936  2620  00000252           	ddw	__ccov332_end_blk10	; block 10 END_ADDR
 10937  2624  0000024B           	ddw	__ccov331_start_blk8	; block 8 START_ADDR
 10938  2628  0000024D           	ddw	__ccov331_end_blk8	; block 8 END_ADDR
 10939  262C  00000249           	ddw	__ccov330_start_blk5	; block 5 START_ADDR
 10940  2630  0000024B           	ddw	__ccov330_end_blk5	; block 5 END_ADDR
 10941  2634  00000241           	ddw	__ccov329_start_blk3	; block 3 START_ADDR
 10942  2638  00000249           	ddw	__ccov329_end_blk3	; block 3 END_ADDR
 10943  263C  0000023F           	ddw	__ccov328_start_blk1	; block 1 START_ADDR
 10944  2640  00000241           	ddw	__ccov328_end_blk1	; block 1 END_ADDR
 10945  2644  0000023B           	ddw	_get_fun	; block 0 START_ADDR
 10946  2648  0000023F           	ddw	__ccov327_end_blk0	; block 0 END_ADDR
 10947                           
 10948                           ; Function: get_fun, coverage: 13,10,8,5,3,1,0
 10949  264C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10950  2650  00000022           	ddw	__ccovbit13_164/(0+8)	; CC_ADDR
 10951  2654  00000001           	ddw	1	; NUM_POINTS
 10952  2658  00000002           	ddw	__ccovbit13_164& (0+7)	; OFFSET
 10953  265C  00000000           	ddw	0	; Reserved
 10954  2660  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10955  2664  00000007           	ddw	7	; NUM_RANGES
 10956  2668  00000258           	ddw	__ccov334_start_blk13	; block 13 START_ADDR
 10957  266C  0000025D           	ddw	__ccov334_end_blk13	; block 13 END_ADDR
 10958  2670  0000024D           	ddw	__ccov332_start_blk10	; block 10 START_ADDR
 10959  2674  00000252           	ddw	__ccov332_end_blk10	; block 10 END_ADDR
 10960  2678  0000024B           	ddw	__ccov331_start_blk8	; block 8 START_ADDR
 10961  267C  0000024D           	ddw	__ccov331_end_blk8	; block 8 END_ADDR
 10962  2680  00000249           	ddw	__ccov330_start_blk5	; block 5 START_ADDR
 10963  2684  0000024B           	ddw	__ccov330_end_blk5	; block 5 END_ADDR
 10964  2688  00000241           	ddw	__ccov329_start_blk3	; block 3 START_ADDR
 10965  268C  00000249           	ddw	__ccov329_end_blk3	; block 3 END_ADDR
 10966  2690  0000023F           	ddw	__ccov328_start_blk1	; block 1 START_ADDR
 10967  2694  00000241           	ddw	__ccov328_end_blk1	; block 1 END_ADDR
 10968  2698  0000023B           	ddw	_get_fun	; block 0 START_ADDR
 10969  269C  0000023F           	ddw	__ccov327_end_blk0	; block 0 END_ADDR
 10970                           
 10971                           ; Function: get_fun, coverage: 21,20,19,18,16,10,8,5,3,1,0
 10972  26A0  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 10973  26A4  00000022           	ddw	__ccovbit21_165/(0+8)	; CC_ADDR
 10974  26A8  00000001           	ddw	1	; NUM_POINTS
 10975  26AC  00000001           	ddw	__ccovbit21_165& (0+7)	; OFFSET
 10976  26B0  00000000           	ddw	0	; Reserved
 10977  26B4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 10978  26B8  0000000B           	ddw	11	; NUM_RANGES
 10979  26BC  0000026C           	ddw	__ccov339_start_blk21	; block 21 START_ADDR
 10980  26C0  0000026F           	ddw	__ccov339_end_blk21	; block 21 END_ADDR
 10981  26C4  0000026B           	ddw	__ccov338_start_blk20	; block 20 START_ADDR
 10982  26C8  0000026C           	ddw	__ccov338_end_blk20	; block 20 END_ADDR
 10983  26CC  00000267           	ddw	__ccov337_start_blk19	; block 19 START_ADDR
 10984  26D0  0000026B           	ddw	__ccov337_end_blk19	; block 19 END_ADDR
 10985  26D4  0000025F           	ddw	__ccov336_start_blk18	; block 18 START_ADDR
 10986  26D8  00000267           	ddw	__ccov336_end_blk18	; block 18 END_ADDR
 10987  26DC  0000025D           	ddw	__ccov335_start_blk16	; block 16 START_ADDR
 10988  26E0  0000025F           	ddw	__ccov335_end_blk16	; block 16 END_ADDR
 10989  26E4  0000024D           	ddw	__ccov332_start_blk10	; block 10 START_ADDR
 10990  26E8  00000252           	ddw	__ccov332_end_blk10	; block 10 END_ADDR
 10991  26EC  0000024B           	ddw	__ccov331_start_blk8	; block 8 START_ADDR
 10992  26F0  0000024D           	ddw	__ccov331_end_blk8	; block 8 END_ADDR
 10993  26F4  00000249           	ddw	__ccov330_start_blk5	; block 5 START_ADDR
 10994  26F8  0000024B           	ddw	__ccov330_end_blk5	; block 5 END_ADDR
 10995  26FC  00000241           	ddw	__ccov329_start_blk3	; block 3 START_ADDR
 10996  2700  00000249           	ddw	__ccov329_end_blk3	; block 3 END_ADDR
 10997  2704  0000023F           	ddw	__ccov328_start_blk1	; block 1 START_ADDR
 10998  2708  00000241           	ddw	__ccov328_end_blk1	; block 1 END_ADDR
 10999  270C  0000023B           	ddw	_get_fun	; block 0 START_ADDR
 11000  2710  0000023F           	ddw	__ccov327_end_blk0	; block 0 END_ADDR
 11001                           
 11002                           ; Function: get_fun, coverage: 23,18,16,10,8,5,3,1,0
 11003  2714  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11004  2718  00000022           	ddw	__ccovbit23_166/(0+8)	; CC_ADDR
 11005  271C  00000001           	ddw	1	; NUM_POINTS
 11006  2720  00000000           	ddw	__ccovbit23_166& (0+7)	; OFFSET
 11007  2724  00000000           	ddw	0	; Reserved
 11008  2728  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11009  272C  00000009           	ddw	9	; NUM_RANGES
 11010  2730  0000026F           	ddw	__ccov340_start_blk23	; block 23 START_ADDR
 11011  2734  00000277           	ddw	__ccov340_end_blk23	; block 23 END_ADDR
 11012  2738  0000025F           	ddw	__ccov336_start_blk18	; block 18 START_ADDR
 11013  273C  00000267           	ddw	__ccov336_end_blk18	; block 18 END_ADDR
 11014  2740  0000025D           	ddw	__ccov335_start_blk16	; block 16 START_ADDR
 11015  2744  0000025F           	ddw	__ccov335_end_blk16	; block 16 END_ADDR
 11016  2748  0000024D           	ddw	__ccov332_start_blk10	; block 10 START_ADDR
 11017  274C  00000252           	ddw	__ccov332_end_blk10	; block 10 END_ADDR
 11018  2750  0000024B           	ddw	__ccov331_start_blk8	; block 8 START_ADDR
 11019  2754  0000024D           	ddw	__ccov331_end_blk8	; block 8 END_ADDR
 11020  2758  00000249           	ddw	__ccov330_start_blk5	; block 5 START_ADDR
 11021  275C  0000024B           	ddw	__ccov330_end_blk5	; block 5 END_ADDR
 11022  2760  00000241           	ddw	__ccov329_start_blk3	; block 3 START_ADDR
 11023  2764  00000249           	ddw	__ccov329_end_blk3	; block 3 END_ADDR
 11024  2768  0000023F           	ddw	__ccov328_start_blk1	; block 1 START_ADDR
 11025  276C  00000241           	ddw	__ccov328_end_blk1	; block 1 END_ADDR
 11026  2770  0000023B           	ddw	_get_fun	; block 0 START_ADDR
 11027  2774  0000023F           	ddw	__ccov327_end_blk0	; block 0 END_ADDR
 11028                           
 11029                           ; Function: get_fun, coverage: 26,25,24,23,18,16,10,8,5,3,1,0
 11030  2778  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11031  277C  00000021           	ddw	__ccovbit26_167/(0+8)	; CC_ADDR
 11032  2780  00000001           	ddw	1	; NUM_POINTS
 11033  2784  00000007           	ddw	__ccovbit26_167& (0+7)	; OFFSET
 11034  2788  00000000           	ddw	0	; Reserved
 11035  278C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11036  2790  0000000C           	ddw	12	; NUM_RANGES
 11037  2794  0000027C           	ddw	__ccov343_start_blk26	; block 26 START_ADDR
 11038  2798  0000027E           	ddw	__ccov343_end_blk26	; block 26 END_ADDR
 11039  279C  0000027B           	ddw	__ccov342_start_blk25	; block 25 START_ADDR
 11040  27A0  0000027C           	ddw	__ccov342_end_blk25	; block 25 END_ADDR
 11041  27A4  00000277           	ddw	__ccov341_start_blk24	; block 24 START_ADDR
 11042  27A8  0000027B           	ddw	__ccov341_end_blk24	; block 24 END_ADDR
 11043  27AC  0000026F           	ddw	__ccov340_start_blk23	; block 23 START_ADDR
 11044  27B0  00000277           	ddw	__ccov340_end_blk23	; block 23 END_ADDR
 11045  27B4  0000025F           	ddw	__ccov336_start_blk18	; block 18 START_ADDR
 11046  27B8  00000267           	ddw	__ccov336_end_blk18	; block 18 END_ADDR
 11047  27BC  0000025D           	ddw	__ccov335_start_blk16	; block 16 START_ADDR
 11048  27C0  0000025F           	ddw	__ccov335_end_blk16	; block 16 END_ADDR
 11049  27C4  0000024D           	ddw	__ccov332_start_blk10	; block 10 START_ADDR
 11050  27C8  00000252           	ddw	__ccov332_end_blk10	; block 10 END_ADDR
 11051  27CC  0000024B           	ddw	__ccov331_start_blk8	; block 8 START_ADDR
 11052  27D0  0000024D           	ddw	__ccov331_end_blk8	; block 8 END_ADDR
 11053  27D4  00000249           	ddw	__ccov330_start_blk5	; block 5 START_ADDR
 11054  27D8  0000024B           	ddw	__ccov330_end_blk5	; block 5 END_ADDR
 11055  27DC  00000241           	ddw	__ccov329_start_blk3	; block 3 START_ADDR
 11056  27E0  00000249           	ddw	__ccov329_end_blk3	; block 3 END_ADDR
 11057  27E4  0000023F           	ddw	__ccov328_start_blk1	; block 1 START_ADDR
 11058  27E8  00000241           	ddw	__ccov328_end_blk1	; block 1 END_ADDR
 11059  27EC  0000023B           	ddw	_get_fun	; block 0 START_ADDR
 11060  27F0  0000023F           	ddw	__ccov327_end_blk0	; block 0 END_ADDR
 11061                           
 11062                           ; Function: get_fun, coverage: 29,18,16,10,8,5,3,1,0
 11063  27F4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11064  27F8  00000021           	ddw	__ccovbit29_168/(0+8)	; CC_ADDR
 11065  27FC  00000001           	ddw	1	; NUM_POINTS
 11066  2800  00000006           	ddw	__ccovbit29_168& (0+7)	; OFFSET
 11067  2804  00000000           	ddw	0	; Reserved
 11068  2808  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11069  280C  00000009           	ddw	9	; NUM_RANGES
 11070  2810  0000027E           	ddw	__ccov344_start_blk29	; block 29 START_ADDR
 11071  2814  00000280           	ddw	__ccov344_end_blk29	; block 29 END_ADDR
 11072  2818  0000025F           	ddw	__ccov336_start_blk18	; block 18 START_ADDR
 11073  281C  00000267           	ddw	__ccov336_end_blk18	; block 18 END_ADDR
 11074  2820  0000025D           	ddw	__ccov335_start_blk16	; block 16 START_ADDR
 11075  2824  0000025F           	ddw	__ccov335_end_blk16	; block 16 END_ADDR
 11076  2828  0000024D           	ddw	__ccov332_start_blk10	; block 10 START_ADDR
 11077  282C  00000252           	ddw	__ccov332_end_blk10	; block 10 END_ADDR
 11078  2830  0000024B           	ddw	__ccov331_start_blk8	; block 8 START_ADDR
 11079  2834  0000024D           	ddw	__ccov331_end_blk8	; block 8 END_ADDR
 11080  2838  00000249           	ddw	__ccov330_start_blk5	; block 5 START_ADDR
 11081  283C  0000024B           	ddw	__ccov330_end_blk5	; block 5 END_ADDR
 11082  2840  00000241           	ddw	__ccov329_start_blk3	; block 3 START_ADDR
 11083  2844  00000249           	ddw	__ccov329_end_blk3	; block 3 END_ADDR
 11084  2848  0000023F           	ddw	__ccov328_start_blk1	; block 1 START_ADDR
 11085  284C  00000241           	ddw	__ccov328_end_blk1	; block 1 END_ADDR
 11086  2850  0000023B           	ddw	_get_fun	; block 0 START_ADDR
 11087  2854  0000023F           	ddw	__ccov327_end_blk0	; block 0 END_ADDR
 11088                           
 11089                           ; Function: get_fun, coverage: 31,0
 11090  2858  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11091  285C  00000021           	ddw	__ccovbit31_169/(0+8)	; CC_ADDR
 11092  2860  00000001           	ddw	1	; NUM_POINTS
 11093  2864  00000005           	ddw	__ccovbit31_169& (0+7)	; OFFSET
 11094  2868  00000000           	ddw	0	; Reserved
 11095  286C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11096  2870  00000002           	ddw	2	; NUM_RANGES
 11097  2874  00000280           	ddw	__ccov345_start_blk31	; block 31 START_ADDR
 11098  2878  00000283           	ddw	__end_of_get_fun	; block 31 END_ADDR
 11099  287C  0000023B           	ddw	_get_fun	; block 0 START_ADDR
 11100  2880  0000023F           	ddw	__ccov327_end_blk0	; block 0 END_ADDR
 11101                           
 11102                           ; Function: get_jump, coverage: 5,4,3,1,0
 11103  2884  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11104  2888  00000021           	ddw	__ccovbit5_170/(0+8)	; CC_ADDR
 11105  288C  00000001           	ddw	1	; NUM_POINTS
 11106  2890  00000004           	ddw	__ccovbit5_170& (0+7)	; OFFSET
 11107  2894  00000000           	ddw	0	; Reserved
 11108  2898  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11109  289C  00000005           	ddw	5	; NUM_RANGES
 11110  28A0  00000390           	ddw	__ccov350_start_blk5	; block 5 START_ADDR
 11111  28A4  00000396           	ddw	__ccov350_end_blk5	; block 5 END_ADDR
 11112  28A8  0000038B           	ddw	__ccov349_start_blk4	; block 4 START_ADDR
 11113  28AC  00000390           	ddw	__ccov349_end_blk4	; block 4 END_ADDR
 11114  28B0  00000389           	ddw	__ccov348_start_blk3	; block 3 START_ADDR
 11115  28B4  0000038B           	ddw	__ccov348_end_blk3	; block 3 END_ADDR
 11116  28B8  00000387           	ddw	__ccov347_start_blk1	; block 1 START_ADDR
 11117  28BC  00000389           	ddw	__ccov347_end_blk1	; block 1 END_ADDR
 11118  28C0  00000383           	ddw	_get_jump	; block 0 START_ADDR
 11119  28C4  00000387           	ddw	__ccov346_end_blk0	; block 0 END_ADDR
 11120                           
 11121                           ; Function: get_jump, coverage: 7,4,3,1,0
 11122  28C8  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11123  28CC  00000021           	ddw	__ccovbit7_171/(0+8)	; CC_ADDR
 11124  28D0  00000001           	ddw	1	; NUM_POINTS
 11125  28D4  00000003           	ddw	__ccovbit7_171& (0+7)	; OFFSET
 11126  28D8  00000000           	ddw	0	; Reserved
 11127  28DC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11128  28E0  00000005           	ddw	5	; NUM_RANGES
 11129  28E4  00000396           	ddw	__ccov351_start_blk7	; block 7 START_ADDR
 11130  28E8  0000039B           	ddw	__ccov351_end_blk7	; block 7 END_ADDR
 11131  28EC  0000038B           	ddw	__ccov349_start_blk4	; block 4 START_ADDR
 11132  28F0  00000390           	ddw	__ccov349_end_blk4	; block 4 END_ADDR
 11133  28F4  00000389           	ddw	__ccov348_start_blk3	; block 3 START_ADDR
 11134  28F8  0000038B           	ddw	__ccov348_end_blk3	; block 3 END_ADDR
 11135  28FC  00000387           	ddw	__ccov347_start_blk1	; block 1 START_ADDR
 11136  2900  00000389           	ddw	__ccov347_end_blk1	; block 1 END_ADDR
 11137  2904  00000383           	ddw	_get_jump	; block 0 START_ADDR
 11138  2908  00000387           	ddw	__ccov346_end_blk0	; block 0 END_ADDR
 11139                           
 11140                           ; Function: get_jump, coverage: 12,11,10,9,4,3,1,0
 11141  290C  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11142  2910  00000021           	ddw	__ccovbit12_172/(0+8)	; CC_ADDR
 11143  2914  00000001           	ddw	1	; NUM_POINTS
 11144  2918  00000002           	ddw	__ccovbit12_172& (0+7)	; OFFSET
 11145  291C  00000000           	ddw	0	; Reserved
 11146  2920  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11147  2924  00000008           	ddw	8	; NUM_RANGES
 11148  2928  000003A7           	ddw	__ccov355_start_blk12	; block 12 START_ADDR
 11149  292C  000003AA           	ddw	__ccov355_end_blk12	; block 12 END_ADDR
 11150  2930  000003A6           	ddw	__ccov354_start_blk11	; block 11 START_ADDR
 11151  2934  000003A7           	ddw	__ccov354_end_blk11	; block 11 END_ADDR
 11152  2938  000003A2           	ddw	__ccov353_start_blk10	; block 10 START_ADDR
 11153  293C  000003A6           	ddw	__ccov353_end_blk10	; block 10 END_ADDR
 11154  2940  0000039B           	ddw	__ccov352_start_blk9	; block 9 START_ADDR
 11155  2944  000003A2           	ddw	__ccov352_end_blk9	; block 9 END_ADDR
 11156  2948  0000038B           	ddw	__ccov349_start_blk4	; block 4 START_ADDR
 11157  294C  00000390           	ddw	__ccov349_end_blk4	; block 4 END_ADDR
 11158  2950  00000389           	ddw	__ccov348_start_blk3	; block 3 START_ADDR
 11159  2954  0000038B           	ddw	__ccov348_end_blk3	; block 3 END_ADDR
 11160  2958  00000387           	ddw	__ccov347_start_blk1	; block 1 START_ADDR
 11161  295C  00000389           	ddw	__ccov347_end_blk1	; block 1 END_ADDR
 11162  2960  00000383           	ddw	_get_jump	; block 0 START_ADDR
 11163  2964  00000387           	ddw	__ccov346_end_blk0	; block 0 END_ADDR
 11164                           
 11165                           ; Function: get_jump, coverage: 14,9,4,3,1,0
 11166  2968  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11167  296C  00000021           	ddw	__ccovbit14_173/(0+8)	; CC_ADDR
 11168  2970  00000001           	ddw	1	; NUM_POINTS
 11169  2974  00000001           	ddw	__ccovbit14_173& (0+7)	; OFFSET
 11170  2978  00000000           	ddw	0	; Reserved
 11171  297C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11172  2980  00000006           	ddw	6	; NUM_RANGES
 11173  2984  000003AA           	ddw	__ccov356_start_blk14	; block 14 START_ADDR
 11174  2988  000003B2           	ddw	__ccov356_end_blk14	; block 14 END_ADDR
 11175  298C  0000039B           	ddw	__ccov352_start_blk9	; block 9 START_ADDR
 11176  2990  000003A2           	ddw	__ccov352_end_blk9	; block 9 END_ADDR
 11177  2994  0000038B           	ddw	__ccov349_start_blk4	; block 4 START_ADDR
 11178  2998  00000390           	ddw	__ccov349_end_blk4	; block 4 END_ADDR
 11179  299C  00000389           	ddw	__ccov348_start_blk3	; block 3 START_ADDR
 11180  29A0  0000038B           	ddw	__ccov348_end_blk3	; block 3 END_ADDR
 11181  29A4  00000387           	ddw	__ccov347_start_blk1	; block 1 START_ADDR
 11182  29A8  00000389           	ddw	__ccov347_end_blk1	; block 1 END_ADDR
 11183  29AC  00000383           	ddw	_get_jump	; block 0 START_ADDR
 11184  29B0  00000387           	ddw	__ccov346_end_blk0	; block 0 END_ADDR
 11185                           
 11186                           ; Function: get_jump, coverage: 17,16,15,14,9,4,3,1,0
 11187  29B4  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11188  29B8  00000021           	ddw	__ccovbit17_174/(0+8)	; CC_ADDR
 11189  29BC  00000001           	ddw	1	; NUM_POINTS
 11190  29C0  00000000           	ddw	__ccovbit17_174& (0+7)	; OFFSET
 11191  29C4  00000000           	ddw	0	; Reserved
 11192  29C8  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11193  29CC  00000009           	ddw	9	; NUM_RANGES
 11194  29D0  000003B7           	ddw	__ccov359_start_blk17	; block 17 START_ADDR
 11195  29D4  000003B9           	ddw	__ccov359_end_blk17	; block 17 END_ADDR
 11196  29D8  000003B6           	ddw	__ccov358_start_blk16	; block 16 START_ADDR
 11197  29DC  000003B7           	ddw	__ccov358_end_blk16	; block 16 END_ADDR
 11198  29E0  000003B2           	ddw	__ccov357_start_blk15	; block 15 START_ADDR
 11199  29E4  000003B6           	ddw	__ccov357_end_blk15	; block 15 END_ADDR
 11200  29E8  000003AA           	ddw	__ccov356_start_blk14	; block 14 START_ADDR
 11201  29EC  000003B2           	ddw	__ccov356_end_blk14	; block 14 END_ADDR
 11202  29F0  0000039B           	ddw	__ccov352_start_blk9	; block 9 START_ADDR
 11203  29F4  000003A2           	ddw	__ccov352_end_blk9	; block 9 END_ADDR
 11204  29F8  0000038B           	ddw	__ccov349_start_blk4	; block 4 START_ADDR
 11205  29FC  00000390           	ddw	__ccov349_end_blk4	; block 4 END_ADDR
 11206  2A00  00000389           	ddw	__ccov348_start_blk3	; block 3 START_ADDR
 11207  2A04  0000038B           	ddw	__ccov348_end_blk3	; block 3 END_ADDR
 11208  2A08  00000387           	ddw	__ccov347_start_blk1	; block 1 START_ADDR
 11209  2A0C  00000389           	ddw	__ccov347_end_blk1	; block 1 END_ADDR
 11210  2A10  00000383           	ddw	_get_jump	; block 0 START_ADDR
 11211  2A14  00000387           	ddw	__ccov346_end_blk0	; block 0 END_ADDR
 11212                           
 11213                           ; Function: get_jump, coverage: 20,9,4,3,1,0
 11214  2A18  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11215  2A1C  00000020           	ddw	__ccovbit20_175/(0+8)	; CC_ADDR
 11216  2A20  00000001           	ddw	1	; NUM_POINTS
 11217  2A24  00000007           	ddw	__ccovbit20_175& (0+7)	; OFFSET
 11218  2A28  00000000           	ddw	0	; Reserved
 11219  2A2C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11220  2A30  00000006           	ddw	6	; NUM_RANGES
 11221  2A34  000003B9           	ddw	__ccov360_start_blk20	; block 20 START_ADDR
 11222  2A38  000003BB           	ddw	__ccov360_end_blk20	; block 20 END_ADDR
 11223  2A3C  0000039B           	ddw	__ccov352_start_blk9	; block 9 START_ADDR
 11224  2A40  000003A2           	ddw	__ccov352_end_blk9	; block 9 END_ADDR
 11225  2A44  0000038B           	ddw	__ccov349_start_blk4	; block 4 START_ADDR
 11226  2A48  00000390           	ddw	__ccov349_end_blk4	; block 4 END_ADDR
 11227  2A4C  00000389           	ddw	__ccov348_start_blk3	; block 3 START_ADDR
 11228  2A50  0000038B           	ddw	__ccov348_end_blk3	; block 3 END_ADDR
 11229  2A54  00000387           	ddw	__ccov347_start_blk1	; block 1 START_ADDR
 11230  2A58  00000389           	ddw	__ccov347_end_blk1	; block 1 END_ADDR
 11231  2A5C  00000383           	ddw	_get_jump	; block 0 START_ADDR
 11232  2A60  00000387           	ddw	__ccov346_end_blk0	; block 0 END_ADDR
 11233                           
 11234                           ; Function: get_jump, coverage: 22,0
 11235  2A64  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11236  2A68  00000020           	ddw	__ccovbit22_176/(0+8)	; CC_ADDR
 11237  2A6C  00000001           	ddw	1	; NUM_POINTS
 11238  2A70  00000006           	ddw	__ccovbit22_176& (0+7)	; OFFSET
 11239  2A74  00000000           	ddw	0	; Reserved
 11240  2A78  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11241  2A7C  00000002           	ddw	2	; NUM_RANGES
 11242  2A80  000003BB           	ddw	__ccov361_start_blk22	; block 22 START_ADDR
 11243  2A84  000003BE           	ddw	__end_of_get_jump	; block 22 END_ADDR
 11244  2A88  00000383           	ddw	_get_jump	; block 0 START_ADDR
 11245  2A8C  00000387           	ddw	__ccov346_end_blk0	; block 0 END_ADDR
 11246                           
 11247                           ; Function: start_setup, coverage: 31,30,29,28,27,26,25,24,23,22,21,18,15,12,9,6,4,3,2,1
      +                          ,0
 11248  2A90  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11249  2A94  00000020           	ddw	__ccovbit31_177/(0+8)	; CC_ADDR
 11250  2A98  00000001           	ddw	1	; NUM_POINTS
 11251  2A9C  00000005           	ddw	__ccovbit31_177& (0+7)	; OFFSET
 11252  2AA0  00000000           	ddw	0	; Reserved
 11253  2AA4  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11254  2AA8  00000015           	ddw	21	; NUM_RANGES
 11255  2AAC  00000346           	ddw	__ccov382_start_blk31	; block 31 START_ADDR
 11256  2AB0  00000348           	ddw	__end_of_start_setup	; block 31 END_ADDR
 11257  2AB4  00000345           	ddw	__ccov381_start_blk30	; block 30 START_ADDR
 11258  2AB8  00000346           	ddw	__ccov381_end_blk30	; block 30 END_ADDR
 11259  2ABC  00000343           	ddw	__ccov380_start_blk29	; block 29 START_ADDR
 11260  2AC0  00000345           	ddw	__ccov380_end_blk29	; block 29 END_ADDR
 11261  2AC4  00000341           	ddw	__ccov379_start_blk28	; block 28 START_ADDR
 11262  2AC8  00000343           	ddw	__ccov379_end_blk28	; block 28 END_ADDR
 11263  2ACC  00000340           	ddw	__ccov378_start_blk27	; block 27 START_ADDR
 11264  2AD0  00000341           	ddw	__ccov378_end_blk27	; block 27 END_ADDR
 11265  2AD4  0000033E           	ddw	__ccov377_start_blk26	; block 26 START_ADDR
 11266  2AD8  00000340           	ddw	__ccov377_end_blk26	; block 26 END_ADDR
 11267  2ADC  0000033C           	ddw	__ccov376_start_blk25	; block 25 START_ADDR
 11268  2AE0  0000033E           	ddw	__ccov376_end_blk25	; block 25 END_ADDR
 11269  2AE4  0000033A           	ddw	__ccov375_start_blk24	; block 24 START_ADDR
 11270  2AE8  0000033C           	ddw	__ccov375_end_blk24	; block 24 END_ADDR
 11271  2AEC  00000338           	ddw	__ccov374_start_blk23	; block 23 START_ADDR
 11272  2AF0  0000033A           	ddw	__ccov374_end_blk23	; block 23 END_ADDR
 11273  2AF4  00000331           	ddw	__ccov373_start_blk22	; block 22 START_ADDR
 11274  2AF8  00000338           	ddw	__ccov373_end_blk22	; block 22 END_ADDR
 11275  2AFC  00000330           	ddw	__ccov372_start_blk21	; block 21 START_ADDR
 11276  2B00  00000331           	ddw	__ccov372_end_blk21	; block 21 END_ADDR
 11277  2B04  0000032F           	ddw	__ccov371_start_blk18	; block 18 START_ADDR
 11278  2B08  00000330           	ddw	__ccov371_end_blk18	; block 18 END_ADDR
 11279  2B0C  0000032E           	ddw	__ccov370_start_blk15	; block 15 START_ADDR
 11280  2B10  0000032F           	ddw	__ccov370_end_blk15	; block 15 END_ADDR
 11281  2B14  0000032D           	ddw	__ccov369_start_blk12	; block 12 START_ADDR
 11282  2B18  0000032E           	ddw	__ccov369_end_blk12	; block 12 END_ADDR
 11283  2B1C  0000032C           	ddw	__ccov368_start_blk9	; block 9 START_ADDR
 11284  2B20  0000032D           	ddw	__ccov368_end_blk9	; block 9 END_ADDR
 11285  2B24  0000032A           	ddw	__ccov367_start_blk6	; block 6 START_ADDR
 11286  2B28  0000032C           	ddw	__ccov367_end_blk6	; block 6 END_ADDR
 11287  2B2C  00000321           	ddw	__ccov366_start_blk4	; block 4 START_ADDR
 11288  2B30  0000032A           	ddw	__ccov366_end_blk4	; block 4 END_ADDR
 11289  2B34  0000031E           	ddw	__ccov365_start_blk3	; block 3 START_ADDR
 11290  2B38  00000321           	ddw	__ccov365_end_blk3	; block 3 END_ADDR
 11291  2B3C  0000030C           	ddw	__ccov364_start_blk2	; block 2 START_ADDR
 11292  2B40  0000031E           	ddw	__ccov364_end_blk2	; block 2 END_ADDR
 11293  2B44  0000030B           	ddw	__ccov363_start_blk1	; block 1 START_ADDR
 11294  2B48  0000030C           	ddw	__ccov363_end_blk1	; block 1 END_ADDR
 11295  2B4C  00000308           	ddw	_start_setup	; block 0 START_ADDR
 11296  2B50  0000030B           	ddw	__ccov362_end_blk0	; block 0 END_ADDR
 11297                           
 11298                           ; Function: main, coverage: 4,3,2,1,0
 11299  2B54  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11300  2B58  00000020           	ddw	__ccovbit4_178/(0+8)	; CC_ADDR
 11301  2B5C  00000001           	ddw	1	; NUM_POINTS
 11302  2B60  00000004           	ddw	__ccovbit4_178& (0+7)	; OFFSET
 11303  2B64  00000000           	ddw	0	; Reserved
 11304  2B68  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11305  2B6C  00000005           	ddw	5	; NUM_RANGES
 11306  2B70  0000041F           	ddw	__ccov387_start_blk4	; block 4 START_ADDR
 11307  2B74  00000434           	ddw	__ccov387_end_blk4	; block 4 END_ADDR
 11308  2B78  0000041B           	ddw	__ccov386_start_blk3	; block 3 START_ADDR
 11309  2B7C  0000041F           	ddw	__ccov386_end_blk3	; block 3 END_ADDR
 11310  2B80  00000418           	ddw	__ccov385_start_blk2	; block 2 START_ADDR
 11311  2B84  0000041B           	ddw	__ccov385_end_blk2	; block 2 END_ADDR
 11312  2B88  00000417           	ddw	__ccov384_start_blk1	; block 1 START_ADDR
 11313  2B8C  00000418           	ddw	__ccov384_end_blk1	; block 1 END_ADDR
 11314  2B90  00000414           	ddw	_main	; block 0 START_ADDR
 11315  2B94  00000417           	ddw	__ccov383_end_blk0	; block 0 END_ADDR
 11316                           
 11317                           ; Function: main, coverage: 6,3,2,1,0
 11318  2B98  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11319  2B9C  00000020           	ddw	__ccovbit6_179/(0+8)	; CC_ADDR
 11320  2BA0  00000001           	ddw	1	; NUM_POINTS
 11321  2BA4  00000003           	ddw	__ccovbit6_179& (0+7)	; OFFSET
 11322  2BA8  00000000           	ddw	0	; Reserved
 11323  2BAC  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11324  2BB0  00000005           	ddw	5	; NUM_RANGES
 11325  2BB4  00000434           	ddw	__ccov388_start_blk6	; block 6 START_ADDR
 11326  2BB8  0000043A           	ddw	__ccov388_end_blk6	; block 6 END_ADDR
 11327  2BBC  0000041B           	ddw	__ccov386_start_blk3	; block 3 START_ADDR
 11328  2BC0  0000041F           	ddw	__ccov386_end_blk3	; block 3 END_ADDR
 11329  2BC4  00000418           	ddw	__ccov385_start_blk2	; block 2 START_ADDR
 11330  2BC8  0000041B           	ddw	__ccov385_end_blk2	; block 2 END_ADDR
 11331  2BCC  00000417           	ddw	__ccov384_start_blk1	; block 1 START_ADDR
 11332  2BD0  00000418           	ddw	__ccov384_end_blk1	; block 1 END_ADDR
 11333  2BD4  00000414           	ddw	_main	; block 0 START_ADDR
 11334  2BD8  00000417           	ddw	__ccov383_end_blk0	; block 0 END_ADDR
 11335                           
 11336                           ; Function: EEPROM_WriteByte, coverage: 9,8,7,6,5,4,3,2,0
 11337  2BDC  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11338  2BE0  00000020           	ddw	__ccovbit9_180/(0+8)	; CC_ADDR
 11339  2BE4  00000001           	ddw	1	; NUM_POINTS
 11340  2BE8  00000002           	ddw	__ccovbit9_180& (0+7)	; OFFSET
 11341  2BEC  00000000           	ddw	0	; Reserved
 11342  2BF0  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11343  2BF4  00000008           	ddw	8	; NUM_RANGES
 11344  2BF8  0000045F           	ddw	__ccov397_start_blk9	; block 9 START_ADDR
 11345  2BFC  00000462           	ddw	__end_of_EEPROM_WriteByte	; block 9 END_ADDR
 11346  2C00  0000045D           	ddw	__ccov396_start_blk8	; block 8 START_ADDR
 11347  2C04  0000045F           	ddw	__ccov396_end_blk8	; block 8 END_ADDR
 11348  2C08  00000457           	ddw	__ccov395_start_blk7	; block 7 START_ADDR
 11349  2C0C  0000045D           	ddw	__ccov395_end_blk7	; block 7 END_ADDR
 11350  2C10  00000456           	ddw	__ccov394_start_blk6	; block 6 START_ADDR
 11351  2C14  00000457           	ddw	__ccov394_end_blk6	; block 6 END_ADDR
 11352  2C18  00000451           	ddw	__ccov393_start_blk5	; block 5 START_ADDR
 11353  2C1C  00000456           	ddw	__ccov393_end_blk5	; block 5 END_ADDR
 11354  2C20  00000447           	ddw	__ccov392_start_blk4	; block 4 START_ADDR
 11355  2C24  00000451           	ddw	__ccov392_end_blk4	; block 4 END_ADDR
 11356  2C28  00000442           	ddw	__ccov391_start_blk3	; block 3 START_ADDR
 11357  2C2C  00000447           	ddw	__ccov391_end_blk3	; block 3 END_ADDR
 11358  2C30  0000043C           	ddw	_EEPROM_WriteByte	; block 2 START_ADDR
 11359  2C34  00000442           	ddw	__ccov390_end_blk2	; block 2 END_ADDR
 11360                           
 11361                           ; Function: EEPROM_ReadByte, coverage: 3,2,0
 11362  2C38  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11363  2C3C  00000020           	ddw	__ccovbit3_181/(0+8)	; CC_ADDR
 11364  2C40  00000001           	ddw	1	; NUM_POINTS
 11365  2C44  00000001           	ddw	__ccovbit3_181& (0+7)	; OFFSET
 11366  2C48  00000000           	ddw	0	; Reserved
 11367  2C4C  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11368  2C50  00000002           	ddw	2	; NUM_RANGES
 11369  2C54  00000504           	ddw	__ccov400_start_blk3	; block 3 START_ADDR
 11370  2C58  0000050B           	ddw	__ccov400_end_blk3	; block 3 END_ADDR
 11371  2C5C  000004FE           	ddw	_EEPROM_ReadByte	; block 2 START_ADDR
 11372  2C60  00000504           	ddw	__ccov399_end_blk2	; block 2 END_ADDR
 11373                           
 11374                           ; Function: EEPROM_ReadByte, coverage: 8,6,5,3,2,0
 11375  2C64  00000000           	ddw	0	; CC_ADDR_SPACE=Data
 11376  2C68  00000020           	ddw	__ccovbit8_182/(0+8)	; CC_ADDR
 11377  2C6C  00000001           	ddw	1	; NUM_POINTS
 11378  2C70  00000000           	ddw	__ccovbit8_182& (0+7)	; OFFSET
 11379  2C74  00000000           	ddw	0	; Reserved
 11380  2C78  FFFFFFFF           	ddw	4294967295	; RANGE_SPACE=restricted
 11381  2C7C  00000005           	ddw	5	; NUM_RANGES
 11382  2C80  00000514           	ddw	__ccov403_start_blk8	; block 8 START_ADDR
 11383  2C84  00000517           	ddw	__end_of_EEPROM_ReadByte	; block 8 END_ADDR
 11384  2C88  00000512           	ddw	__ccov402_start_blk6	; block 6 START_ADDR
 11385  2C8C  00000514           	ddw	__ccov402_end_blk6	; block 6 END_ADDR
 11386  2C90  0000050B           	ddw	__ccov401_start_blk5	; block 5 START_ADDR
 11387  2C94  00000512           	ddw	__ccov401_end_blk5	; block 5 END_ADDR
 11388  2C98  00000504           	ddw	__ccov400_start_blk3	; block 3 START_ADDR
 11389  2C9C  0000050B           	ddw	__ccov400_end_blk3	; block 3 END_ADDR
 11390  2CA0  000004FE           	ddw	_EEPROM_ReadByte	; block 2 START_ADDR
 11391  2CA4  00000504           	ddw	__ccov399_end_blk2	; block 2 END_ADDR
 11392  007E                     btemp	set	126	;btemp
 11393  007E                     int$flags	set	126
 11394  007E                     wtemp0	set	126
 11395                           
 11396                           	psect	idloc
 11397                           
 11398                           ;Config register IDLOC0 @ 0x8000
 11399                           ;	unspecified, using default values
 11400  8000                     	org	32768
 11401  8000  3FFF               	dw	16383
 11402                           
 11403                           ;Config register IDLOC1 @ 0x8001
 11404                           ;	unspecified, using default values
 11405  8001                     	org	32769
 11406  8001  3FFF               	dw	16383
 11407                           
 11408                           ;Config register IDLOC2 @ 0x8002
 11409                           ;	unspecified, using default values
 11410  8002                     	org	32770
 11411  8002  3FFF               	dw	16383
 11412                           
 11413                           ;Config register IDLOC3 @ 0x8003
 11414                           ;	unspecified, using default values
 11415  8003                     	org	32771
 11416  8003  3FFF               	dw	16383
 11417                           
 11418                           	psect	config
 11419                           
 11420                           ;Config register CONFIG1 @ 0x8007
 11421                           ;	Oscillator Selection
 11422                           ;	FOSC = INTOSC, INTOSC oscillator: I/O function on CLKIN pin
 11423                           ;	Watchdog Timer Enable
 11424                           ;	WDTE = ON, WDT enabled
 11425                           ;	Power-up Timer Enable
 11426                           ;	PWRTE = ON, PWRT enabled
 11427                           ;	MCLR Pin Function Select
 11428                           ;	MCLRE = ON, MCLR/VPP pin function is MCLR
 11429                           ;	Flash Program Memory Code Protection
 11430                           ;	CP = OFF, Program memory code protection is disabled
 11431                           ;	Data Memory Code Protection
 11432                           ;	CPD = OFF, Data memory code protection is disabled
 11433                           ;	Brown-out Reset Enable
 11434                           ;	BOREN = ON, Brown-out Reset enabled
 11435                           ;	Clock Out Enable
 11436                           ;	CLKOUTEN = OFF, CLKOUT function is disabled. I/O or oscillator function on the CLKOUT 
      +                          pin
 11437                           ;	Internal/External Switchover
 11438                           ;	IESO = ON, Internal/External Switchover mode is enabled
 11439                           ;	Fail-Safe Clock Monitor Enable
 11440                           ;	FCMEN = ON, Fail-Safe Clock Monitor is enabled
 11441  8007                     	org	32775
 11442  8007  3FDC               	dw	16348
 11443                           
 11444                           ;Config register CONFIG2 @ 0x8008
 11445                           ;	Flash Memory Self-Write Protection
 11446                           ;	WRT = OFF, Write protection off
 11447                           ;	PLL Enable
 11448                           ;	PLLEN = OFF, 4x PLL disabled
 11449                           ;	Stack Overflow/Underflow Reset Enable
 11450                           ;	STVREN = ON, Stack Overflow or Underflow will cause a Reset
 11451                           ;	Brown-out Reset Voltage Selection
 11452                           ;	BORV = LO, Brown-out Reset Voltage (Vbor), low trip point selected.
 11453                           ;	Low-Voltage Programming Enable
 11454                           ;	LVP = OFF, High-voltage on MCLR/VPP must be used for programming
 11455  8008                     	org	32776
 11456  8008  1EFF               	dw	7935

Data Sizes:
    Strings     0
    Constant    26
    Data        0
    BSS         36
    Persistent  37
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      14
    BANK0            80      2      58
    BANK1            80      0       0
    BANK2            80      0       0

Pointer List with Targets:

    ADC_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> Absolute function(), 

    TMR0_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> zummer_switch(), TMR0_DefaultInterruptHandler(), 

    TMR0_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> zummer_switch(), TMR0_DefaultInterruptHandler(), Absolute function(), 

    TMR2_SetInterruptHandler@InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), TMR2_DefaultInterruptHandler(), 

    TMR2_InterruptHandler	PTR FTN()void  size(2) Largest target is 1
		 -> ms_tick(), Absolute function(), TMR2_DefaultInterruptHandler(), 


Critical Paths under _main in COMMON

    _main->_get_wsp
    _eeprom_set->_EEPROM_WriteByte
    _SYSTEM_Initialize->_TMR0_Initialize
    _TMR2_Initialize->_TMR2_SetInterruptHandler
    _TMR0_Initialize->_TMR0_SetInterruptHandler
    _get_wsp->_ADC_GetConversion

Critical Paths under _INTERRUPT_InterruptManager in COMMON

    _ms_tick->_sec_work
    _sec_work->_minute_tick
    _sec_work->_sec_30_work

Critical Paths under _main in BANK0

    _main->_get_wsp
    _start_setup->_eeprom_set

Critical Paths under _INTERRUPT_InterruptManager in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _INTERRUPT_InterruptManager in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0    1549
                  _autorotation_work
                              _close
                           _fun_work
                            _get_fun
                           _get_jump
                            _get_wsp
                      _hardware_work
                        _start_setup
                          _switch_wm
 ---------------------------------------------------------------------------------
 (1) _switch_wm                                            1     1      0       0
                                              2 COMMON     1     1      0
                           _rele_off
 ---------------------------------------------------------------------------------
 (1) _start_setup                                          0     0      0    1453
                  _SYSTEM_Initialize
           _TMR0_SetInterruptHandler
           _TMR2_SetInterruptHandler
                    _TMR2_StartTimer
                         _eeprom_set
 ---------------------------------------------------------------------------------
 (2) _eeprom_set                                           2     2      0     757
                                              0 BANK0      2     2      0
                    _EEPROM_ReadByte
                   _EEPROM_WriteByte
 ---------------------------------------------------------------------------------
 (3) _EEPROM_WriteByte                                     4     3      1     692
                                              2 COMMON     4     3      1
 ---------------------------------------------------------------------------------
 (3) _EEPROM_ReadByte                                      3     3      0      31
                                              2 COMMON     3     3      0
 ---------------------------------------------------------------------------------
 (2) _TMR2_StartTimer                                      0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _SYSTEM_Initialize                                    0     0      0     348
                     _ADC_Initialize
              _OSCILLATOR_Initialize
             _PIN_MANAGER_Initialize
                    _TMR0_Initialize
                    _TMR2_Initialize
                     _WDT_Initialize
 ---------------------------------------------------------------------------------
 (3) _WDT_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _TMR2_Initialize                                      0     0      0     174
           _TMR2_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR2_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _TMR0_Initialize                                      1     1      0     174
                                              4 COMMON     1     1      0
           _TMR0_SetInterruptHandler
 ---------------------------------------------------------------------------------
 (2) _TMR0_SetInterruptHandler                             2     0      2     174
                                              2 COMMON     2     0      2
 ---------------------------------------------------------------------------------
 (3) _PIN_MANAGER_Initialize                               0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _OSCILLATOR_Initialize                                0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _ADC_Initialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _hardware_work                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _get_wsp                                              4     4      0      96
                                              4 COMMON     2     2      0
                                              0 BANK0      2     2      0
                  _ADC_GetConversion
                        _clear_alarm
                        _start_alarm
 ---------------------------------------------------------------------------------
 (2) _start_alarm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _clear_alarm                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _ADC_GetConversion                                    2     2      0      31
                                              2 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _get_jump                                             1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _get_fun                                              1     1      0       0
                                              2 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _fun_work                                             1     1      0       0
                                              2 COMMON     1     1      0
                              _close
                               _open
 ---------------------------------------------------------------------------------
 (2) _close                                                0     0      0       0
                           _go_close
                       _go_close_alt
                           _rele_off
 ---------------------------------------------------------------------------------
 (3) _go_close_alt                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _go_close                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _autorotation_work                                    0     0      0       0
                     _go_close_short
                               _open
 ---------------------------------------------------------------------------------
 (2) _open                                                 0     0      0       0
                            _go_open
                        _go_open_alt
                           _rele_off
 ---------------------------------------------------------------------------------
 (2) _rele_off                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _go_open_alt                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _go_open                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _go_close_short                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (5) _INTERRUPT_InterruptManager                           0     0      0       0
                           _TMR0_ISR
                           _TMR2_ISR
 ---------------------------------------------------------------------------------
 (6) _TMR2_ISR                                             0     0      0       0
                   Absolute function *
       _TMR2_DefaultInterruptHandler *
                            _ms_tick *
 ---------------------------------------------------------------------------------
 (7) _ms_tick                                              0     0      0       0
                        _ms_100_work
                        _ms_200_work
                           _sec_work
                          _stop_tone
 ---------------------------------------------------------------------------------
 (8) _stop_tone                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _sec_work                                             1     1      0       0
                                              1 COMMON     1     1      0
                        _minute_tick
                          _rele_tick
                        _sec_30_work
 ---------------------------------------------------------------------------------
 (9) _sec_30_work                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (9) _rele_tick                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (9) _minute_tick                                          1     1      0       0
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (8) _ms_200_work                                          0     0      0       0
                        _beep_double
                          _beep_long
                         _beep_short
 ---------------------------------------------------------------------------------
 (9) _beep_double                                          0     0      0       0
                          _beep_long
                         _beep_short
 ---------------------------------------------------------------------------------
 (9) _beep_short                                           0     0      0       0
                         _start_tone
 ---------------------------------------------------------------------------------
 (9) _beep_long                                            0     0      0       0
                         _start_tone
 ---------------------------------------------------------------------------------
 (10) _start_tone                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (8) _ms_100_work                                          0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR2_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (6) _TMR0_ISR                                             0     0      0       0
                   Absolute function *
       _TMR0_DefaultInterruptHandler *
                      _zummer_switch *
 ---------------------------------------------------------------------------------
 (7) _zummer_switch                                        0     0      0       0
 ---------------------------------------------------------------------------------
 (7) _TMR0_DefaultInterruptHandler                         0     0      0       0
 ---------------------------------------------------------------------------------
 (7) Absolute function(Fake)                               0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 10
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _autorotation_work
     _go_close_short
     _open
       _go_open
       _go_open_alt
       _rele_off
   _close
     _go_close
     _go_close_alt
     _rele_off
   _fun_work
     _close
     _open
   _get_fun
   _get_jump
   _get_wsp
     _ADC_GetConversion
     _clear_alarm
     _start_alarm
   _hardware_work
   _start_setup
     _SYSTEM_Initialize
       _ADC_Initialize
       _OSCILLATOR_Initialize
       _PIN_MANAGER_Initialize
       _TMR0_Initialize
         _TMR0_SetInterruptHandler
       _TMR2_Initialize
         _TMR2_SetInterruptHandler
       _WDT_Initialize
     _TMR0_SetInterruptHandler
     _TMR2_SetInterruptHandler
     _TMR2_StartTimer
     _eeprom_set
       _EEPROM_ReadByte
       _EEPROM_WriteByte
   _switch_wm
     _rele_off

 _INTERRUPT_InterruptManager (ROOT)
   _TMR0_ISR
     Absolute function(Fake) *
     _TMR0_DefaultInterruptHandler *
     _zummer_switch *
   _TMR2_ISR
     Absolute function(Fake) *
     _TMR2_DefaultInterruptHandler *
     _ms_tick *
       _ms_100_work
       _ms_200_work
         _beep_double
           _beep_long
             _start_tone
           _beep_short
             _start_tone
         _beep_long
         _beep_short
       _sec_work
         _minute_tick
         _rele_tick
         _sec_30_work
       _stop_tone

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM              F0      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
BITCOMMON            E      0       3       1       21.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
COMMON               E      6       E       2      100.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR2              0      0       0       3        0.0%
SFR2                 0      0       0       3        0.0%
STACK                0      0       0       3        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
ABS                  0      0      48       4        0.0%
BITBANK0            50      0      14       5       25.0%
BITSFR4              0      0       0       5        0.0%
SFR4                 0      0       0       5        0.0%
BANK0               50      2      3A       6       72.5%
BITSFR5              0      0       0       6        0.0%
SFR5                 0      0       0       6        0.0%
BITBANK1            50      0       0       7        0.0%
BITSFR6              0      0       0       7        0.0%
SFR6                 0      0       0       7        0.0%
BANK1               50      0       0       8        0.0%
BITSFR7              0      0       0       8        0.0%
SFR7                 0      0       0       8        0.0%
BITBANK2            50      0       0       9        0.0%
BITSFR8              0      0       0       9        0.0%
SFR8                 0      0       0       9        0.0%
BANK2               50      0       0      10        0.0%
BITSFR9              0      0       0      10        0.0%
SFR9                 0      0       0      10        0.0%
BITSFR10             0      0       0      11        0.0%
SFR10                0      0       0      11        0.0%
DATA                 0      0      48      11        0.0%
BITSFR11             0      0       0      12        0.0%
SFR11                0      0       0      12        0.0%
BITSFR12             0      0       0      13        0.0%
SFR12                0      0       0      13        0.0%
BITSFR13             0      0       0      14        0.0%
SFR13                0      0       0      14        0.0%
BITSFR14             0      0       0      15        0.0%
SFR14                0      0       0      15        0.0%
BITSFR15             0      0       0      16        0.0%
SFR15                0      0       0      16        0.0%
BITSFR16             0      0       0      17        0.0%
SFR16                0      0       0      17        0.0%
BITSFR17             0      0       0      18        0.0%
SFR17                0      0       0      18        0.0%
BITSFR18             0      0       0      19        0.0%
SFR18                0      0       0      19        0.0%
BITSFR19             0      0       0      20        0.0%
SFR19                0      0       0      20        0.0%
BITSFR20             0      0       0      21        0.0%
SFR20                0      0       0      21        0.0%
BITSFR21             0      0       0      22        0.0%
SFR21                0      0       0      22        0.0%
BITSFR22             0      0       0      23        0.0%
SFR22                0      0       0      23        0.0%
BITSFR23             0      0       0      24        0.0%
SFR23                0      0       0      24        0.0%
BITSFR24             0      0       0      25        0.0%
SFR24                0      0       0      25        0.0%
BITSFR25             0      0       0      26        0.0%
SFR25                0      0       0      26        0.0%
BITSFR26             0      0       0      27        0.0%
SFR26                0      0       0      27        0.0%
BITSFR27             0      0       0      28        0.0%
SFR27                0      0       0      28        0.0%
BITSFR28             0      0       0      29        0.0%
SFR28                0      0       0      29        0.0%
BITSFR29             0      0       0      30        0.0%
SFR29                0      0       0      30        0.0%
BITSFR30             0      0       0      31        0.0%
SFR30                0      0       0      31        0.0%
BITSFR31             0      0       0      32        0.0%
SFR31                0      0       0      32        0.0%


Microchip Technology PIC Macro Assembler V2.36 build 20220127204148 
Symbol Table                                                                                   Thu Jul 07 16:55:36 2022

                       __ccov116_end_blk1 03F4                         __ccov300_end_blk1 0377  
                       __ccov204_end_blk1 03C8                         __ccov140_end_blk2 0608  
                       __ccov124_end_blk3 0476                         __ccov108_end_blk5 0542  
                       __ccov220_end_blk6 01B7                         __ccov132_end_blk7 04E4  
                      __ccov212_end_blk10 03E8                       __ccov111_start_blk0 060B  
                     __ccov103_start_blk8 04FB                        __pcodecov_info_hdr 0000  
        __end_of_TMR2_SetInterruptHandler 068D                        get_fun@fun_counter 004A  
                       __ccov133_end_blk0 05AA                         __ccov117_end_blk2 03F9  
                       __ccov301_end_blk2 037B                         __ccov205_end_blk2 03CA  
                       __ccov125_end_blk4 0483                         __ccov141_end_blk4 060B  
                       __ccov109_end_blk6 0546                         __ccov221_end_blk7 01BF  
                                      l23 05E4                                        l26 067C  
                                      l61 0529                                        l29 06A9  
                                      l46 0674                                        l64 052E  
                                      l92 05A4                                        _RD 0CA8  
                                      _WR 0CA9                             ?_go_close_alt 0073  
                                      _ff 0079                 __end_of_autorotation_work 01E9  
                         _timer0ReloadVal 0057                         __ccov230_end_blk0 054F  
                       __ccov142_end_blk0 05C6                         __ccov214_end_blk0 019E  
                       __ccov134_end_blk1 05B0                         __ccov118_end_blk3 03FE  
                       __ccov150_end_blk3 049A                         __ccov310_end_blk3 00D4  
                       __ccov302_end_blk3 037C                         __ccov206_end_blk3 03CD  
                       __ccov126_end_blk6 0486                         __ccov222_end_blk9 01CD  
                      __ccov213_end_blk14 03EA                       __ccov397_start_blk9 045F  
                                     l140 06B2                                       l137 05F7  
                                     l402 01E7                                       l331 04E1  
                                     l323 0411                                       l327 0483  
                                     l343 0608                                       l351 0490  
                                     l503 023F                                       l159 068B  
                                     l336 05B6                                       l361 04BB  
                                     l353 049A                                       l346 05CA  
                                     l338 05B0                                       l522 0387  
                                     l347 05CD                                       l339 05BB  
                                     l531 03BB                                       l195 0692  
                                     l179 058D                                       l348 05D0  
                                     l364 04C5                                       l356 04A4  
                                     l516 0280                                       l524 0389  
                                     l525 038B                                       l381 0684  
                                     l359 04B1                                       l471 037C  
                                     l551 0417                                       l384 06AD  
                                     l392 03D4                                       l473 0380  
                                     l545 0331                                       l466 0575  
                                     l546 0346                                       l484 00D0  
                                     l389 0238                                       l469 0377  
                                     l581 04FF                                       l397 03E8  
                                     l486 00D2                                       l575 043D  
                                     l584 0514                                       l497 012C  
                                     l577 0442                                       l578 045F  
                                     _GIE 005F                                       u250 05AA  
                             _start_alarm 067E                                       u251 05A9  
                                     u260 05B0                                       u261 05AF  
                                     u270 05B6                                       _PR2 001B  
                                     u271 05B5                      __ccov270_start_blk10 02A8  
                    __ccov334_start_blk13 0258                      __ccov326_start_blk30 012C  
                    __ccov262_start_blk31 00CA                      __ccov342_start_blk25 027B  
                    __ccov318_start_blk17 0105                      __ccov174_start_blk18 0172  
                    __ccov254_start_blk19 009D                         __ccov127_end_blk0 04CC  
                       __ccov231_end_blk1 0553                         __ccov143_end_blk1 05CA  
                       __ccov215_end_blk1 01A3                         __ccov135_end_blk2 05B6  
                       __ccov119_end_blk4 0411                         __ccov151_end_blk4 04A0  
                       __ccov303_end_blk4 0380                         __ccov207_end_blk4 03D4  
                       __ccov311_end_blk5 00DC                               _start_setup 0308  
                            ?_go_open_alt 0073                           _TMR2_Initialize 05E6  
                      __ccov22_start_blk0 0517                                       wreg 0009  
                       __ccov240_end_blk0 0050                         __ccov128_end_blk1 04D2  
                       __ccov144_end_blk2 05CD                         __ccov216_end_blk2 01A8  
                       __ccov232_end_blk3 0559                         __ccov136_end_blk3 05BB  
                       __ccov400_end_blk3 050B                         __ccov152_end_blk5 04A4  
                       __ccov312_end_blk6 00E7                         __ccov208_end_blk6 03DA  
                       __ccov304_end_blk7 0383                         __ccov160_end_blk9 04C8  
                            ?_sec_30_work 0073                       __ccov104_start_blk0 0530  
                     __ccov112_start_blk1 060F                       __ccov120_start_blk6 0411  
                                    l2000 059A                                      l2002 059F  
                                    l2010 06A6                                      l2004 0676  
                                    l2020 05ED                                      l2012 05E6  
                                    l2006 0679                                      l2030 0578  
                                    l2022 05F4                                      l2014 05E9  
                                    l2200 04AB                                      l2024 066D  
                                    l2008 067A                                      l2040 0586  
                                    l2032 057D                                      l2016 05EA  
                                    l2202 04B5                                      l2050 03F9  
                                    l2026 0670                                      l2034 0580  
                                    l2018 05EB                                      l2060 04D7  
                                    l2204 04C1                                      l2052 03FE  
                                    l2044 03EA                                      l2028 0671  
                                    l2036 0584                                      l2300 03C2  
                                    l2062 04DC                                      l2054 04C8  
                                    l2070 0603                                      l2046 03EE  
                                    l2038 0585                                      l2310 03DF  
                                    l2302 03C8                                      l2056 04CC  
                                    l2072 05BD                                      l2320 01A3  
                                    l2048 03F4                                      l2400 026C  
                                    l2312 03E1                                      l2304 03CA  
                                    l2058 04D2                                      l2066 05F9  
                                    l2074 05C6                                      l2330 01B7  
                                    l2322 01A8                                      l2410 027E  
                                    l2402 026F                                      l2314 03E4  
                                    l2306 03CD                                      l2180 0462  
                                    l2068 05FD                                      l2340 01DC  
                                    l2324 01AD                                      l2332 01BF  
                                    l2316 018F                                      l1380 05A6  
                                    l2404 0277                                      l2420 03A2  
                                    l2412 0383                                      l2164 05D2  
                                    l2308 03DA                                      l2182 0466  
                                    l2342 01E1                                      l2334 01CD  
                                    l2326 01B2                                      l2318 019E  
                                    l1382 05AA                                      l2190 0486  
                                    l2270 01F8                                      l2406 027B  
                                    l2430 03B6                                      l2422 03A6  
                                    l2414 0390                                      l2184 046C  
                                    l2344 01E4                                      l2336 01D2  
                                    l2328 01B5                                      l2192 048A  
                                    l2280 020E                                      l2272 01FD  
                                    l2264 01E9                                      l2408 027C  
                                    l2432 03B7                                      l2424 03A7  
                                    l2416 0396                                      l2600 00D4  
                                    l2186 0471                                      l2338 01D7  
                                    l2194 0494                                      l2290 0226  
                                    l2274 0202                                      l2266 01ED  
                                    l2282 0212                                      l2434 03B9  
                                    l2426 03AA                                      l2418 039B  
                                    l2610 00F5                                      l2602 00DC  
                                    l2178 06B0                                      l2188 0476  
                                    l2196 04A0                                      l2292 022B  
                                    l2284 0216                                      l2276 0207  
                                    l2268 01F3                                      l2380 0241  
                                    l2428 03B2                                      l2620 0114  
                                    l2612 00FB                                      l2604 00E7  
                                    l2198 04A7                                      l2294 0230  
                                    l2286 021C                                      l2278 020C  
                                    l2390 0258                                      l2382 0249  
                                    l2622 011A                                      l2614 0105  
                                    l2606 00E9                                      l2630 0308  
                                    l2296 0234                                      l2288 0221  
                                    l2392 025D                                      l2384 024B  
                                    l2624 0121                                      l2616 010A  
                                    l2608 00EB                                      l1664 0348  
                                    l2552 04FF                                      l2640 032A  
                                    l2632 030B                                      l2394 025F  
                                    l2386 024D                                      l2378 023B  
                                    l2626 0124                                      l2618 0111  
                                    l1666 0374                                      l2554 0504  
                                    l2570 0457                                      l2562 043D  
                                    l2650 0330                                      l2642 032C  
                                    l2634 030C                                      l2298 03BE  
                                    l2396 0267                                      l2388 0252  
                                    l2580 0527                                      l2628 012A  
                                    l1668 037B                                      l2556 050B  
                                    l2572 045D                                      l2564 0447  
                                    l2660 0340                                      l2652 0338  
                                    l2644 032D                                      l2636 031E  
                                    l2398 026B                                      l2582 052D  
                                    l2574 0518                                      l2590 06AB  
                                    l1934 0686                                      l2558 0512  
                                    l2566 0451                                      l2662 0341  
                                    l2654 033A                                      l2646 032E  
                                    l2638 0321                                      l2576 0522  
                                    l1936 068D                                      l2568 0456  
                                    l2592 0561                                      l2664 0343  
                                    l2656 033C                                      l2648 032F  
                                    l2578 0523                                      l2586 067E  
                                    l2594 0569                                      l2666 0345  
                                    l2658 033E                                      l2690 0434  
                                    l2682 0414                                      l2588 0682  
                                    l2596 056E                                      l2684 0418  
                                    l2598 00CC                                      l2686 041B  
                                    l1992 058F                                      l2688 041F  
                                    l1994 0592                                      l1996 0595  
                                    l1998 0597                         __ccov161_end_blk0 0133  
                       __ccov241_end_blk1 0054                         __ccov129_end_blk2 04D7  
                       __ccov145_end_blk3 05D0                         __ccov217_end_blk3 01AD  
                       __ccov233_end_blk4 055A                         __ccov137_end_blk5 05BD  
                       __ccov401_end_blk5 0512                         __ccov209_end_blk7 03DF  
                       __ccov313_end_blk8 00E9                         __ccov153_end_blk9 04A7  
                                    u1110 036E                                      u1030 034E  
                                    u1111 036B                                      u1031 034B  
                                    u2000 04AB                                      u1104 0368  
                                    u2001 04AA                                      u2010 04B5  
                                    u1130 0374                                      u1050 0356  
                                    u2011 04B4                                      u1131 0373  
                                    u1051 0353                                      u2020 04C1  
                                    u1140 037B                                      u1124 0370  
                                    u1044 0350                                      u2021 04C0  
                                    u1141 037A                                      u1070 035E  
                                    u1071 035B                                      u2200 021C  
                                    u2120 01ED                                      u1064 0358  
                                    u2201 021B                                      u2121 01EC  
                                    u2210 0221                                      u2130 01F3  
                                    u1090 0366                                      u2211 0220  
                                    u2131 01F2                                      u1091 0363  
                                    u2300 01A3                                      u2220 0226  
                                    u2140 01F8                                      u1084 0360  
                                    u2301 01A2                                      u2221 0225  
                                    u2141 01F7                                      _LATA 010C  
                                    u2310 01A8                                      u2230 022B  
                                    u2150 01FD                                      u2311 01A7  
                                    u2231 022A                                      u2151 01FC  
                                    _LATC 010E                                      u2320 01AD  
                                    u1600 03F9                                      u2240 0230  
                                    u2160 0202                                      u2321 01AC  
                                    u1601 03F8                                      u2241 022F  
                                    u2161 0201                                      u1610 04CC  
                                    u2330 01B2                                      u2170 0207  
                                    u2250 03C2                                      u1611 04CB  
                                    u2331 01B1                                      u2171 0206  
                                    u2251 03C1                                      u1620 04D2  
                                    u2340 01CD                                      u2180 020C  
                                    u2500 03A2                                      u2260 03C8  
                                    u1621 04D1                                      u2341 01CC  
                                    u2181 020B                                      u2501 03A1  
                                    u2261 03C7                                      u1630 04D7  
                                    u2350 01D2                                      u2190 0216  
                                    u2510 03B2                                      u2270 03DA  
                                    u1631 04D6                                      u2351 01D1  
                                    u2191 0215                                      u2511 03B1  
                                    u2271 03D9                                      u1640 05FD  
                                    u2360 01D7                                      u2440 023F  
                                    u2280 03DF                                      u1641 05FC  
                                    u2361 01D6                                      u2345 01C9  
                                    u2441 023E                                      u2281 03DE  
                                    u1650 0603                                      u2370 01DC  
                                    u2290 019E                                      u2450 0252  
                                    u1651 0602                                      u2371 01DB  
                                    u2291 019D                                      u2451 0251  
                                    u1660 05C6                                      u2380 01E1  
                                    u1580 03EE                                      u2460 0267  
                                    u2700 052D                                      u1661 05C5  
                                    u2381 01E0                                      u1581 03ED  
                                    u2461 0266                                      u2701 052C  
                                    u1590 03F4                                      u2470 0277  
                                    u2710 056E                                      u2295 019A  
                                    u1591 03F3                                      u2471 0276  
                                    u2711 056D                                      u2480 0387  
                                    u2720 00D0                                      u2640 0504  
                                    u2481 0386                                      u2721 00CF  
                                    u2641 0503                                      u2490 0390  
                                    u2730 00F5                                      u2650 050B  
                                    u2491 038F                                      u2731 00F4  
                                    u2651 050A                                      u1940 0466  
                                    u2740 0105                                      u2660 0442  
                                    u1941 0465                                      u2741 0104  
                                    u2661 0441                                      u1950 046C  
                                    u2750 0111                                      u1951 046B  
                                    u2751 0110                                      u1960 0471  
                                    u2760 0121                                      u2680 045C  
                                    u1961 0470                                      u2761 0120  
                                    u2681 045A                                      u1970 048A  
                                    u2770 041F                                      u1971 0489  
                                    u2675 0446                                      u2771 041E  
                                    u1980 0494                                      u1981 0493  
                                    u1990 04A0                                      u2694 045D  
                                    u1991 049F                                      u2847 00D7  
                                    u2857 0524                                      u2867 0244  
                                    _TMR0 0015                                      _TMR2 001A  
                                    _WREN 0CAA                                      _WPUA 020C  
                                    _WPUC 020E                         __ccov138_end_blk0 05FD  
                       __ccov154_end_blk0 04AB                         __ccov306_end_blk1 066A  
                       __ccov162_end_blk1 013A                         __ccov242_end_blk2 0059  
                       __ccov146_end_blk4 05D2                         __ccov218_end_blk4 01B2  
                       __ccov234_end_blk5 055F                         __ccov330_end_blk5 024B  
                       __ccov402_end_blk6 0514                                      _main 0414  
                      __ccov223_end_blk10 01D2                                      _open 04A7  
                                    fsr0h 0005                                      indf0 0000  
                                    fsr0l 0004                      EEPROM_WriteByte@addr 0078  
                                    btemp 007E                           ?_go_close_short 0073  
                                    start 002D                         __ccov147_end_blk0 048A  
                       __ccov139_end_blk1 0603                         __ccov155_end_blk1 04B1  
                       __ccov307_end_blk3 066D                         __ccov163_end_blk3 013E  
                       __ccov243_end_blk3 005D                         __ccov219_end_blk5 01B5  
                       __ccov235_end_blk8 0561                         __ccov331_end_blk8 024D  
                       __ccov403_end_blk8 0517                        __ccov31_start_blk0 058F  
                      __ccov23_start_blk1 0522                         __ccov236_end_blk0 0643  
                       __ccov180_end_blk0 0682                         __ccov308_end_blk0 00D0  
                       __ccov148_end_blk1 0490                         __ccov156_end_blk2 04B5  
                       __ccov164_end_blk4 0146                         __ccov244_end_blk4 005F  
                      __ccov224_end_blk11 01D7                        __ccov320_end_blk21 0114  
                     __ccov121_start_blk0 0462                       __ccov105_start_blk1 0534  
                     __ccov113_start_blk3 0615                            ??_go_close_alt 0075  
                    __ccov200_start_blk16 0230                         __ccov237_end_blk1 0647  
                       __ccov181_end_blk1 0684                         __ccov309_end_blk1 00D2  
                       __ccov149_end_blk2 0494                         __ccov157_end_blk3 04BB  
                       __ccov165_end_blk5 014A                         __ccov245_end_blk6 0063  
                 __end_of_TMR0_Initialize 058F            ??_TMR0_DefaultInterruptHandler 0073  
           __end_of_OSCILLATOR_Initialize 067E                                     ?_main 0073  
                       __ccov182_end_blk2 0686                         __ccov238_end_blk3 064D  
                       __ccov158_end_blk4 04C1                         __ccov190_end_blk5 0207  
                       __ccov350_end_blk5 0396                         __ccov166_end_blk6 0151  
                       __ccov246_end_blk7 0067                                     _EEADR 0191  
                                   ?_open 0073                        __ccov225_end_blk12 01DC  
                      __ccov321_end_blk22 011A                       __ccov399_start_blk2 04FE  
                            __ccovbit0_24 019E                              __ccovbit0_19 0384  
                            __ccovbit1_15 0388                              __ccovbit1_23 0380  
                            __ccovbit1_40 018E                              __ccovbit1_25 019D  
                            __ccovbit1_33 0195                              __ccovbit1_18 0385  
                            __ccovbit1_26 019C                              __ccovbit1_36 0192  
                            __ccovbit1_44 018A                              __ccovbit1_52 0182  
                            __ccovbit2_30 0198                              __ccovbit1_55 017F  
                            __ccovbit1_63 0177                              __ccovbit2_16 0387  
                            __ccovbit1_48 0186                              __ccovbit2_41 018D  
                            __ccovbit1_81 0165                              __ccovbit1_58 017C  
                            __ccovbit1_82 0164                              __ccovbit2_27 019B  
                            __ccovbit1_68 0172                              __ccovbit3_21 0382  
                            __ccovbit2_37 0191                              __ccovbit2_45 0189  
                            __ccovbit2_53 0181                              __ccovbit2_56 017E  
                            __ccovbit2_80 0166                              __ccovbit1_96 0156  
                            __ccovbit2_49 0185                              __ccovbit3_34 0194  
                            __ccovbit3_50 0184                              __ccovbit2_83 0163  
                                   _T2CON 001C                              __ccovbit3_64 0176  
                            __ccovbit4_17 0386                              __ccovbit5_10 038D  
                            __ccovbit4_42 018C                              __ccovbit3_59 017B  
                            __ccovbit4_60 017A                              __ccovbit3_84 0162  
                            __ccovbit5_22 0381                              __ccovbit4_38 0190  
                            __ccovbit4_46 0188                              __ccovbit4_54 0180  
                            __ccovbit4_57 017D                              __ccovbit4_65 0175  
                            __ccovbit6_11 038C                              __ccovbit5_35 0193  
                            __ccovbit5_51 0183                              __ccovbit6_20 0383  
                            __ccovbit5_61 0179                              __ccovbit4_69 0171  
                            __ccovbit4_85 0161                              __ccovbit6_14 0389  
                            __ccovbit6_31 0197                              __ccovbit4_97 0155  
                            __ccovbit5_66 0174                              __ccovbit6_43 018B  
                            __ccovbit6_28 019A                              __ccovbit6_70 0170  
                            __ccovbit5_86 0160                              __ccovbit6_39 018F  
                            __ccovbit7_47 0187                              __ccovbit7_71 016F  
                            __ccovbit6_87 015F                              __ccovbit8_32 0196  
                        __end_of_RELE_GAP 06CC                              __ccovbit6_98 0154  
                            __ccovbit8_29 0199                              __ccovbit7_99 0153  
                            __ccovbit9_62 0178                              __ccovbit8_88 015E  
                            __ccovbit9_67 0173                                     i1l110 0014  
                                   i1l115 0029                                     i1l116 002A  
                                   i1l301 06A3                                     i1l304 069D  
                                   i1l314 0546                                     i1l162 06C6  
                                   i1l156 063D                                     i1l309 04FB  
                                   i1l413 064D                                     i1l421 009D  
                                   i1l319 061A                                     i1l431 00CA  
                                   i1l192 062D                                     i1l408 055F  
                                   i1l416 005F                                     i1l417 005D  
                                   i1l450 065C                                     i1l434 029D  
                                   i1l444 02C3                                     i1l198 06B7  
                                   i1l374 016F                                     i1l462 0306  
                                   i1l367 013A                                     i1l368 018D  
                                   i1l449 0659                                     i1l369 0156  
                                   i1l476 065E                                     i1l478 066A  
                    __ccov175_start_blk20 0177                      __ccov255_start_blk20 00A3  
                    __ccov319_start_blk20 010A                      __ccov271_start_blk13 02AF  
                    __ccov335_start_blk16 025D                      __ccov343_start_blk26 027C  
                                   _TRISA 008C                                     _TRISC 008E  
                         ??_hardware_work 0075                         __ccov263_end_blk0 0287  
                       __ccov327_end_blk0 023F                         __ccov183_end_blk0 06AD  
                       __ccov239_end_blk5 064F                         __ccov159_end_blk5 04C5  
                       __ccov191_end_blk6 020C                         __ccov167_end_blk7 0156  
                       __ccov351_end_blk7 039B                         __ccov247_end_blk8 0072  
               ?_TMR0_SetInterruptHandler 0075                        __ccov40_start_blk1 000A  
                      __ccov32_start_blk1 0592                        __ccov24_start_blk2 0523  
                        __end_of_TMR0_ISR 062F                           __end_of_get_fun 0283  
                        __end_of_TMR2_ISR 063F                           __end_of_get_wsp 012F  
                         __end_of_go_open 04E4                         __ccov280_end_blk0 02CB  
                       __ccov264_end_blk1 028D                         __ccov328_end_blk1 0241  
                       __ccov184_end_blk1 06B0                         __ccov192_end_blk7 020E  
                       __ccov352_end_blk9 03A2                        __ccov314_end_blk11 00EB  
                      __ccov170_end_blk12 0168                        __ccov250_end_blk13 0081  
                      __ccov226_end_blk13 01E1                        __ccov322_end_blk24 0121  
                                   _close 0486                            _WDT_Initialize 06A6  
                     __ccov122_start_blk1 0466                       __ccov106_start_blk2 053A  
                     __ccov130_start_blk3 04D7                       __ccov114_start_blk5 061A  
                     __ccov210_start_blk8 03DF                           __end_of_ms_tick 0308  
                       __ccov185_end_blk0 01ED                         __ccov281_end_blk1 02D1  
                       __ccov265_end_blk2 0292                         __ccov329_end_blk3 0249  
                       __ccov193_end_blk8 0212                            __pbitbssCOMMON 0380  
                      _SHORT_ZUMMER_DELAY 06D2                                     pclath 000A  
                                   status 0003                                     wtemp0 007E  
                       __ccov346_end_blk0 0387                         __ccov362_end_blk0 030B  
                       __ccov186_end_blk1 01F3                         __ccov282_end_blk2 02D5  
                       __ccov266_end_blk4 0298                        __ccov171_end_blk13 0169  
                      __ccov315_end_blk13 00F5                        __ccov251_end_blk14 0088  
                      __ccov227_end_blk14 01E4                        __ccov323_end_blk25 0124  
                         _TMR2_StartTimer 06B0                            __pcodecov_info 0000  
                       __ccov347_end_blk1 0389                         __ccov363_end_blk1 030C  
                       __ccov187_end_blk2 01F8                         __ccov283_end_blk3 02DC  
                       __ccov267_end_blk5 029D                        __ccov41_start_blk2 000F  
                      __ccov33_start_blk2 0595                        __ccov25_start_blk3 0527  
                         __initialization 002F                            eeprom_set@vers 0059  
                       __ccov276_end_blk0 0653                         __ccov364_end_blk2 031E  
                       __ccov188_end_blk3 01FD                         __ccov348_end_blk3 038B  
                       __ccov284_end_blk4 02E0                         __ccov268_end_blk8 02A3  
                            __end_of_main 043C                        __ccov332_end_blk10 0252  
                      __ccov172_end_blk14 016F                        __ccov316_end_blk14 00FB  
                      __ccov228_end_blk15 01E7                        __ccov340_end_blk23 0277  
                      __ccov252_end_blk16 008C                        __ccov324_end_blk26 012A  
                      __ccov260_end_blk28 00C7                              __end_of_open 04C8  
                     __ccov115_start_blk0 03EA                       __ccov203_start_blk0 03BE  
                     __ccov123_start_blk2 046C                       __ccov107_start_blk4 053D  
                     __ccov131_start_blk4 04DC                       __ccov211_start_blk9 03E1  
                    __ccov201_start_blk17 0234                         __ccov277_end_blk1 0659  
                       __ccov365_end_blk3 0321                         __ccov189_end_blk4 0202  
                       __ccov349_end_blk4 0390                         __ccov285_end_blk7 02E1  
                       __ccov269_end_blk9 02A8                   __end_of_TMR2_Initialize 05F9  
             ?_INTERRUPT_InterruptManager 0073                  _TMR2_SetInterruptHandler 0686  
                                  ??_main 0079                                    ??_open 0075  
                       __ccov278_end_blk2 065C                         __ccov390_end_blk2 0442  
                       __ccov366_end_blk4 032A                         __ccov286_end_blk8 02E2  
                      __ccov333_end_blk11 0258                        __ccov173_end_blk15 0172  
                      __ccov341_end_blk24 027B                        __ccov317_end_blk16 0105  
                      __ccov229_end_blk17 01E9                        __ccov253_end_blk18 009D  
                      __ccov325_end_blk28 012C                        __ccov261_end_blk29 00CA  
                            ?_minute_tick 0073                      __ccov168_start_blk10 0156  
                    __ccov248_start_blk10 0072                      __ccov360_start_blk20 03B9  
                    __ccov176_start_blk21 017E                      __ccov256_start_blk21 00A7  
                    __ccov272_start_blk14 02B4                      __ccov336_start_blk18 025F  
                    __ccov344_start_blk29 027E                         __ccov295_end_blk0 0569  
                       __ccov383_end_blk0 0417                         __ccov391_end_blk3 0447  
                       __ccov279_end_blk4 065E                         __ccov367_end_blk6 032C  
                       __ccov287_end_blk9 02EA                    __end_of_WDT_Initialize 06AB  
                      __ccov50_start_blk2 05EA                        __ccov42_start_blk3 0014  
                      __ccov34_start_blk3 0597                        __ccov26_start_blk5 0529  
                       __ccov296_end_blk1 056E                         __ccov384_end_blk1 0418  
                       __ccov392_end_blk4 0451                         __ccov368_end_blk9 032D  
                                  ?_close 0073                                    _ADCON0 009D  
                                  _ADCON1 009E                        __ccov270_end_blk10 02AF  
                      __ccov334_end_blk13 025D                        __ccov326_end_blk30 012F  
                      __ccov262_end_blk31 00CC                        __ccov342_end_blk25 027C  
                      __ccov318_end_blk17 010A                        __ccov174_end_blk18 0177  
                      __ccov254_end_blk19 00A3                             __ccovbit10_12 038B  
                           __ccovbit10_72 016E                             __ccovbit12_13 038A  
                           __ccovbit11_89 015D                             __ccovbit12_90 015C  
                           __ccovbit20_76 016A                                    _ADRESH 009C  
                           __ccovbit13_91 015B                                    _ADRESL 009B  
                     __ccov116_start_blk1 03EE                       __ccov300_start_blk1 0374  
                     __ccov204_start_blk1 03C2                       __ccov140_start_blk2 0603  
                     __ccov124_start_blk3 0471                       __ccov108_start_blk5 0541  
                           __ccovbit14_73 016D                       __ccov220_start_blk6 01B5  
                     __ccov132_start_blk7 04E1                                    _EEDATA 0193  
                           __ccovbit14_92 015A                             __ccovbit22_77 0169  
                           __ccovbit15_74 016C                             __ccovbit15_93 0159  
                           __ccovbit23_78 0168                                    _EECON2 0196  
                           __ccovbit17_94 0158                             __ccovbit18_75 016B  
                           __ccovbit27_79 0167                             __ccovbit19_95 0157  
                                  _ANSELA 018C                                    _ANSELC 018E  
                           __ccovbit1_102 0150                             __ccovbit1_113 0145  
                           __ccovbit1_132 0132                             __ccovbit1_117 0141  
                           __ccovbit1_142 0128                             __ccovbit1_152 011E  
                           __ccovbit2_103 014F                             __ccovbit2_133 0131  
                           __ccovbit2_150 0120                             __ccovbit2_143 0127  
                           __ccovbit3_104 014E                             __ccovbit3_120 013E  
                           __ccovbit3_114 0144                             __ccovbit3_118 0140  
                           __ccovbit3_145 0125                                    _BORCON 0116  
                           __ccovbit3_155 011B                             __ccovbit3_181 0101  
                           __ccovbit4_105 014D                             __ccovbit4_121 013D  
                           __ccovbit4_134 0130                             __ccovbit4_151 011F  
                           __ccovbit4_144 0126                             __ccovbit4_153 011D  
                           __ccovbit4_146 0124                             __ccovbit4_178 0104  
                           __ccovbit5_115 0143                             __ccovbit5_119 013F  
                           __ccovbit5_135 012F                             __ccovbit5_170 010C  
                           __ccovbit7_106 014C                             __ccovbit6_179 0103  
                           __ccovbit7_154 011C                             __ccovbit7_171 010B  
                           __ccovbit8_122 013C                             __ccovbit8_116 0142  
                           __ccovbit8_136 012E                             __ccovbit8_182 0100  
                           __ccovbit9_180 0102                                    i1l2100 00A3  
                                  i1l2110 00C4                                    i1l2102 00A7  
                                  i1l2120 0292                                    i1l2112 00C7  
                                  i1l2104 00AE                                    i1l2130 02AF  
                                  i1l2122 0298                                    i1l2114 0283  
                                  i1l2106 00BC                                    i1l2042 069A  
                                  i1l2140 0653                                    i1l2132 02B4  
                                  i1l2124 02A3                                    i1l2116 0287  
                                  i1l2108 00BE                                    i1l2220 02DC  
                                  i1l2212 02C6                                    i1l2134 02B8  
                                  i1l2126 02A8                                    i1l2118 028D  
                                  i1l2230 02ED                                    i1l2222 02E0  
                                  i1l2214 02CB                                    i1l2136 02BF  
                                  i1l2080 0054                                    i1l2240 0302  
                                  i1l2232 02F5                                    i1l2224 02E1  
                                  i1l2216 02D1                                    i1l2250 061D  
                                  i1l2138 064F                                    i1l2090 0076  
                                  i1l2082 0059                                    i1l2226 02E2  
                                  i1l2218 02D5                                    i1l2252 061E  
                                  i1l2092 007A                                    i1l2084 0063  
                                  i1l2076 004B                                    i1l2228 02EA  
                                  i1l2236 02F8                                    i1l2260 0631  
                                  i1l2254 0621                                    i1l2094 0081  
                                  i1l2086 0067                                    i1l2078 0050  
                                  i1l2238 02FF                                    i1l2262 0637  
                                  i1l2248 065E                                    i1l2256 0627  
                                  i1l2096 0088                                    i1l2088 0072  
                       __ccov297_end_blk2 0575                         __ccov385_end_blk2 041B  
                                  i1l2098 008C                                    i1l2258 062F  
                       __ccov393_end_blk5 0456                                    i1l1910 04E4  
                                  u210_20 0627                                    i1l1920 04F7  
                                  i1l1912 04E8                                    u210_21 0626  
                                  i1l1930 0541                                    i1l1922 0530  
                                  i1l1914 04ED                                    i1l2490 000A  
                                  i1l1908 06A0                                    i1l1932 0542  
                                  i1l1924 0534                                    i1l1916 04F1  
                                  i1l1940 060F                                    i1l2492 000F  
                                  i1l1926 053A                                    i1l1918 04F6  
                                  i1l1942 0615                                    i1l1950 013E  
                                  i1l2494 0019                                    i1l1928 053D  
                                  i1l1960 0162                                    i1l1952 0146  
                                  i1l1944 012F                                    u203_20 02D1  
                                  u211_20 0637                                    i1l2496 001E  
                                  i1l2488 0006                                    u203_21 02D0  
                                  u211_21 0636                                    i1l1938 060B  
                                  i1l1970 017E                                    i1l1962 0168  
                                  i1l1954 014A                                    i1l1946 0133  
                                  i1l2498 0024                                    i1l1980 0553  
                                  i1l1972 0182                                    i1l1964 0169  
                                  i1l1956 0151                                    i1l1982 0559  
                                  i1l1974 0189                                    i1l1966 0172  
                                  i1l1958 015C                                    i1l1990 0647  
                                  u140_20 04E8                                    i1l1984 055A  
                                  i1l1976 0549                                    i1l1968 0177  
                                  u204_20 02DC                                    u140_21 04E7  
                                  u204_21 02DB                                    i1l1978 054F  
                                  i1l1986 063F                                    i1l1988 0643  
                                  u141_20 04ED                                    u205_20 02EA  
                                  u141_21 04EC                                    u205_21 02E9  
                                  u142_20 0534                                    u150_20 015C  
                                  u206_20 02FF                                    u142_21 0533  
                                  u150_21 015B                                    u206_21 02FE  
                                  u143_20 053A                                    u151_20 0162  
                                  u143_21 0539                                    u151_21 0161  
                                  u208_20 0668                                    u144_20 060F  
                                  u152_20 0168                                    u208_21 0665  
                                  u144_21 060E                                    u152_21 0167  
                                  u153_20 017E                                    u145_20 0133  
                                  u153_21 017D                                    u145_21 0132  
                                  u209_24 066A                                    u154_20 0189  
                                  u146_20 0139                                    u170_20 0067  
                                  u154_21 0188                                    u146_21 0138  
                                  u170_21 0066                                    u155_20 054F  
                                  u147_20 013E                                    u171_20 007A  
                                  u155_21 054E                                    u147_21 013D  
                                  u171_21 0079                                    u180_20 02A3  
                                  u156_20 0559                                    u148_20 0146  
                                  u172_20 0081                                    u252_20 000A  
                                  u180_21 02A2                                    u156_21 0558  
                                  u148_21 0145                                    u172_21 0080  
                                  u252_21 0009                                    u181_20 02A8  
                                  u149_20 0151                                    u157_20 0643  
                                  u173_20 0088                                    u253_20 000F  
                                  u181_21 02A7                                    u149_21 0150  
                                  u157_21 0642                                    u173_21 0087  
                                  u253_21 000E                                    u182_20 02AE  
                                  u174_20 00A3                                    u254_20 0019  
                                  u182_21 02AD                                    u174_21 00A2  
                                  u254_21 0018                                    u183_20 02B4  
                                  u175_20 00AE                                    u167_20 0054  
                                  u255_20 001E                                    u183_21 02B3  
                                  u175_21 00AD                                    u167_21 0053  
                                  u255_21 001D                                    u184_20 02BF  
                                  u176_20 00C4                                    u168_20 0059  
                                  u256_20 0024                                    u184_21 02BE  
                                  u176_21 00C3                                    u168_21 0058  
                                  u256_21 0023                                    u185_20 0653  
                                  u177_20 0287                                    u169_20 0063  
                                  u185_21 0652                                    u177_21 0286  
                                  u169_21 0062                                    u186_20 0659  
                                  u178_20 028D                                    u186_21 0658  
                                  u178_21 028C                          __ccov10_end_blk1 0671  
                                  u179_20 0298                                    u179_21 0297  
                        _GOOD_WSP_VOLTAGE 06BA                                    _OSCCON 0099  
                                  _WDTCON 0097                         __ccov386_end_blk3 041F  
                       __ccov298_end_blk4 0578                         __ccov394_end_blk6 0457  
                      __ccov175_end_blk20 017E                        __ccov255_end_blk20 00A7  
                      __ccov319_end_blk20 0111                        __ccov271_end_blk13 02B4  
                      __ccov335_end_blk16 025F                        __ccov343_end_blk26 027E  
                        __ccov11_end_blk2 0674                         __ccov299_end_blk0 0374  
                       __ccov387_end_blk4 0434                         __ccov395_end_blk7 045D  
                        __ccov12_end_blk3 0676                        __ccov51_start_blk3 05EB  
                      __ccov43_start_blk4 0019                        __ccov35_start_blk4 059A  
                      __ccov27_start_blk7 052D                          __end_of_get_jump 03BE  
                        __end_of_go_close 0414                         __ccov388_end_blk6 043A  
                       __ccov396_end_blk8 045F                        __ccov168_end_blk10 015C  
                      __ccov248_end_blk10 0076                        __ccov360_end_blk20 03BB  
                      __ccov176_end_blk21 0182                        __ccov256_end_blk21 00AE  
                      __ccov272_end_blk14 02B8                        __ccov336_end_blk18 0267  
                      __ccov344_end_blk29 0280                       __ccov133_start_blk0 05A6  
                     __ccov117_start_blk2 03F4                       __ccov301_start_blk2 0377  
                     __ccov205_start_blk2 03C8                       __ccov125_start_blk4 0476  
                     __ccov141_start_blk4 0608                       __ccov109_start_blk6 0542  
                     __ccov221_start_blk7 01B7               __end_of_MELODY_REPEAT_DELAY 06C9  
                    __ccov202_start_blk19 0238                          ?_TMR0_Initialize 0073  
                       __ccov397_end_blk9 0462                         ??_EEPROM_ReadByte 0075  
                        __end_of_fun_work 023B                          __ccov22_end_blk0 0522  
                __end_of_EEPROM_WriteByte 0462                          __end_of_sec_work 00CC  
                               ??_get_fun 0075                          __end_of_rele_off 05D2  
                               ??_get_wsp 0077                                 ??_go_open 0075  
                      __ccov353_end_blk10 03A6                        __ccov169_end_blk11 0162  
                      __ccov249_end_blk12 007A                        __ccov177_end_blk22 0189  
                      __ccov257_end_blk22 00BC                        __ccov361_end_blk22 03BE  
                      __ccov345_end_blk31 0283                        __ccov273_end_blk16 02BF  
                      __ccov337_end_blk19 026B                          __ccov31_end_blk0 0592  
                        __ccov23_end_blk1 0523             __end_of_RELE_POWER_WORK_DELAY 06CE  
                    __ccov353_start_blk10 03A2                      __ccov169_start_blk11 015C  
                    __ccov249_start_blk12 0076                      __ccov177_start_blk22 0182  
                    __ccov257_start_blk22 00AE                      __ccov361_start_blk22 03BB  
                    __ccov345_start_blk31 0280                      __ccov273_start_blk16 02B8  
                    __ccov337_start_blk19 0267                         __ccov399_end_blk2 0504  
                               ??_ms_tick 0075                           ?_WDT_Initialize 0073  
                        __ccov40_end_blk1 000F                          __ccov32_end_blk1 0595  
                        __ccov24_end_blk2 0527                        __ccov52_start_blk4 05ED  
                      __ccov44_start_blk5 001E                        __ccov36_start_blk5 059F  
                      __ccov28_start_blk9 052E                    EEPROM_WriteByte@status 0397  
                ADC_GetConversion@channel 0076                     _HIGH_WATER_RESISTANSE 06C0  
                 __end_of_TMR2_StartTimer 06B4  TMR0_SetInterruptHandler@InterruptHandler 0075  
TMR2_SetInterruptHandler@InterruptHandler 0075                        __ccov194_end_blk10 0216  
                      __ccov354_end_blk11 03A7                        __ccov290_end_blk12 02F8  
                      __ccov338_end_blk20 026C                        __ccov178_end_blk23 018D  
                      __ccov258_end_blk23 00BE                        __ccov370_end_blk15 032F  
                      __ccov274_end_blk17 02C3                          __ccov41_end_blk2 0014  
                        __ccov33_end_blk2 0597                          __ccov25_end_blk3 0529  
                     __ccov230_start_blk0 0549                       __ccov142_start_blk0 05BD  
                     __ccov214_start_blk0 018F                       __ccov134_start_blk1 05AA  
                     __ccov118_start_blk3 03F9                       __ccov150_start_blk3 0494  
                     __ccov310_start_blk3 00D2                       __ccov302_start_blk3 037B  
                     __ccov206_start_blk3 03CA                       __ccov126_start_blk6 0483  
                     __ccov222_start_blk9 01BF                      __end_of_go_close_alt 05BD  
                       _SYSTEM_Initialize 05D2                          __ccov50_end_blk2 05EB  
                        __ccov42_end_blk3 0019                          __ccov34_end_blk3 059A  
                        __ccov26_end_blk5 052D                   __end_of__initialization 0047  
                      _AUTOROTATION_DELAY 06B4                        ?_SYSTEM_Initialize 0073  
                      __ccov195_end_blk11 021C                        __ccov355_end_blk12 03AA  
                      __ccov339_end_blk21 026F                        __ccov275_end_blk22 02C6  
                      __ccov291_end_blk16 02FF                        __ccov371_end_blk18 0330  
                      __ccov179_end_blk27 018F                        __ccov259_end_blk27 00C4  
                        __ccov51_end_blk3 05ED                          __ccov43_end_blk4 001E  
                        __ccov35_end_blk4 059F                          __ccov27_end_blk7 052E  
                           _UP_RESISTANSE 06BE                          __ccov52_end_blk4 05F4  
                        __ccov44_end_blk5 0024                          __ccov36_end_blk5 05A4  
                      __ccov53_start_blk5 05F4                        __ccov45_start_blk6 0024  
                        __ccov28_end_blk9 0530                        __ccov37_start_blk6 05A4  
                          __pcstackCOMMON 0073                       ??_SYSTEM_Initialize 0078  
                   __end_of_zummer_switch 066D                                 ?_TMR0_ISR 0073  
                      __ccov196_end_blk12 0221                        __ccov372_end_blk21 0331  
                      __ccov356_end_blk14 03B2                        __ccov292_end_blk17 0302  
                               ?_TMR2_ISR 0073                        __ccov380_end_blk29 0345  
                           __end_of_close 04A7                          __ccov53_end_blk5 05F7  
                        __ccov45_end_blk6 0029                          __ccov37_end_blk6 05A6  
                     __ccov127_start_blk0 04C8                       __ccov231_start_blk1 054F  
                     __ccov143_start_blk1 05C6                       __ccov215_start_blk1 019E  
                     __ccov135_start_blk2 05B0                       __ccov119_start_blk4 03FE  
                     __ccov151_start_blk4 049A                       __ccov303_start_blk4 037C  
                     __ccov207_start_blk4 03CD                       __ccov311_start_blk5 00D4  
                        ?_TMR2_Initialize 0073                          __ccov70_end_blk1 068D  
                        __ccov54_end_blk6 05F9                              ?_start_alarm 0073  
             get_wsp@bad_measures_counter 004B                        __ccov197_end_blk13 0226  
                      __ccov381_end_blk30 0346                        __ccov373_end_blk22 0338  
                      __ccov357_end_blk15 03B6                        __ccov293_end_blk18 0306  
                        __ccov71_end_blk0 06C8                          __ccov39_end_blk0 000A  
                        __ccov55_end_blk0 06B2                            _OPTION_REGbits 0095  
                            ?_start_setup 0073                      __ccov194_start_blk10 0212  
                    __ccov354_start_blk11 03A6                      __ccov290_start_blk12 02F5  
                    __ccov338_start_blk20 026B                      __ccov178_start_blk23 0189  
                    __ccov258_start_blk23 00BC                      __ccov370_start_blk15 032E  
                    __ccov274_start_blk17 02BF                          __ccov72_end_blk0 057D  
                        __ccov48_end_blk0 05E9                          __ccov56_end_blk1 06B4  
                      __ccov70_start_blk1 068B                        __ccov54_start_blk6 05F7  
                                 ??_close 0075                           __ccov1_end_blk0 05E4  
                              _beep_short 04E4                 __end_of_SYSTEM_Initialize 05E6  
                        ??_go_close_short 0075                        __ccov294_end_blk20 0308  
                      __ccov198_end_blk14 022B                        __ccov382_end_blk31 0348  
                      __ccov374_end_blk23 033A                        __ccov358_end_blk16 03B7  
                        __ccov65_end_blk0 0631                          __ccov73_end_blk1 0580  
                        __ccov49_end_blk1 05EA                       __ccov240_start_blk0 004B  
                     __ccov128_start_blk1 04CC                       __ccov144_start_blk2 05CA  
                     __ccov216_start_blk2 01A3                       __ccov232_start_blk3 0553  
                     __ccov136_start_blk3 05B6                       __ccov400_start_blk3 0504  
                     __ccov152_start_blk5 04A0                       __ccov312_start_blk6 00DC  
                     __ccov208_start_blk6 03D4                       __ccov304_start_blk7 0380  
                     __ccov160_start_blk9 04C5                                __pbssBANK0 0034  
                         __ccov2_end_blk1 05E6                          __ccov90_end_blk0 0692  
                        __ccov66_end_blk1 0637                          __ccov74_end_blk2 0584  
                         __ccov3_end_blk0 0679                        __ccov199_end_blk15 0230  
                      __ccov375_end_blk24 033C                        __ccov359_end_blk17 03B9  
                        __ccov91_end_blk1 0694                          __ccov67_end_blk2 063D  
                        __ccov75_end_blk3 0585                           __ccov4_end_blk1 067A  
                              __pmaintext 0414                          __ccov92_end_blk0 06BA  
                      __ccov71_start_blk0 06C6                        __ccov39_start_blk0 0004  
                      __ccov55_start_blk0 06B0                          __ccov68_end_blk4 063F  
                        __ccov76_end_blk4 0586          __end_of_TMR0_SetInterruptHandler 0694  
                         __ccov5_end_blk2 067C                                ??_TMR0_ISR 0073  
                              ??_TMR2_ISR 0075                           _time_rele_power 0045  
                      __ccov288_end_blk10 02ED                        __ccov376_end_blk25 033E  
                              __pintentry 0004                          __ccov85_end_blk0 061E  
                        __ccov93_end_blk0 06A3                          __ccov69_end_blk0 068B  
                        __ccov77_end_blk5 058D                       __ccov161_start_blk0 012F  
                     __ccov241_start_blk1 0050                       __ccov129_start_blk2 04D2  
                     __ccov145_start_blk3 05CD                       __ccov217_start_blk3 01A8  
                     __ccov233_start_blk4 0559                       __ccov137_start_blk5 05BB  
                     __ccov401_start_blk5 050B                       __ccov209_start_blk7 03DA  
                     __ccov313_start_blk8 00E7                       __ccov153_start_blk9 04A4  
                          __ccovbit10_100 0152                            __ccovbit10_107 014B  
                          __ccovbit10_123 013B                            __ccovbit10_137 012D  
                          __ccovbit11_108 014A                            __ccovbit11_163 0113  
                          __ccovbit12_109 0149                            __ccovbit12_147 0123  
                          __ccovbit12_172 010A                            __ccovbit20_149 0121  
                          __ccovbit13_110 0148                            __ccovbit20_175 0107  
                          __ccovbit21_128 0136                            __ccovbit13_164 0112  
                          __ccovbit14_101 0151                            __ccovbit21_165 0111  
                          __ccovbit14_124 013A                            __ccovbit22_141 0129  
                          __ccovbit14_138 012C                            __ccovbit30_162 0114  
                          __ccovbit14_156 011A                            __ccovbit14_173 0109  
                          __ccovbit15_111 0147                            __ccovbit22_159 0117  
                          __ccovbit22_176 0106                      __ccov212_start_blk10 03E4  
                          __ccovbit31_131 0133                            __ccovbit23_129 0135  
                          __ccovbit23_166 0110                            __ccovbit31_169 010D  
                          __ccovbit31_177 0105                            __ccovbit16_125 0139  
                          __ccovbit16_139 012B                            __ccovbit16_157 0119  
                          __ccovbit17_112 0146                            __ccovbit17_140 012A  
                          __ccovbit17_158 0118                            __ccovbit17_174 0108  
                          __ccovbit18_126 0138                            __ccovbit26_160 0116  
                          __ccovbit18_148 0122                            __ccovbit26_167 010F  
                          __ccovbit19_127 0137                           __ccov6_end_blk3 067E  
                          __ccovbit28_161 0115                            __ccovbit29_130 0134  
                          __ccovbit29_168 010E                                   _APFCON0 011D  
                                 _APFCON1 011E                          __ccov86_end_blk1 0621  
                        __ccov94_end_blk1 06A6                          __ccov78_end_blk6 058F  
                       _time_rele_control 0043                           __ccov7_end_blk0 06A9  
                      __ccov289_end_blk11 02F5                        __ccov369_end_blk12 032E  
                      __ccov377_end_blk26 0340                          __ccov95_end_blk0 069D  
                        __ccov87_end_blk2 0627                                _eeprom_set 0561  
                    __ccov195_start_blk11 0216                      __ccov355_start_blk12 03A7  
                    __ccov339_start_blk21 026C                      __ccov275_start_blk22 02C3  
                    __ccov291_start_blk16 02F8                      __ccov371_start_blk18 032F  
                    __ccov179_start_blk27 018D                      __ccov259_start_blk27 00BE  
                         __ccov8_end_blk1 06AB                                   _OSCTUNE 0098  
                        __ccov96_end_blk1 06A0                          __ccov88_end_blk3 062D  
                      __ccov72_start_blk0 0578                        __ccov48_start_blk0 05E6  
                      __ccov56_start_blk1 06B2                         __end_of_beep_long 0549  
                         __ccov9_end_blk0 0670                          ?_TMR2_StartTimer 0073  
                               ?_get_jump 0073                        __ccov378_end_blk27 0341  
                               ?_go_close 0073                          __ccov97_end_blk0 04E8  
                        __ccov89_end_blk5 062F                       __ccov138_start_blk0 05F9  
                     __ccov154_start_blk0 04A7                       __ccov306_start_blk1 065E  
                     __ccov162_start_blk1 0133                       __ccov242_start_blk2 0054  
                     __ccov146_start_blk4 05D0                       __ccov218_start_blk4 01AD  
                     __ccov234_start_blk5 055A                       __ccov330_start_blk5 0249  
                     __ccov402_start_blk6 0512                          __ccov98_end_blk1 04ED  
                               ?_fun_work 0073                         __ccov1_start_blk0 05D2  
                      __ccov379_end_blk28 0343                                 ?_sec_work 0073  
                        __ccov99_end_blk2 04F1                                 ?_rele_off 0073  
                    _ADC_InterruptHandler 0047                ??_TMR2_SetInterruptHandler 0077  
                      __ccov65_start_blk0 062F                        __ccov73_start_blk1 057D  
                      __ccov49_start_blk1 05E9                             ??_beep_double 0073  
   __end_of_RELE_POWER_AUTOROTATION_DELAY 06CD             _RELE_POWER_AUTOROTATION_DELAY 06CC  
                     __ccov147_start_blk0 0486                       __ccov139_start_blk1 05FD  
                     __ccov155_start_blk1 04AB                       __ccov307_start_blk3 066A  
                     __ccov163_start_blk3 013A                       __ccov243_start_blk3 0059  
                     __ccov219_start_blk5 01B2                       __ccov235_start_blk8 055F  
                     __ccov331_start_blk8 024B                       __ccov403_start_blk8 0514  
                    __ccov213_start_blk14 03E8                  __end_of_GOOD_WSP_VOLTAGE 06BC  
                                 __ptext1 03BE                                   __ptext2 0308  
                                 __ptext3 0561                                   __ptext4 043C  
                                 __ptext5 04FE                                   __ptext6 06B0  
                                 __ptext7 05D2                                   __ptext8 06A6  
                                 __ptext9 05E6                                   _get_fun 023B  
                                 _get_wsp 00CC                                   _go_open 04C8  
                       __ccov2_start_blk1 05E4                     _OSCILLATOR_Initialize 0676  
                               _T2CONbits 001C                      __ccov196_start_blk12 021C  
                    __ccov372_start_blk21 0330                      __ccov356_start_blk14 03AA  
                    __ccov292_start_blk17 02FF                      __ccov380_start_blk29 0343  
                ??_PIN_MANAGER_Initialize 0075                                   _ms_tick 02C6  
                   __end_of_hardware_work 0383                        __ccov90_start_blk0 068D  
                      __ccov66_start_blk1 0631                        __ccov74_start_blk2 0580  
                             ?_beep_short 0073                                   clrloop0 0695  
                              ??_get_jump 0075                                ??_go_close 0075  
                       __end_of_rele_tick 018F                      end_of_initialization 0047  
                     __ccov236_start_blk0 063F                       __ccov180_start_blk0 067E  
                     __ccov308_start_blk0 00CC                       __ccov148_start_blk1 048A  
                     __ccov156_start_blk2 04B1                       __ccov164_start_blk4 013E  
                     __ccov244_start_blk4 005D                                ??_fun_work 0075  
                       __ccov3_start_blk0 0676                           _EEPROM_ReadByte 04FE  
                              ??_sec_work 0074                                ??_rele_off 0075  
                           ??_clear_alarm 0075                             ??_ms_100_work 0073  
                      __ccov91_start_blk1 0692                        __ccov67_start_blk2 0637  
                      __ccov75_start_blk3 0584                             ??_ms_200_work 0073  
                          _FUN_MEAS_COUNT 06CF                       __ccov237_start_blk1 0643  
                     __ccov181_start_blk1 0682                       __ccov309_start_blk1 00D0  
                     __ccov149_start_blk2 0490                       __ccov157_start_blk3 04B5  
                     __ccov165_start_blk5 0146                       __ccov245_start_blk6 005F  
                            _go_close_alt 05A6                          ??_WDT_Initialize 0075  
            __end_of_LOW_WATER_RESISTANSE 06C4                  _TMR0_SetInterruptHandler 068D  
                               _PORTAbits 000C                                 _PORTCbits 000E  
                       ?_EEPROM_WriteByte 0075                         __end_of_stop_tone 06A0  
                     __end_of_beep_double 061D                         __end_of_switch_wm 03EA  
                       __ccov4_start_blk1 0679                               ?_eeprom_set 0073  
                      ??_EEPROM_WriteByte 0076                      __ccov197_start_blk13 0221  
                    __ccov381_start_blk30 0345                      __ccov373_start_blk22 0331  
                    __ccov357_start_blk15 03B2                      __ccov293_start_blk18 0302  
                               _TRISAbits 008C                                 _TRISCbits 008E  
                      __ccov92_start_blk0 06B7                        __ccov68_start_blk4 063D  
                      __ccov76_start_blk4 0585                       __ccov182_start_blk2 0684  
                     __ccov238_start_blk3 0647                       __ccov158_start_blk4 04BB  
                     __ccov190_start_blk5 0202                       __ccov350_start_blk5 0390  
                     __ccov166_start_blk6 014A                       __ccov246_start_blk7 0063  
                      EEPROM_WriteByte@dt 0075                                _start_tone 06A0  
                       __ccov5_start_blk2 067A                                get_wsp@res 0058  
                  __end_of_FUN_MEAS_COUNT 06D0                        __ccov85_start_blk0 061D  
                      __ccov93_start_blk0 06A0                        __ccov69_start_blk0 0686  
                      __ccov77_start_blk5 0586      __end_of_TMR2_DefaultInterruptHandler 06C8  
            _TMR2_DefaultInterruptHandler 06C6                               __ccovbit1_1 0396  
                             __ccovbit1_3 0394                               __ccovbit1_7 0390  
                             __ccovbit3_2 0395                               __ccovbit3_4 0393  
                             __ccovbit2_8 038F                               __ccovbit3_9 038E  
                             __ccovbit6_6 0391                               __ccovbit9_5 0392  
                     __end_of_clear_alarm 06B0                       __ccov263_start_blk0 0283  
                     __ccov327_start_blk0 023B                       __ccov183_start_blk0 06AB  
                     __ccov239_start_blk5 064D                       __ccov159_start_blk5 04C1  
                     __ccov191_start_blk6 0207                       __ccov167_start_blk7 0151  
                     __ccov351_start_blk7 0396                       __ccov247_start_blk8 0067  
                    __ccov223_start_blk10 01CD                            _ADC_Initialize 066D  
                  ?_OSCILLATOR_Initialize 0073                             __pbitbssBANK0 0100  
                     __end_of_ms_100_work 065E                       __end_of_ms_200_work 02C6  
                       __ccov6_start_blk3 067C                             ??_go_open_alt 0075  
                     start_initialization 002F                      __ccov294_start_blk20 0306  
                    __ccov198_start_blk14 0226                      __ccov382_start_blk31 0346  
                    __ccov374_start_blk23 0338                      __ccov358_start_blk16 03B6  
                       __ccov46_end_blk10 002A                     _RELE_POWER_WORK_DELAY 06CD  
                           ??_sec_30_work 0073                        __ccov86_start_blk1 061E  
                      __ccov94_start_blk1 06A3                        __ccov78_start_blk6 058D  
                 __end_of_EEPROM_ReadByte 0517                       __ccov280_start_blk0 02C6  
                     __ccov264_start_blk1 0287                       __ccov328_start_blk1 023F  
                     __ccov184_start_blk1 06AD                       __ccov192_start_blk7 020C  
                     __ccov352_start_blk9 039B                         __ccov47_end_blk12 002D  
                       __ccov7_start_blk0 06A6                       __ccov46_start_blk10 0029  
                        _beep_short_count 007D                        __ccov95_start_blk0 069A  
                      __ccov87_start_blk2 0621                               _beep_double 060B  
                  __end_of_ADC_Initialize 0676                       __ccov185_start_blk0 01E9  
                     __ccov281_start_blk1 02CB                       __ccov265_start_blk2 028D  
                     __ccov329_start_blk3 0241                       __ccov193_start_blk8 020E  
           ?_TMR2_DefaultInterruptHandler 0073                      __ccov224_start_blk11 01D2  
                    __ccov320_start_blk21 0111                         __ccov8_start_blk1 06A9  
                       _AUTOROTATION_DAYS 06C4                               __pbssCOMMON 0079  
                               ___latbits 0001                             __pcstackBANK0 0058  
                    __ccov199_start_blk15 022B                      __ccov375_start_blk24 033A  
                    __ccov359_start_blk17 03B7                        __ccov96_start_blk1 069D  
                      __ccov88_start_blk3 0627                       __end_of_go_open_alt 060B  
                            sec_work@iled 004C                               ?_start_tone 0073  
                     __ccov346_start_blk0 0383                       __ccov362_start_blk0 0308  
                     __ccov186_start_blk1 01ED                       __ccov282_start_blk2 02D1  
                     __ccov266_start_blk4 0292                                 _beep_long 0530  
                     __end_of_sec_30_work 064F                      _LOW_WATER_RESISTANSE 06C2  
                   _TMR0_InterruptHandler 0053                                 __pnvBANK0 0053  
                       __ccov9_start_blk0 066D                               _clear_alarm 06AB  
                  _PIN_MANAGER_Initialize 058F                       __ccov47_start_blk12 002A  
                             _ms_100_work 064F                        __ccov97_start_blk0 04E4  
                      __ccov89_start_blk5 062D                               _ms_200_work 0283  
                         ?_ADC_Initialize 0073                       __ccov347_start_blk1 0387  
                     __ccov363_start_blk1 030B                       __ccov187_start_blk2 01F3  
                     __ccov283_start_blk3 02D5                       __ccov267_start_blk5 0298  
            ??_INTERRUPT_InterruptManager 0075                      __ccov225_start_blk12 01D7  
                    __ccov321_start_blk22 0114                 __end_of_AUTOROTATION_DAYS 06C6  
                                ?_get_fun 0073                                  ?_get_wsp 0073  
                                ?_go_open 0073                             ??_minute_tick 0073  
                                ?_ms_tick 0073                      __ccov288_start_blk10 02EA  
                    __ccov376_start_blk25 033C                              ??_beep_short 0073  
                          _WSP_MEAS_COUNT 06D0                        __ccov98_start_blk1 04E8  
                        ?_EEPROM_ReadByte 0073                                 _sec_count 0052  
                     __ccov276_start_blk0 064F                       __ccov364_start_blk2 030C  
                     __ccov188_start_blk3 01F8                       __ccov348_start_blk3 0389  
                     __ccov284_start_blk4 02DC                       __ccov268_start_blk8 029D  
                       ??_TMR0_Initialize 0077                                ?_beep_long 0073  
                                _LATAbits 010C                                  _LATCbits 010E  
                               _rele_tick 012F                                 clear_ram0 0694  
                                _PIE1bits 0091                                  _RELE_GAP 06CB  
              ??_TMR0_SetInterruptHandler 0077                                  _PIR1bits 0011  
                               _time_meas 004F                          _time_moving_wait 0050  
                                _TMR0_ISR 061D                                 _time_tone 003F  
                      __ccov99_start_blk2 04ED                                  _TMR2_ISR 062F  
                           _zummer_switch 065E                        __end_of_beep_short 04FE  
                     __ccov277_start_blk1 0653                       __ccov365_start_blk3 031E  
                     __ccov189_start_blk4 01FD                       __ccov349_start_blk4 038B  
                     __ccov285_start_blk7 02E0                       __ccov269_start_blk9 02A3  
                         _beep_long_count 004E                                _ADCON0bits 009D  
                    __ccov314_start_blk11 00E9                      __ccov170_start_blk12 0162  
                    __ccov250_start_blk13 007A                      __ccov226_start_blk13 01DC  
                    __ccov322_start_blk24 011A                              ??_eeprom_set 0058  
          ??_TMR2_DefaultInterruptHandler 0073                               _go_open_alt 05F9  
               ?_TMR2_SetInterruptHandler 0075                    __end_of_WSP_MEAS_COUNT 06D1  
                               _stop_tone 069A                                 _switch_wm 03BE  
                    __ccov289_start_blk11 02ED                      __ccov369_start_blk12 032D  
                    __ccov377_start_blk26 033E                               _sec_30_work 063F  
                         ms_tick@ms_count 0039                       __end_of_minute_tick 0561  
                     __ccov278_start_blk2 0659                       __ccov390_start_blk2 043C  
                     __ccov366_start_blk4 0321                       __ccov286_start_blk8 02E1  
                       _beep_double_count 004D                         ??_TMR2_Initialize 0077  
                              ?_rele_tick 0073                     __end_of_UP_RESISTANSE 06C0  
                     _MELODY_REPEAT_DELAY 06C8                         _ADC_GetConversion 0517  
                         _JUMP_MEAS_COUNT 06CE                        __end_of_eeprom_set 0578  
                          ?_zummer_switch 0073                   ??_OSCILLATOR_Initialize 0075  
                      ?_ADC_GetConversion 0073                       __ccov295_start_blk0 0561  
                     __ccov383_start_blk0 0414                       __ccov391_start_blk3 0442  
                     __ccov279_start_blk4 065C                       __ccov367_start_blk6 032A  
                     __ccov287_start_blk9 02E2                             ??_start_alarm 0075  
              __end_of_SHORT_ZUMMER_DELAY 06D3                      __ccov171_start_blk13 0168  
                    __ccov315_start_blk13 00EB                      __ccov251_start_blk14 0081  
                    __ccov227_start_blk14 01E1                      __ccov323_start_blk25 0121  
                              _ANSELAbits 018C                                _ANSELCbits 018E  
                     ??_ADC_GetConversion 0075                             ??_start_setup 0079  
                              ?_stop_tone 0073                             _time_rele_gap 0041  
                              ?_switch_wm 0073                      __ccov378_start_blk27 0340  
                                __ptext10 0686                                  __ptext11 0578  
                                __ptext20 0517                                  __ptext12 068D  
                                __ptext21 0383                                  __ptext13 058F  
                                __ptext30 05F9                                  __ptext22 023B  
                                __ptext14 0676                                  __ptext31 04C8  
                                __ptext23 01E9                                  __ptext15 066D  
                                __ptext40 012F                                  __ptext32 0462  
                                __ptext24 0486                                  __ptext16 0348  
                                __ptext41 0549                                  __ptext25 05A6  
                                __ptext17 00CC                                  __ptext50 065E  
                                __ptext42 0283                                  __ptext34 062F  
                                __ptext26 03EA                                  __ptext18 067E  
                                __ptext43 060B                                  __ptext35 06C6  
                                __ptext27 018F                                  __ptext19 06AB  
                                __ptext44 04E4                                  __ptext36 02C6  
                                __ptext28 04A7                                  __ptext45 0530  
                                __ptext37 069A                                  __ptext29 05BD  
                                __ptext46 06A0                                  __ptext38 004B  
                                __ptext47 064F                                  __ptext39 063F  
                                __ptext48 061D                                  __ptext49 06B7  
                                _get_jump 0383                                  _go_close 03EA  
                         _BAD_WSP_VOLTAGE 06BC                       __ccov296_start_blk1 0569  
                     __ccov384_start_blk1 0417                       __ccov392_start_blk4 0447  
                     __ccov368_start_blk9 032C                             _time_rotation 0034  
                             ??_beep_long 0073                                  _fun_work 01E9  
    __end_of_TMR0_DefaultInterruptHandler 06BA              _TMR0_DefaultInterruptHandler 06B7  
                                _sec_work 004B                 __end_of_ADC_GetConversion 0530  
                                _rele_off 05BD                         _MOVING_WAIT_DELAY 06C9  
                            ?_beep_double 0073                                  int$flags 007E  
                       ??_TMR2_StartTimer 0075        __end_of_INTERRUPT_InterruptManager 002D  
              _INTERRUPT_InterruptManager 0004                       __ccov297_start_blk2 056E  
                     __ccov385_start_blk2 0418                       __ccov393_start_blk5 0451  
                          ms_tick@s_count 0037                      __ccov332_start_blk10 024D  
                    __ccov172_start_blk14 0169                      __ccov316_start_blk14 00F5  
                    __ccov228_start_blk15 01E4                      __ccov340_start_blk23 026F  
                    __ccov252_start_blk16 0088                      __ccov324_start_blk26 0124  
                    __ccov260_start_blk28 00C4                      get_jump@jump_counter 0049  
                             _minute_tick 0549                                _INTCONbits 000B  
                      __ccov10_start_blk1 0670             __end_of_HIGH_WATER_RESISTANSE 06C2  
                          __pstringtext10 06C4                            __pstringtext11 06CB  
                          __pstringtext12 06CC                            __pstringtext13 06CD  
                          __pstringtext14 06CE                            __pstringtext15 06CF  
                          __pstringtext16 06D0                            __pstringtext17 06D1  
                          __pstringtext18 06D2                       __ccov100_start_blk4 04F1  
                    __ccov379_start_blk28 0341                             _hardware_work 0348  
                     __end_of_start_alarm 0686                       __end_of_start_setup 0348  
                                intlevel1 0000                              ??_start_tone 0073  
                     __ccov386_start_blk3 041B                       __ccov298_start_blk4 0575  
                     __ccov394_start_blk6 0456                   __end_of_JUMP_MEAS_COUNT 06CF  
                 ?_PIN_MANAGER_Initialize 0073                               ??_rele_tick 0073  
               __end_of_MOVING_WAIT_DELAY 06CA                         _LONG_ZUMMER_DELAY 06D1  
                     EEPROM_ReadByte@addr 0077                        __ccov11_start_blk2 0671  
                        ??_ADC_Initialize 0075                              ?_clear_alarm 0073  
                          _go_close_short 0462             ?_TMR0_DefaultInterruptHandler 0073  
                         ??_zummer_switch 0073                         __ccov100_end_blk4 04F6  
                      __ccov200_end_blk16 0234                       __ccov101_start_blk5 04F6  
                            ?_ms_100_work 0073                              ?_ms_200_work 0073  
                       __ccov101_end_blk5 04F7                         __ccov102_end_blk6 04FB  
                       __ccov110_end_blk8 0549                             __pstringtext1 06B4  
                           __pstringtext2 06BA                             __pstringtext3 06BC  
                           __pstringtext4 06BE                             __pstringtext5 06C8  
                           __pstringtext6 06C9                             __pstringtext7 06CA  
                           __pstringtext8 06C0                             __pstringtext9 06C2  
                      __ccov201_end_blk17 0238                       __ccov299_start_blk0 0348  
                     __ccov387_start_blk4 041F                       __ccov395_start_blk7 0457  
                      __end_of_start_tone 06A6                                _OPTION_REG 0095  
                       _time_zummer_short 003D                      __ccov333_start_blk11 0252  
                    __ccov173_start_blk15 016F                      __ccov341_start_blk24 0277  
                    __ccov317_start_blk16 00FB                      __ccov229_start_blk17 01E7  
                    __ccov253_start_blk18 008C                      __ccov325_start_blk28 012A  
                    __ccov261_start_blk29 00C7       __end_of_FRIMWARE_VERSION_EEPROM_ADR 06CB  
             _FRIMWARE_VERSION_EEPROM_ADR 06CA                               _time_melody 0051  
                       _autorotation_work 018F                         __ccov111_end_blk0 060F  
                       __ccov103_end_blk8 04FE                           _TMR0_Initialize 0578  
              __end_of_AUTOROTATION_DELAY 06B7                        __ccov12_start_blk3 0674  
                 __end_of_BAD_WSP_VOLTAGE 06BE                        ?_autorotation_work 0073  
                             ??_stop_tone 0073                               ??_switch_wm 0075  
                       __ccov104_end_blk0 0534                         __ccov112_end_blk1 0615  
                          ?_hardware_work 0073                         __ccov120_end_blk6 0414  
                      __ccov202_end_blk19 023B                       __ccov102_start_blk6 04F7  
                     __ccov110_start_blk8 0546                         __ccov121_end_blk0 0466  
                       __ccov105_end_blk1 053A                         __ccov113_end_blk3 061A  
                        _time_zummer_long 003B            __end_of_PIN_MANAGER_Initialize 05A6  
                     ??_autorotation_work 0075                 __end_of_LONG_ZUMMER_DELAY 06D2  
                        _EEPROM_WriteByte 043C                         __ccov122_end_blk1 046C  
                       __ccov106_end_blk2 053D                         __ccov130_end_blk3 04DC  
                       __ccov114_end_blk5 061D                         __ccov210_end_blk8 03E1  
                     __ccov388_start_blk6 0434                       __ccov396_start_blk8 045D  
                  __end_of_go_close_short 0486                     _TMR2_InterruptHandler 0055  
                       __ccov115_end_blk0 03EE                         __ccov203_end_blk0 03C2  
                       __ccov123_end_blk2 0471                         __ccov107_end_blk4 0541  
                       __ccov131_end_blk4 04E1                         __ccov211_end_blk9 03E4  
